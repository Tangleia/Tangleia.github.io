<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>数据结构--二叉树（Java）</title>
      <link href="/2020/07/29/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--%E4%BA%8C%E5%8F%89%E6%A0%91%EF%BC%88Java%EF%BC%89/"/>
      <url>/2020/07/29/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--%E4%BA%8C%E5%8F%89%E6%A0%91%EF%BC%88Java%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="数据结构–二叉树（Java）"><a href="#数据结构–二叉树（Java）" class="headerlink" title="数据结构–二叉树（Java）"></a>数据结构–二叉树（Java）</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="树的常用术语-结合示意图理解"><a href="#树的常用术语-结合示意图理解" class="headerlink" title="树的常用术语(结合示意图理解)"></a>树的常用术语(结合示意图理解)</h4><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200729224821077.png" alt="image-20200729224821077"></p><ul><li>节点</li><li>根节点</li><li>父节点</li><li>子节点</li><li>叶子节点 (没有子节点的节点)</li><li>节点的权(节点值)</li><li>路径(从root节点找到该节点的路线)</li><li>层</li><li>子树</li><li>树的高度(最大层数)</li><li>森林 :多颗子树构成森林</li></ul><h4 id="树存储方式优势"><a href="#树存储方式优势" class="headerlink" title="树存储方式优势"></a>树存储方式优势</h4><p>能提高数据存储，读取的效率,  比如利用 二叉排序树(Binary Sort Tree)，既可以保证数据的检索速度，同时也可以保证数据的插入，删除，修改的速度</p><h4 id="二叉树的概念"><a href="#二叉树的概念" class="headerlink" title="二叉树的概念"></a>二叉树的概念</h4><ul><li><p>每个节点最多只能有两个子节点的一种形式称为二叉树</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200729224615068.png" alt="image-20200729224615068"></p></li><li><p>二叉树的子节点分为左节点和右节点</p></li><li><p>如果该二叉树的所有叶子节点都在最后一层，并且结点总数= 2^n -1 , n 为层数，则我们称为满二叉树。</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200729224725059.png" alt="image-20200729224725059"></p></li><li><p>如果该二叉树的所有叶子节点都在最后一层或者倒数第二层，而且最后一层的叶子节点在左边连续，倒数第二层的叶子节点在右边连续，我们称为完全二叉树</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200729224756637.png" alt="image-20200729224756637"></p></li></ul><h4 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h4><ul><li>前序遍历: 先输出父节点，再遍历左子树和右子树</li><li>中序遍历: 先遍历左子树，再输出父节点，再遍历右子树</li><li>后序遍历: 先遍历左子树，再遍历右子树，最后输出父节点</li></ul><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.tree;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> guizimo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/7/29 8:03 下午</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TreeDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        BinaryTree binaryTree = <span class="keyword">new</span> BinaryTree();</span><br><span class="line">        HeroNode root = <span class="keyword">new</span> HeroNode(<span class="number">1</span>, <span class="string">"宋江"</span>);</span><br><span class="line">        HeroNode node2 = <span class="keyword">new</span> HeroNode(<span class="number">2</span>, <span class="string">"李逵"</span>);</span><br><span class="line">        HeroNode node3 = <span class="keyword">new</span> HeroNode(<span class="number">3</span>, <span class="string">"卢俊义"</span>);</span><br><span class="line">        HeroNode node4 = <span class="keyword">new</span> HeroNode(<span class="number">4</span>, <span class="string">"吴用"</span>);</span><br><span class="line">        HeroNode node5 = <span class="keyword">new</span> HeroNode(<span class="number">5</span>, <span class="string">"林冲"</span>);</span><br><span class="line">        HeroNode node6 = <span class="keyword">new</span> HeroNode(<span class="number">6</span>, <span class="string">"鲁智深"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//创建二叉树</span></span><br><span class="line">        root.setLeft(node2);</span><br><span class="line">        root.setRight(node3);</span><br><span class="line">        node2.setLeft(node4);</span><br><span class="line">        node3.setLeft(node5);</span><br><span class="line">        node3.setRight(node6);</span><br><span class="line">        binaryTree.setRoot(root);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//前序遍历</span></span><br><span class="line"><span class="comment">//        HeroNode heroNode = binaryTree.preOrderSearch(5);</span></span><br><span class="line"><span class="comment">//        System.out.println(heroNode);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 二叉树</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BinaryTree</span> </span>&#123;</span><br><span class="line">    <span class="comment">//根节点</span></span><br><span class="line">    <span class="keyword">private</span> HeroNode root;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRoot</span><span class="params">(HeroNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.root = root;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除二叉树的节点</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delNode</span><span class="params">(<span class="keyword">int</span> no)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (root.getNo() == no) &#123;</span><br><span class="line">                root = <span class="keyword">null</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                root.delNode(no);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"二叉树为空"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//前序</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">preOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.root != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.root.preOrder();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"二叉树为空"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//中序</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">infixOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.root != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.root.infixOrder();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"二叉树为空"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//后序</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.root != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.root.postOrder();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"二叉树为空"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//前序查找</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> HeroNode <span class="title">preOrderSearch</span><span class="params">(<span class="keyword">int</span> no)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> root.preOrderSearch(no);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//中序查找</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> HeroNode <span class="title">infixOrderSearch</span><span class="params">(<span class="keyword">int</span> no)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> root.infixOrderSearch(no);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//后序查找</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> HeroNode <span class="title">postOrderSearch</span><span class="params">(<span class="keyword">int</span> no)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.root.postOrderSearch(no);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 节点</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HeroNode</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> no;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> HeroNode left;</span><br><span class="line">    <span class="keyword">private</span> HeroNode right;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HeroNode</span><span class="params">(<span class="keyword">int</span> no, String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.no = no;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getNo</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> no;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNo</span><span class="params">(<span class="keyword">int</span> no)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.no = no;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> HeroNode <span class="title">getLeft</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> left;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setLeft</span><span class="params">(HeroNode left)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.left = left;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> HeroNode <span class="title">getRight</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> right;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRight</span><span class="params">(HeroNode right)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.right = right;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"HeroNode&#123;"</span> +</span><br><span class="line">                <span class="string">"no="</span> + no +</span><br><span class="line">                <span class="string">", name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除节点</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delNode</span><span class="params">(<span class="keyword">int</span> no)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//判读左节点是否为空，找到</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.left != <span class="keyword">null</span> &amp;&amp; <span class="keyword">this</span>.left.no == no) &#123;</span><br><span class="line">            <span class="keyword">this</span>.left = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断右节点，找到</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.right != <span class="keyword">null</span> &amp;&amp; <span class="keyword">this</span>.right.no == no) &#123;</span><br><span class="line">            <span class="keyword">this</span>.right = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断左节点，未找到，递归</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.left.delNode(no);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断右节点，未找到，递归</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.right != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.right.delNode(no);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//前序</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">preOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.left.preOrder();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.right != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.right.preOrder();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//中序</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">infixOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.left.infixOrder();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.right != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.right.infixOrder();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//后序</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postOrder</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.left.postOrder();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.right != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">this</span>.right.postOrder();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//前序遍历查找</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> HeroNode <span class="title">preOrderSearch</span><span class="params">(<span class="keyword">int</span> no)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.no == no) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        HeroNode resNode = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">//判断左子树</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">            resNode = <span class="keyword">this</span>.left.preOrderSearch(no);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (resNode != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> resNode;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断右子树</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.right != <span class="keyword">null</span>) &#123;</span><br><span class="line">            resNode = <span class="keyword">this</span>.right.preOrderSearch(no);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> resNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//中序遍历查找</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> HeroNode <span class="title">infixOrderSearch</span><span class="params">(<span class="keyword">int</span> no)</span> </span>&#123;</span><br><span class="line">        HeroNode resNode = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">            resNode = <span class="keyword">this</span>.left.infixOrderSearch(no);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (resNode != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> resNode;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.no == no) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.right != <span class="keyword">null</span>) &#123;</span><br><span class="line">            resNode = <span class="keyword">this</span>.right.infixOrderSearch(no);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> resNode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//后序遍历查找</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> HeroNode <span class="title">postOrderSearch</span><span class="params">(<span class="keyword">int</span> no)</span> </span>&#123;</span><br><span class="line">        HeroNode resNode = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">            resNode = <span class="keyword">this</span>.left.postOrderSearch(no);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (resNode != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> resNode;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.right != <span class="keyword">null</span>) &#123;</span><br><span class="line">            resNode = <span class="keyword">this</span>.right.postOrderSearch(no);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (resNode != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> resNode;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.no == no) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> resNode;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>感谢</strong></p><blockquote><p>尚硅谷</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数据结构--哈希表（Java）</title>
      <link href="/2020/07/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--%E5%93%88%E5%B8%8C%E8%A1%A8%EF%BC%88Java%EF%BC%89/"/>
      <url>/2020/07/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84--%E5%93%88%E5%B8%8C%E8%A1%A8%EF%BC%88Java%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="数据结构–哈希表（Java）"><a href="#数据结构–哈希表（Java）" class="headerlink" title="数据结构–哈希表（Java）"></a>数据结构–哈希表（Java）</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p><strong>哈希表</strong>底层是<strong>数组加链表</strong>或者是<strong>数组加二叉树</strong>，一个数组里面有多个链表，通过散列函数来提高效率</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.hashtab;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> guizimo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/7/23 10:29 下午</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HashTabDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        HashTab hashTab = <span class="keyword">new</span> HashTab(<span class="number">7</span>);</span><br><span class="line">        String key = <span class="string">""</span>;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"add:添加"</span>);</span><br><span class="line">            System.out.println(<span class="string">"list:显示"</span>);</span><br><span class="line">            System.out.println(<span class="string">"find:显示"</span>);</span><br><span class="line">            System.out.println(<span class="string">"exit:退出"</span>);</span><br><span class="line">            key = scanner.next();</span><br><span class="line">            <span class="keyword">switch</span> (key)&#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"add"</span>:</span><br><span class="line">                    System.out.println(<span class="string">"输入id"</span>);</span><br><span class="line">                    <span class="keyword">int</span> id = scanner.nextInt();</span><br><span class="line">                    System.out.println(<span class="string">"输入名字"</span>);</span><br><span class="line">                    String name =  scanner.next();</span><br><span class="line">                    Emp emp = <span class="keyword">new</span> Emp(id, name);</span><br><span class="line">                    hashTab.add(emp);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"list"</span>:</span><br><span class="line">                   hashTab.list();</span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"find"</span>:</span><br><span class="line">                    System.out.println(<span class="string">"请输入id"</span>);</span><br><span class="line">                    id = scanner.nextInt();</span><br><span class="line">                    hashTab.find(id);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">"exit"</span>:</span><br><span class="line">                    scanner.close();</span><br><span class="line">                    System.exit(<span class="number">0</span>);</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Emp</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> Emp next;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Emp</span><span class="params">(<span class="keyword">int</span> id, String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//哈希表</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HashTab</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> EmpLinkedList[] empLinkedListArray;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> size;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造器</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">HashTab</span><span class="params">(<span class="keyword">int</span> size)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.size = size;</span><br><span class="line">        empLinkedListArray = <span class="keyword">new</span> EmpLinkedList[size];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">            empLinkedListArray[i] = <span class="keyword">new</span> EmpLinkedList();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(Emp emp)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> empLinkedListNo = hashFun(emp.id);</span><br><span class="line">        empLinkedListArray[empLinkedListNo].add(emp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> empLinkedListNo = hashFun(id);</span><br><span class="line">        Emp emp = empLinkedListArray[empLinkedListNo].find(id);</span><br><span class="line">        <span class="keyword">if</span> (emp != <span class="keyword">null</span>)&#123;</span><br><span class="line">            System.out.printf(<span class="string">"在第%d条链表中找到id=%d\n"</span>,(empLinkedListNo+<span class="number">1</span>),id);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"没有找到"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//遍历</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">list</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) &#123;</span><br><span class="line">            empLinkedListArray[i].list(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//散列(取模)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashFun</span><span class="params">(<span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id % size;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">EmpLinkedList</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Emp head;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(Emp emp)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(head == <span class="keyword">null</span>)&#123;</span><br><span class="line">            head = emp;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Emp curEmp = head;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(curEmp.next == <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            curEmp = curEmp.next;</span><br><span class="line">        &#125;</span><br><span class="line">        curEmp.next = emp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">list</span><span class="params">(<span class="keyword">int</span> no)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(head == <span class="keyword">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"第"</span>+(no+<span class="number">1</span>)+<span class="string">"条链表为空"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.print(<span class="string">"第"</span>+(no+<span class="number">1</span>)+<span class="string">"条链表信息"</span>);</span><br><span class="line">        Emp curemp = head;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            System.out.printf(<span class="string">"id=%d,name=%s\t"</span>,curemp.id,curemp.name);</span><br><span class="line">            <span class="keyword">if</span>(curemp.next == <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            curemp = curemp.next;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Emp <span class="title">find</span><span class="params">(<span class="keyword">int</span> id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(head == <span class="keyword">null</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"链表为空"</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Emp curEmp = head;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(curEmp.id == id)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(curEmp.next == <span class="keyword">null</span>)&#123;</span><br><span class="line">                curEmp = <span class="keyword">null</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            curEmp = curEmp.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> curEmp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>感谢</strong></p><blockquote><p>尚硅谷</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>查找--斐波那契查找（Java）</title>
      <link href="/2020/07/23/%E6%9F%A5%E6%89%BE--%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%9F%A5%E6%89%BE%EF%BC%88Java%EF%BC%89/"/>
      <url>/2020/07/23/%E6%9F%A5%E6%89%BE--%E6%96%90%E6%B3%A2%E9%82%A3%E5%A5%91%E6%9F%A5%E6%89%BE%EF%BC%88Java%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="查找–斐波那契查找（Java）"><a href="#查找–斐波那契查找（Java）" class="headerlink" title="查找–斐波那契查找（Java）"></a>查找–斐波那契查找（Java）</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p><strong>黄金分割点</strong>是指把一条线段分割为两部分，使其中一部分与全长之比等于另一部分与这部分之比。取其前三位数字的近似值是0.618。</p><p><strong>斐波那契数列</strong> {1, 1, 2, 3, 5, 8, 13, 21, 34, 55 } 发现斐波那契数列的两个相邻数 的比例，无限接近 黄金分割值0.618</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>利用<strong>斐波那契数列</strong>的特性来查找mid</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.search;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> guizimo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/7/23 10:06 下午</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FibonacciSearch</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> maxSize = <span class="number">20</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">8</span>, <span class="number">10</span>, <span class="number">89</span>, <span class="number">100</span>, <span class="number">1000</span>&#125;;</span><br><span class="line">        System.out.println(fibSearch(arr,<span class="number">8</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//斐波那契数列</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] fib() &#123;</span><br><span class="line">        <span class="keyword">int</span>[] f = <span class="keyword">new</span> <span class="keyword">int</span>[maxSize];</span><br><span class="line">        f[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">        f[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; maxSize; i++) &#123;</span><br><span class="line">            f[i] = f[i - <span class="number">1</span>] + f[i - <span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> f;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">fibSearch</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> low = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> high = a.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> mid = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> f[] = fib();</span><br><span class="line">        <span class="keyword">while</span> (high &gt; f[k] - <span class="number">1</span>) &#123;</span><br><span class="line">            k++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span>[] temp = Arrays.copyOf(a, f[k]);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = high + <span class="number">1</span>; i &lt; temp.length; i++) &#123;</span><br><span class="line">            temp[i] = a[high];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (low &lt;= high) &#123;</span><br><span class="line">            mid = low + f[k - <span class="number">1</span>] - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> (key &lt; temp[mid]) &#123;</span><br><span class="line">                high = mid - <span class="number">1</span>;</span><br><span class="line">                k--;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (key &gt; temp[mid]) &#123;</span><br><span class="line">                low = mid + <span class="number">1</span>;</span><br><span class="line">                k -= <span class="number">2</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (mid &lt;= high) &#123;</span><br><span class="line">                    <span class="keyword">return</span> mid;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> high;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>感谢</strong></p><blockquote><p>尚硅谷</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>牛客网--字节跳动面试题--特征提取</title>
      <link href="/2020/07/18/%E7%89%9B%E5%AE%A2%E7%BD%91--%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E9%9D%A2%E8%AF%95%E9%A2%98--%E7%89%B9%E5%BE%81%E6%8F%90%E5%8F%96/"/>
      <url>/2020/07/18/%E7%89%9B%E5%AE%A2%E7%BD%91--%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E9%9D%A2%E8%AF%95%E9%A2%98--%E7%89%B9%E5%BE%81%E6%8F%90%E5%8F%96/</url>
      
        <content type="html"><![CDATA[<h2 id="牛客网–字节跳动面试题–特征提取"><a href="#牛客网–字节跳动面试题–特征提取" class="headerlink" title="牛客网–字节跳动面试题–特征提取"></a>牛客网–字节跳动面试题–特征提取</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h4><p>链接：<a href="https://www.nowcoder.com/questionTerminal/5afcf93c419a4aa793e9b325d01957e2" target="_blank" rel="noopener">特征提取</a> 来源：牛客网</p><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>小明是一名算法工程师，同时也是一名铲屎官。某天，他突发奇想，想从猫咪的视频里挖掘一些猫咪的运动信息。为了提取运动信息，他需要从视频的每一帧提取“猫咪特征”。一个猫咪特征是一个两维的vector&lt;x, y&gt;。如果x_1=x_2 and y_1=y_2，那么这俩是同一个特征。</p><p>因此，如果喵咪特征连续一致，可以认为喵咪在运动。也就是说，如果特征&lt;a, b&gt;在持续帧里出现，那么它将构成特征运动。比如，特征&lt;a, b&gt;在第2/3/4/7/8帧出现，那么该特征将形成两个特征运动2-3-4 和7-8。</p><p>现在，给定每一帧的特征，特征的数量可能不一样。小明期望能找到最长的特征运动。</p><h5 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述:"></a><strong>输入描述:</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">第一行包含一个正整数N，代表测试用例的个数。</span><br><span class="line"></span><br><span class="line">每个测试用例的第一行包含一个正整数M，代表视频的帧数。</span><br><span class="line"></span><br><span class="line">接下来的M行，每行代表一帧。其中，第一个数字是该帧的特征个数，接下来的数字是在特征的取值；比如样例输入第三行里，2代表该帧有两个猫咪特征，&lt;1，1&gt;和&lt;2，2&gt;</span><br><span class="line">所有用例的输入特征总数和&lt;100000</span><br><span class="line"></span><br><span class="line">N满足1≤N≤100000，M满足1≤M≤10000，一帧的特征个数满足 ≤ 10000。</span><br><span class="line">特征取值均为非负整数。</span><br></pre></td></tr></table></figure><h5 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述:"></a><strong>输出描述:</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对每一个测试用例，输出特征运动的长度作为一行</span><br></pre></td></tr></table></figure><h5 id="输入例子1"><a href="#输入例子1" class="headerlink" title="输入例子1:"></a><strong>输入例子1:</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">8</span><br><span class="line">2 1 1 2 2</span><br><span class="line">2 1 1 1 4</span><br><span class="line">2 1 1 2 2</span><br><span class="line">2 2 2 1 4</span><br><span class="line">0</span><br><span class="line">0</span><br><span class="line">1 1 1</span><br><span class="line">1 1 1</span><br></pre></td></tr></table></figure><h5 id="输出例子1"><a href="#输出例子1" class="headerlink" title="输出例子1:"></a><strong>输出例子1:</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h5 id="例子说明1"><a href="#例子说明1" class="headerlink" title="例子说明1:"></a><strong>例子说明1:</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">特征&lt;1,1&gt;在连续的帧中连续出现3次，相比其他特征连续出现的次数大，所以输出3</span><br></pre></td></tr></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>1、使用map，将遍历的得到的第一个坐标作为key存入map集合，在辅助map里面记录次坐标的次数</p><p>2、遍历所有的帧，比较最大的次数</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> guizimo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/7/18 2:25 下午</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> n = scanner.nextInt();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            HashMap&lt;String, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">            HashMap&lt;String, Integer&gt; temp = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">            <span class="keyword">int</span> m = scanner.nextInt();</span><br><span class="line">            <span class="keyword">int</span> max = <span class="number">1</span>;</span><br><span class="line">            <span class="comment">//遍历帧</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line">                <span class="comment">//清空辅助map</span></span><br><span class="line">                temp.clear();</span><br><span class="line">                <span class="keyword">int</span> number = scanner.nextInt();</span><br><span class="line">                <span class="comment">//遍历帧内的坐标</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; number; k++) &#123;</span><br><span class="line">                    <span class="keyword">int</span> x = scanner.nextInt();</span><br><span class="line">                    <span class="keyword">int</span> y = scanner.nextInt();</span><br><span class="line">                    <span class="comment">//拼接key</span></span><br><span class="line">                    String key = String.valueOf(x) + <span class="string">" "</span> + String.valueOf(y);</span><br><span class="line">                    temp.put(key,map.getOrDefault(key,<span class="number">0</span>)+<span class="number">1</span>);</span><br><span class="line">                    max = Math.max(temp.get(key),max);</span><br><span class="line">                &#125;</span><br><span class="line">                map.clear();</span><br><span class="line">                map.putAll(temp);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (max &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">                System.out.println(<span class="number">1</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(max);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>感谢</strong></p><blockquote><p>牛客网</p><p>字节跳动</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>牛客网--字节跳动面试题--万万没想到之聪明的编辑</title>
      <link href="/2020/07/18/%E7%89%9B%E5%AE%A2%E7%BD%91--%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E9%9D%A2%E8%AF%95%E9%A2%98--%E4%B8%87%E4%B8%87%E6%B2%A1%E6%83%B3%E5%88%B0%E4%B9%8B%E8%81%AA%E6%98%8E%E7%9A%84%E7%BC%96%E8%BE%91/"/>
      <url>/2020/07/18/%E7%89%9B%E5%AE%A2%E7%BD%91--%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E9%9D%A2%E8%AF%95%E9%A2%98--%E4%B8%87%E4%B8%87%E6%B2%A1%E6%83%B3%E5%88%B0%E4%B9%8B%E8%81%AA%E6%98%8E%E7%9A%84%E7%BC%96%E8%BE%91/</url>
      
        <content type="html"><![CDATA[<h2 id="牛客网–字节跳动面试题–万万没想到之聪明的编辑"><a href="#牛客网–字节跳动面试题–万万没想到之聪明的编辑" class="headerlink" title="牛客网–字节跳动面试题–万万没想到之聪明的编辑"></a>牛客网–字节跳动面试题–万万没想到之聪明的编辑</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h4><p>链接：<a href="https://www.nowcoder.com/questionTerminal/42852fd7045c442192fa89404ab42e92" target="_blank" rel="noopener">万万没想到之聪明的编辑</a> 来源：牛客网</p><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>我叫王大锤，是一家出版社的编辑。我负责校对投稿来的英文稿件，这份工作非常烦人，因为每天都要去修正无数的拼写错误。但是，优秀的人总能在平凡的工作中发现真理。我发现一个发现拼写错误的捷径：</p><ol><li><p>三个同样的字母连在一起，一定是拼写错误，去掉一个的就好啦：比如 helllo -&gt; hello</p></li><li><p>两对一样的字母（AABB型）连在一起，一定是拼写错误，去掉第二对的一个字母就好啦：比如 helloo -&gt; hello</p></li><li><p>上面的规则优先“从左到右”匹配，即如果是AABBCC，虽然AABB和BBCC都是错误拼写，应该优先考虑修复AABB，结果为AABCC</p></li></ol><p>我特喵是个天才！我在蓝翔学过挖掘机和程序设计，按照这个原理写了一个自动校对器，工作效率从此起飞。用不了多久，我就会出任CEO，当上董事长，迎娶白富美，走上人生巅峰，想想都有点小激动呢！</p><p>……</p><p>万万没想到，我被开除了，临走时老板对我说： “做人做事要兢兢业业、勤勤恳恳、本本分分，人要是行，干一行行一行。一行行行行行；要是不行，干一行不行一行，一行不行行行不行。” 我现在整个人红红火火恍恍惚惚的……</p><p>请听题：请实现大锤的自动校对程序</p><h5 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述:"></a><strong>输入描述:</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">第一行包括一个数字N，表示本次用例包括多少个待校验的字符串。</span><br><span class="line"></span><br><span class="line">后面跟随N行，每行为一个待校验的字符串。</span><br></pre></td></tr></table></figure><h5 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述:"></a><strong>输出描述:</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">N行，每行包括一个被修复后的字符串。</span><br></pre></td></tr></table></figure><h5 id="输入例子1"><a href="#输入例子1" class="headerlink" title="输入例子1:"></a><strong>输入例子1:</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">helloo</span><br><span class="line">wooooooow</span><br></pre></td></tr></table></figure><h5 id="输出例子1"><a href="#输出例子1" class="headerlink" title="输出例子1:"></a><strong>输出例子1:</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hello</span><br><span class="line">woow</span><br></pre></td></tr></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>使用Java的正则表达式</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><p>如果不是看到，绝对不会想到这样的解法（代码来自牛客<a href="https://www.nowcoder.com/profile/313619677" target="_blank" rel="noopener">Lunatic201904011812400</a>）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> guizimo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/7/17 9:48 下午</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">zijie1</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span> line = scanner.nextInt();</span><br><span class="line">        scanner.nextLine();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt; line;i++)&#123;</span><br><span class="line">            System.out.println(scanner.nextLine().replaceAll(<span class="string">"(.)\\1+"</span>,<span class="string">"$1$1"</span>).replaceAll(<span class="string">"(.)\\1(.)\\2"</span>,<span class="string">"$1$1$2"</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>感谢</strong></p><blockquote><p>牛客网</p><p>字节跳动</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>牛客网--字节跳动面试题--万万没想到之抓捕孔连顺</title>
      <link href="/2020/07/18/%E7%89%9B%E5%AE%A2%E7%BD%91--%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E9%9D%A2%E8%AF%95%E9%A2%98--%E4%B8%87%E4%B8%87%E6%B2%A1%E6%83%B3%E5%88%B0%E4%B9%8B%E6%8A%93%E6%8D%95%E5%AD%94%E8%BF%9E%E9%A1%BA/"/>
      <url>/2020/07/18/%E7%89%9B%E5%AE%A2%E7%BD%91--%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E9%9D%A2%E8%AF%95%E9%A2%98--%E4%B8%87%E4%B8%87%E6%B2%A1%E6%83%B3%E5%88%B0%E4%B9%8B%E6%8A%93%E6%8D%95%E5%AD%94%E8%BF%9E%E9%A1%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="牛客网–字节跳动面试题–万万没想到之抓捕孔连顺"><a href="#牛客网–字节跳动面试题–万万没想到之抓捕孔连顺" class="headerlink" title="牛客网–字节跳动面试题–万万没想到之抓捕孔连顺"></a>牛客网–字节跳动面试题–万万没想到之抓捕孔连顺</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h4><p>链接：<a href="https://www.nowcoder.com/questionTerminal/c0803540c94848baac03096745b55b9b" target="_blank" rel="noopener">万万没想到之抓捕孔连顺</a> 来源：牛客网</p><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>我叫王大锤，是一名特工。我刚刚接到任务：在字节跳动大街进行埋伏，抓捕恐怖分子孔连顺。和我一起行动的还有另外两名特工，我提议</p><ol><li><p>我们在字节跳动大街的N个建筑中选定3个埋伏地点。</p></li><li><p>为了相互照应，我们决定相距最远的两名特工间的距离不超过D。</p></li></ol><p>我特喵是个天才! 经过精密的计算，我们从X种可行的埋伏方案中选择了一种。这个方案万无一失，颤抖吧，孔连顺！</p><p>……</p><p>万万没想到，计划还是失败了，孔连顺化妆成小龙女，混在cosplay的队伍中逃出了字节跳动大街。只怪他的伪装太成功了，就是杨过本人来了也发现不了的！</p><p>请听题：给定N（可选作为埋伏点的建筑物数）、D（相距最远的两名特工间的距离的最大值）以及可选建筑的坐标，计算在这次行动中，大锤的小队有多少种埋伏选择。</p><p>注意：</p><ol><li><p>两个特工不能埋伏在同一地点</p></li><li><p>三个特工是等价的：即同样的位置组合(A, B, C) 只算一种埋伏方法，不能因“特工之间互换位置”而重复使用</p></li></ol><h5 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述:"></a><strong>输入描述:</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">第一行包含空格分隔的两个数字 N和D(1 ≤ N ≤ 1000000; 1 ≤ D ≤ 1000000)</span><br><span class="line"></span><br><span class="line">第二行包含N个建筑物的的位置，每个位置用一个整数（取值区间为[0, 1000000]）表示，从小到大排列（将字节跳动大街看做一条数轴）</span><br></pre></td></tr></table></figure><h5 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述:"></a><strong>输出描述:</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">一个数字，表示不同埋伏方案的数量。结果可能溢出，请对 99997867 取模</span><br></pre></td></tr></table></figure><h5 id="输入例子1"><a href="#输入例子1" class="headerlink" title="输入例子1:"></a><strong>输入例子1:</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4 3</span><br><span class="line">1 2 3 4</span><br></pre></td></tr></table></figure><h5 id="输出例子1"><a href="#输出例子1" class="headerlink" title="输出例子1:"></a><strong>输出例子1:</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><h5 id="例子说明1"><a href="#例子说明1" class="headerlink" title="例子说明1:"></a><strong>例子说明1:</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可选方案 (1, 2, 3), (1, 2, 4), (1, 3, 4), (2, 3, 4)</span><br></pre></td></tr></table></figure><h5 id="输入例子2"><a href="#输入例子2" class="headerlink" title="输入例子2:"></a><strong>输入例子2:</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5 19</span><br><span class="line">1 10 20 30 50</span><br></pre></td></tr></table></figure><h5 id="输出例子2"><a href="#输出例子2" class="headerlink" title="输出例子2:"></a><strong>输出例子2:</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><h5 id="例子说明2"><a href="#例子说明2" class="headerlink" title="例子说明2:"></a><strong>例子说明2:</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可选方案 (1, 10, 20)</span><br></pre></td></tr></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>1、首先确定范围，计算排列组合，从第三个数开始判断，因为必须有三个数嘛，判断违法的次数，如果当前数字不合法，那么违法的次数加一，那么每次的次数为（当前第几个数-违法次数）x（当前第几个数-违法次数）/ 2</p><p>2、累加每次范围的次数，就可以得到全部的了</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> guizimo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/7/17 10:04 下午</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">zijie2</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">while</span> (scanner.hasNext()) &#123;</span><br><span class="line">            <span class="keyword">int</span> n = scanner.nextInt();</span><br><span class="line">            <span class="keyword">int</span> d = scanner.nextInt();</span><br><span class="line">            <span class="keyword">int</span>[] position = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">            scanner.nextLine();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">                position[i] = scanner.nextInt();</span><br><span class="line">            &#125;</span><br><span class="line">            run(n, d, position);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> d, <span class="keyword">int</span>[] position)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> sum = <span class="number">0L</span>;</span><br><span class="line">        <span class="keyword">long</span> mod = <span class="number">99997867</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="comment">//从第三个开始判断，判断是否违法，如果违法j++</span></span><br><span class="line">            <span class="keyword">while</span> (i &gt;= <span class="number">2</span> &amp;&amp; position[i] - position[j] &gt; d) &#123;</span><br><span class="line">                j++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//计算合法的次数，n(n-i)/2</span></span><br><span class="line">            sum += (<span class="keyword">long</span>) (i - j) * (<span class="keyword">long</span>) (i - j - <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sum % mod);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>感谢</strong></p><blockquote><p>牛客网</p><p>字节跳动</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>牛客网--字节跳动面试题--雀魂启动</title>
      <link href="/2020/07/18/%E7%89%9B%E5%AE%A2%E7%BD%91--%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E9%9D%A2%E8%AF%95%E9%A2%98--%E9%9B%80%E9%AD%82%E5%90%AF%E5%8A%A8/"/>
      <url>/2020/07/18/%E7%89%9B%E5%AE%A2%E7%BD%91--%E5%AD%97%E8%8A%82%E8%B7%B3%E5%8A%A8%E9%9D%A2%E8%AF%95%E9%A2%98--%E9%9B%80%E9%AD%82%E5%90%AF%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="牛客网–字节跳动面试题–雀魂启动"><a href="#牛客网–字节跳动面试题–雀魂启动" class="headerlink" title="牛客网–字节跳动面试题–雀魂启动"></a>牛客网–字节跳动面试题–雀魂启动</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h4><p>链接：<a href="https://www.nowcoder.com/questionTerminal/448127caa21e462f9c9755589a8f2416?f=discussion" target="_blank" rel="noopener">雀魂启动</a><br>来源：牛客网</p><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>小包最近迷上了一款叫做雀魂的麻将游戏，但是这个游戏规则太复杂，小包玩了几个月了还是输多赢少。  于是生气的小包根据游戏简化了一下规则发明了一种新的麻将，只留下一种花色，并且去除了一些特殊和牌方式（例如七对子等），具体的规则如下：  </p><ol><li>总共有36张牌，每张牌是1~9。每个数字4张牌。    </li><li>你手里有其中的14张牌，如果这14张牌满足如下条件，即算作和牌    <ul><li>14张牌中有2张相同数字的牌，称为雀头。   </li><li>除去上述2张牌，剩下12张牌可以组成4个顺子或刻子。顺子的意思是递增的连续3个数字牌（例如234,567等），刻子的意思是相同数字的3个数字牌（例如111,777）   </li></ul></li></ol><h5 id="例如"><a href="#例如" class="headerlink" title="例如"></a>例如</h5><p>  1 1 1 2 2 2 6 6 6 7 7 7 9 9 可以组成1,2,6,7的4个刻子和9的雀头，可以和牌  </p><p>  1 1 1 1 2 2 3 3 5 6 7 7 8 9 用1做雀头，组123,123,567,789的四个顺子，可以和牌  </p><p>  1 1 1 2 2 2 3 3 3 5 6 7 7 9 无论用1 2 3 7哪个做雀头，都无法组成和牌的条件。  </p><h5 id="要求"><a href="#要求" class="headerlink" title="要求"></a>要求</h5><p> 现在，小包从36张牌中抽取了13张牌，他想知道在剩下的23张牌中，再取一张牌，取到哪几种数字牌可以和牌。  </p><h5 id="输入描述"><a href="#输入描述" class="headerlink" title="输入描述:"></a><strong>输入描述:</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入只有一行，包含13个数字，用空格分隔，每个数字在1~9之间，数据保证同种数字最多出现4次。</span><br></pre></td></tr></table></figure><h5 id="输出描述"><a href="#输出描述" class="headerlink" title="输出描述:"></a><strong>输出描述:</strong></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输出同样是一行，包含1个或以上的数字。代表他再取到哪些牌可以和牌。若满足条件的有多种牌，请按从小到大的顺序输出。若没有满足条件的牌，请输出一个数字0</span><br></pre></td></tr></table></figure><h4 id="示例1"><a href="#示例1" class="headerlink" title="示例1"></a>示例1</h4><h5 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 1 1 2 2 2 5 5 5 6 6 6 9</span><br></pre></td></tr></table></figure><h5 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">9</span><br></pre></td></tr></table></figure><h5 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可以组成1,2,6,7的4个刻子和9的雀头</span><br></pre></td></tr></table></figure><h4 id="示例2"><a href="#示例2" class="headerlink" title="示例2"></a>示例2</h4><h5 id="输入-1"><a href="#输入-1" class="headerlink" title="输入"></a>输入</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 1 1 1 2 2 3 3 5 6 7 8 9</span><br></pre></td></tr></table></figure><h5 id="输出-1"><a href="#输出-1" class="headerlink" title="输出"></a>输出</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 7</span><br></pre></td></tr></table></figure><h5 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">用1做雀头，组123,123,567或456,789的四个顺子</span><br></pre></td></tr></table></figure><h4 id="示例3"><a href="#示例3" class="headerlink" title="示例3"></a>示例3</h4><h5 id="输入-2"><a href="#输入-2" class="headerlink" title="输入"></a>输入</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 1 1 2 2 2 3 3 3 5 7 7 9</span><br></pre></td></tr></table></figure><h5 id="输出-2"><a href="#输出-2" class="headerlink" title="输出"></a>输出</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><h5 id="说明-2"><a href="#说明-2" class="headerlink" title="说明"></a>说明</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">来任何牌都无法和牌</span><br></pre></td></tr></table></figure><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>1、统计所有数字出现的次数</p><p>2、循环补充一个数字，凑成14个数字</p><p>3、循环选取次数2以及以上的数字为雀头</p><p>4、排除雀头，递归判断剩下12个数字是否可以组成刻子或者顺子，如果能够符合规则，记录次数字</p><p>5、返回数据</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><p>代码整理自牛客大佬kakifuu</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> guizimo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/7/18 12:44 下午</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner scanner = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">int</span>[] state = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">9</span>], temp = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">9</span>];</span><br><span class="line">        ArrayList&lt;Integer&gt; res = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="comment">//获取13个数字，统计每个数字出现的次数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">13</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> num = scanner.nextInt();</span><br><span class="line">            state[num - <span class="number">1</span>]++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//依次添加数字进行测试</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (state[i] &lt; <span class="number">4</span>) &#123;</span><br><span class="line">                <span class="keyword">int</span> num = i + <span class="number">1</span>;</span><br><span class="line">                System.arraycopy(state, <span class="number">0</span>, temp, <span class="number">0</span>, <span class="number">9</span>);</span><br><span class="line">                temp[i]++;</span><br><span class="line">                <span class="comment">//判断是否符合规则，若符合记录当前的数字</span></span><br><span class="line">                <span class="keyword">if</span> (run(temp, <span class="number">14</span>, <span class="keyword">false</span>)) &#123;</span><br><span class="line">                    res.add(num);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (res.isEmpty()) &#123; <span class="comment">//如果为空</span></span><br><span class="line">            System.out.println(<span class="number">0</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">//不为空</span></span><br><span class="line">            StringBuffer sbf = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">            sbf.append(res.get(<span class="number">0</span>));</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; res.size(); i++) &#123;</span><br><span class="line">                sbf.append(<span class="string">" "</span>);</span><br><span class="line">                sbf.append(res.get(i));</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(sbf.toString());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">run</span><span class="params">(<span class="keyword">int</span>[] temp, <span class="keyword">int</span> count, <span class="keyword">boolean</span> hasRun)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (count == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (!hasRun) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) &#123;</span><br><span class="line">                <span class="comment">//遍历个数大于2的数字，让它作为雀头，判断后面的规则是否通过</span></span><br><span class="line">                <span class="keyword">if</span> (temp[i] &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">                    temp[i] -= <span class="number">2</span>;</span><br><span class="line">                    <span class="comment">//递归</span></span><br><span class="line">                    <span class="keyword">if</span> (run(temp, count - <span class="number">2</span>, <span class="keyword">true</span>)) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    temp[i] += <span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (temp[i] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="comment">//判断刻子</span></span><br><span class="line">                    <span class="keyword">if</span> (temp[i] &gt;= <span class="number">3</span>) &#123;</span><br><span class="line">                        temp[i] -= <span class="number">3</span>;</span><br><span class="line">                        <span class="keyword">if</span> (run(temp, count - <span class="number">3</span>, <span class="keyword">true</span>)) &#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        temp[i] += <span class="number">3</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">//判断顺子</span></span><br><span class="line">                    <span class="keyword">if</span> (i + <span class="number">2</span> &lt; <span class="number">9</span> &amp;&amp; temp[i + <span class="number">1</span>] &gt; <span class="number">0</span> &amp;&amp; temp[i + <span class="number">2</span>] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                        temp[i]--;</span><br><span class="line">                        temp[i+<span class="number">1</span>]--;</span><br><span class="line">                        temp[i+<span class="number">2</span>]--;</span><br><span class="line">                        <span class="keyword">if</span>(run(temp,count-<span class="number">3</span>,<span class="keyword">true</span>))&#123;</span><br><span class="line">                            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        temp[i]++;</span><br><span class="line">                        temp[i+<span class="number">1</span>]++;</span><br><span class="line">                        temp[i+<span class="number">2</span>]++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>感谢</strong></p><blockquote><p>牛客网</p><p>字节跳动</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Mac安装svn（解决新系统Xcode不支持问题）</title>
      <link href="/2020/07/17/Mac%E5%AE%89%E8%A3%85svn%EF%BC%88%E8%A7%A3%E5%86%B3%E6%96%B0%E7%B3%BB%E7%BB%9FXcode%E4%B8%8D%E6%94%AF%E6%8C%81%E9%97%AE%E9%A2%98%EF%BC%89/"/>
      <url>/2020/07/17/Mac%E5%AE%89%E8%A3%85svn%EF%BC%88%E8%A7%A3%E5%86%B3%E6%96%B0%E7%B3%BB%E7%BB%9FXcode%E4%B8%8D%E6%94%AF%E6%8C%81%E9%97%AE%E9%A2%98%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="Mac安装svn（解决新系统Xcode不支持问题）"><a href="#Mac安装svn（解决新系统Xcode不支持问题）" class="headerlink" title="Mac安装svn（解决新系统Xcode不支持问题）"></a>Mac安装svn（解决新系统Xcode不支持问题）</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>在新版的系统里面xcode不再支持svn</p><p>所以我们要使用的话，请使用brew来安装</p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>请使用国内中科大的源(解决报错问题)</p><p><a href="https://guizimo.blog.csdn.net/article/details/107419919" target="_blank" rel="noopener">https://guizimo.blog.csdn.net/article/details/107419919</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install subversion</span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn --version</span><br></pre></td></tr></table></figure><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200717231041123.png" alt="image-20200717231041123"></p><p><strong>感谢</strong></p><blockquote><p>百度百科</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Brew发现自动更新homebrew时卡住</title>
      <link href="/2020/07/17/Brew%E5%8F%91%E7%8E%B0%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0homebrew%E6%97%B6%E5%8D%A1%E4%BD%8F/"/>
      <url>/2020/07/17/Brew%E5%8F%91%E7%8E%B0%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0homebrew%E6%97%B6%E5%8D%A1%E4%BD%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="Brew发现自动更新homebrew时卡住"><a href="#Brew发现自动更新homebrew时卡住" class="headerlink" title="Brew发现自动更新homebrew时卡住"></a>Brew发现自动更新homebrew时卡住</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>因为我之前换过源，换成了是阿里的源，然后阿里的源没有cask，所以出错在这里</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200717230222764.png" alt="image-20200717230222764"></p><h4 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h4><p>换成中科大的源</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 替换brew.git:</span><br><span class="line"><span class="built_in">cd</span> <span class="string">"<span class="variable">$(brew --repo)</span>"</span></span><br><span class="line">git remote <span class="built_in">set</span>-url origin https://mirrors.ustc.edu.cn/brew.git</span><br><span class="line"></span><br><span class="line">// 替换homebrew-core.git:</span><br><span class="line"><span class="built_in">cd</span> <span class="string">"<span class="variable">$(brew --repo)</span>/Library/Taps/homebrew/homebrew-core"</span></span><br><span class="line">git remote <span class="built_in">set</span>-url origin https://mirrors.ustc.edu.cn/homebrew-core.git</span><br><span class="line"></span><br><span class="line">// 替换homebrew-cask.git:</span><br><span class="line"><span class="built_in">cd</span> <span class="string">"<span class="variable">$(brew --repo)</span>"</span>/Library/Taps/homebrew/homebrew-cask </span><br><span class="line">git remote <span class="built_in">set</span>-url origin https://mirrors.ustc.edu.cn/homebrew-cask.git</span><br></pre></td></tr></table></figure><p>更新源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew update</span><br></pre></td></tr></table></figure><p>之后再次安装就解决了问题</p><p><strong>感谢</strong></p><blockquote><p>百度百科</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Mac安装oracle（使用Docker）</title>
      <link href="/2020/07/17/Mac%E5%AE%89%E8%A3%85oracle%EF%BC%88%E4%BD%BF%E7%94%A8Docker%EF%BC%89/"/>
      <url>/2020/07/17/Mac%E5%AE%89%E8%A3%85oracle%EF%BC%88%E4%BD%BF%E7%94%A8Docker%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="Mac安装oracle（使用Docker）"><a href="#Mac安装oracle（使用Docker）" class="headerlink" title="Mac安装oracle（使用Docker）"></a>Mac安装oracle（使用Docker）</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>拉取oracle 11g 镜像，这个版本可以自行选择</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull registry.cn-hangzhou.aliyuncs.com&#x2F;helowin&#x2F;oracle_11g</span><br></pre></td></tr></table></figure><p>安装oracle容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -dp 9090:8080 -p 1521:1521 registry.cn-hangzhou.aliyuncs.com&#x2F;helowin&#x2F;oracle_11g</span><br></pre></td></tr></table></figure><p>进入容器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it 容器id &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure><p>容器id可以通过一下命令查询</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><h4 id="使用navicat连接"><a href="#使用navicat连接" class="headerlink" title="使用navicat连接"></a>使用navicat连接</h4><h5 id="默认值"><a href="#默认值" class="headerlink" title="默认值"></a>默认值</h5><p>服务名：helowin</p><p>用户名：system</p><p>密码：helowin</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200717223434272.png" alt=""></p><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200717224337758.png" alt="image-20200717224337758"></p><p>停止/启动oracle服务：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker stop oracle</span><br><span class="line">docker start oracle</span><br></pre></td></tr></table></figure><p><strong>感谢</strong></p><blockquote><p>百度百科</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Mac安装Docker配置网易源</title>
      <link href="/2020/07/17/Mac%E5%AE%89%E8%A3%85Docker%E9%85%8D%E7%BD%AE%E7%BD%91%E6%98%93%E6%BA%90/"/>
      <url>/2020/07/17/Mac%E5%AE%89%E8%A3%85Docker%E9%85%8D%E7%BD%AE%E7%BD%91%E6%98%93%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<h2 id="Mac安装Docker配置网易源"><a href="#Mac安装Docker配置网易源" class="headerlink" title="Mac安装Docker配置网易源"></a>Mac安装Docker配置网易源</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>使用brew安装</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew cask install docker</span><br></pre></td></tr></table></figure><p>这个过程有一会儿</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200717221403550.png" alt="image-20200717221403550"></p><p>安装成功后打开Docker，需要验证一下</p><h4 id="配置源"><a href="#配置源" class="headerlink" title="配置源"></a>配置源</h4><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200717221547010.png" alt="image-20200717221547010"></p><p>找到配置镜像的地方，新版的改成这里了</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200717221635724.png" alt="image-20200717221635724"></p><h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"registry-mirrors"</span>: [</span><br><span class="line">    <span class="string">"https://hub-mirror.c.163.com"</span></span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"experimental"</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="attr">"debug"</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker -v</span><br></pre></td></tr></table></figure><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200717221809633.png" alt="image-20200717221809633"></p><p><strong>感谢</strong></p><blockquote><p>百度百科</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Mac下安装配置Maven并在IDEA中配置</title>
      <link href="/2020/07/16/Mac%E4%B8%8B%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEMaven%E5%B9%B6%E5%9C%A8IDEA%E4%B8%AD%E9%85%8D%E7%BD%AE/"/>
      <url>/2020/07/16/Mac%E4%B8%8B%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AEMaven%E5%B9%B6%E5%9C%A8IDEA%E4%B8%AD%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="Mac下安装配置Maven并在IDEA中配置"><a href="#Mac下安装配置Maven并在IDEA中配置" class="headerlink" title="Mac下安装配置Maven并在IDEA中配置"></a>Mac下安装配置Maven并在IDEA中配置</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="下载Maven"><a href="#下载Maven" class="headerlink" title="下载Maven"></a>下载Maven</h4><p><a href="http://maven.apache.org/download.cgi" target="_blank" rel="noopener">下载地址</a></p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200716132201852.png" alt="image-20200716132201852"></p><p>注意看自己系统，mac/linux下载tar.gz，windows下载zip</p><h4 id="设置环境变量"><a href="#设置环境变量" class="headerlink" title="设置环境变量"></a>设置环境变量</h4><p>首先解压到usr/local下</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200716132605553.png" alt="image-20200716132605553"></p><p>打开终端，<code>vim ~/.zshrc</code>，在后面添加路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export MAVEN_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;apache-maven-3.6.3</span><br><span class="line">export PATH&#x3D;$PATH:$MAVEN_HOME&#x2F;bin</span><br></pre></td></tr></table></figure><p>注意自己的版本和路径，应用配置<code>source ~/.zshrc</code></p><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p><code>mvn -v</code>，出现以下表示安装成功</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200716133506325.png" alt="image-20200716133506325"></p><h4 id="配置阿里云源"><a href="#配置阿里云源" class="headerlink" title="配置阿里云源"></a>配置阿里云源</h4><p>打开 <code>/usr/local/apache-maven-3.6.3/conf/settings.xml</code> 配置文件</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200716134005654.png" alt="image-20200716134005654"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 阿里云仓库 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/repositories/central/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><p>测试，在终端输入<code>mvn help:system</code>，下载一些默认的jar包到本地仓库</p><h4 id="在-idea-中配置-maven"><a href="#在-idea-中配置-maven" class="headerlink" title="在 idea 中配置 maven"></a>在 idea 中配置 maven</h4><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200716134719598.png" alt="image-20200716134719598"></p><p>把默认的修改成我们刚才下载好的</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200716135142326.png" alt="image-20200716135142326"></p><p>因为仓库我没有改，所以没变，如果改了仓库那么就在这里也要配置好</p><h4 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h4><p>创建一个maven项目</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200716135440512.png" alt="image-20200716135440512"></p><p>选择maven版本</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200716140426332.png" alt="image-20200716140426332"></p><p>然后就会自动补充maven项目所需要的依赖</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200716140629063.png" alt="image-20200716140629063"></p><p><strong>感谢</strong></p><blockquote><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Redis --Java客户端 Jedis</title>
      <link href="/2020/07/15/Redis%20--Java%E5%AE%A2%E6%88%B7%E7%AB%AF%20Jedis/"/>
      <url>/2020/07/15/Redis%20--Java%E5%AE%A2%E6%88%B7%E7%AB%AF%20Jedis/</url>
      
        <content type="html"><![CDATA[<h2 id="Redis-–Java客户端-Jedis"><a href="#Redis-–Java客户端-Jedis" class="headerlink" title="Redis –Java客户端 Jedis"></a>Redis –Java客户端 Jedis</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>Jedis: 一款java操作redis数据库的工具.</p><p><a href="https://www.runoob.com/redis/redis-java.html" target="_blank" rel="noopener">菜鸟教程文档地址</a></p><h4 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h4><h5 id="导入jedis包"><a href="#导入jedis包" class="headerlink" title="导入jedis包"></a>导入jedis包</h5><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200715165242676.png" alt="image-20200715165242676"></p><h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.jedis.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> redis.clients.jedis.Jedis;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> guizimo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/7/15 4:42 下午</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JedisTest</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//1. 获取连接</span></span><br><span class="line">        Jedis jedis = <span class="keyword">new</span> Jedis(<span class="string">"127.0.0.1"</span>,<span class="number">6379</span>);</span><br><span class="line">        <span class="comment">//2. 操作</span></span><br><span class="line">        jedis.set(<span class="string">"name"</span>,<span class="string">"zhangsan"</span>);</span><br><span class="line">        <span class="comment">//3. 关闭连接</span></span><br><span class="line">        jedis.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200715165621920.png" alt="image-20200715165621920"></p><p><strong>感谢</strong></p><blockquote><p>菜鸟教程</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JSON的介绍</title>
      <link href="/2020/07/15/JSON%E7%9A%84%E4%BB%8B%E7%BB%8D/"/>
      <url>/2020/07/15/JSON%E7%9A%84%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="JSON的介绍"><a href="#JSON的介绍" class="headerlink" title="JSON的介绍"></a>JSON的介绍</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>JSON: <strong>J</strong>ava<strong>S</strong>cript <strong>O</strong>bject <strong>N</strong>otation(JavaScript 对象表示法)</p><p>JSON 是存储和交换文本信息的语法。类似 XML。</p><p>JSON 比 XML 更小、更快，更易解析。</p><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><p>JSON 语法是 JavaScript 对象表示语法的子集。</p><ul><li>数据在名称/值对中</li><li>数据由逗号分隔</li><li>大括号保存对象</li><li>中括号保存数组</li></ul><h4 id="JSON-与-XML"><a href="#JSON-与-XML" class="headerlink" title="JSON 与 XML"></a>JSON 与 XML</h4><h5 id="JSON-与-XML-的相同之处："><a href="#JSON-与-XML-的相同之处：" class="headerlink" title="JSON 与 XML 的相同之处："></a>JSON 与 XML 的相同之处：</h5><ul><li>JSON 和 XML 数据都是 “自我描述” ，都易于理解。</li><li>JSON 和 XML 数据都是有层次的结构</li><li>JSON 和 XML 数据可以被大多数编程语言使用</li></ul><h5 id="JSON-与-XML-的不同之处："><a href="#JSON-与-XML-的不同之处：" class="headerlink" title="JSON 与 XML 的不同之处："></a>JSON 与 XML 的不同之处：</h5><ul><li>JSON 不需要结束标签</li><li>JSON 更加简短</li><li>JSON 读写速度更快</li><li>JSON 可以使用数组</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[JSON.parse(): 将一个 JSON 字符串转换为 JavaScript 对象。</span><br><span class="line"></span><br><span class="line">[JSON.stringify(): 于将 JavaScript 值转换为 JSON 字符串。</span><br></pre></td></tr></table></figure><p><strong>感谢</strong></p><blockquote><p>菜鸟教程</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>AJAX介绍和使用</title>
      <link href="/2020/07/15/AJAX%E4%BB%8B%E7%BB%8D%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/07/15/AJAX%E4%BB%8B%E7%BB%8D%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="AJAX介绍和使用"><a href="#AJAX介绍和使用" class="headerlink" title="AJAX介绍和使用"></a>AJAX介绍和使用</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="菜鸟教程地址"><a href="#菜鸟教程地址" class="headerlink" title="菜鸟教程地址"></a>菜鸟教程地址</h4><p><a href="https://www.runoob.com/ajax/ajax-tutorial.html" target="_blank" rel="noopener">https://www.runoob.com/ajax/ajax-tutorial.html</a></p><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>AJAX = Asynchronous JavaScript and XML（异步的 JavaScript 和 XML）。</p><p>AJAX 不是新的编程语言，而是一种使用现有标准的新方法。</p><p>AJAX 最大的优点是在不重新加载整个页面的情况下，可以与服务器交换数据并更新部分网页内容。</p><p>AJAX 不需要任何浏览器插件，但需要用户允许JavaScript在浏览器上执行。</p><h4 id="异步和同步"><a href="#异步和同步" class="headerlink" title="异步和同步"></a>异步和同步</h4><p>客户端和服务器端相互通信的基础上</p><ul><li>客户端必须等待服务器端的响应。在等待的期间客户端不能做其他操作。</li><li>客户端不需要等待服务器端的响应。在服务器处理请求的过程中，客户端可以进行其他的操作。</li></ul><h4 id="实现方式"><a href="#实现方式" class="headerlink" title="实现方式"></a>实现方式</h4><h5 id="使用js"><a href="#使用js" class="headerlink" title="使用js"></a>使用js</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.创建核心对象</span></span><br><span class="line"><span class="keyword">var</span> xmlhttp;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">window</span>.XMLHttpRequest)</span><br><span class="line">&#123;<span class="comment">// code for IE7+, Firefox, Chrome, Opera, Safari</span></span><br><span class="line">    xmlhttp=<span class="keyword">new</span> XMLHttpRequest();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;<span class="comment">// code for IE6, IE5</span></span><br><span class="line">    xmlhttp=<span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLHTTP"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2. 建立连接</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    参数：</span></span><br><span class="line"><span class="comment">        1. 请求方式：GET、POST</span></span><br><span class="line"><span class="comment">            * get方式，请求参数在URL后边拼接。send方法为空参</span></span><br><span class="line"><span class="comment">            * post方式，请求参数在send方法中定义</span></span><br><span class="line"><span class="comment">        2. 请求的URL：</span></span><br><span class="line"><span class="comment">        3. 同步或异步请求：true（异步）或 false（同步）</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">xmlhttp.open(<span class="string">"GET"</span>,<span class="string">"ajaxServlet?username=tom"</span>,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.发送请求</span></span><br><span class="line">xmlhttp.send();</span><br><span class="line"></span><br><span class="line"><span class="comment">//4.接受并处理来自服务器的响应结果</span></span><br><span class="line"><span class="comment">//获取方式 ：xmlhttp.responseText</span></span><br><span class="line"><span class="comment">//什么时候获取？当服务器响应成功后再获取</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//当xmlhttp对象的就绪状态改变时，触发事件onreadystatechange。</span></span><br><span class="line">xmlhttp.onreadystatechange=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//判断readyState就绪状态是否为4，判断status响应状态码是否为200</span></span><br><span class="line">    <span class="keyword">if</span> (xmlhttp.readyState==<span class="number">4</span> &amp;&amp; xmlhttp.status==<span class="number">200</span>)</span><br><span class="line">    &#123;</span><br><span class="line">       <span class="comment">//获取服务器的响应结果</span></span><br><span class="line">        <span class="keyword">var</span> responseText = xmlhttp.responseText;</span><br><span class="line">        alert(responseText);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="使用jquery"><a href="#使用jquery" class="headerlink" title="使用jquery"></a>使用jquery</h5><p><strong>$.ajax实现</strong></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    url:<span class="string">"ajaxServlet1111"</span> , <span class="comment">// 请求路径</span></span><br><span class="line">    type:<span class="string">"POST"</span> , <span class="comment">//请求方式</span></span><br><span class="line">    <span class="comment">//data: "username=jack&amp;age=23",//请求参数</span></span><br><span class="line">    data:&#123;<span class="string">"username"</span>:<span class="string">"jack"</span>,<span class="string">"age"</span>:<span class="number">23</span>&#125;,</span><br><span class="line">    success:<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">        alert(data);</span><br><span class="line">    &#125;,<span class="comment">//响应成功后的回调函数</span></span><br><span class="line">    error:<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        alert(<span class="string">"出错啦..."</span>)</span><br><span class="line">    &#125;,<span class="comment">//表示如果请求响应出现错误，会执行的回调函数</span></span><br><span class="line"></span><br><span class="line">    dataType:<span class="string">"text"</span><span class="comment">//设置接受到的响应数据的格式</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p><strong>$.get 发送get请求</strong></p><ul><li><p>语法：$.get(url, [data], [callback], [type])</p></li><li><p>参数：</p><p>   url：请求路径</p><p>   data：请求参数</p><p>   callback：回调函数</p><p>   type：响应结果的类型</p></li></ul><p><strong>$.post() 发送post请求</strong></p><ul><li><p>语法：$.post(url, [data], [callback], [type])</p></li><li><p>参数：</p><p>url：请求路径</p><p>data：请求参数</p><p>callback：回调函数</p><p>type：响应结果的类型</p></li></ul><p><strong>感谢</strong></p><blockquote><p>菜鸟教程</p><p>黑马程序员</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>jQuery--高级</title>
      <link href="/2020/07/15/jQuery--%E9%AB%98%E7%BA%A7/"/>
      <url>/2020/07/15/jQuery--%E9%AB%98%E7%BA%A7/</url>
      
        <content type="html"><![CDATA[<h2 id="jQuery–高级"><a href="#jQuery–高级" class="headerlink" title="jQuery–高级"></a>jQuery–高级</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="动画"><a href="#动画" class="headerlink" title="动画"></a>动画</h4><h5 id="三种方式显示和隐藏元素"><a href="#三种方式显示和隐藏元素" class="headerlink" title="三种方式显示和隐藏元素"></a>三种方式显示和隐藏元素</h5><ol><li><p>默认显示和隐藏方式</p><ul><li><p>show([speed,[easing],[fn]])，参数：</p><ol><li><p>speed：动画的速度。三个预定义的值(“slow”,”normal”, “fast”)或表示动画时长的毫秒数值(如：1000)</p></li><li><p>easing：用来指定切换效果，默认是”swing”，可用参数”linear”</p><ul><li><p>swing：动画执行时效果是 先慢，中间快，最后又慢</p></li><li><p>linear：动画执行时速度是匀速的</p></li></ul></li><li><p>fn：在动画完成时执行的函数，每个元素执行一次。</p></li></ol></li><li><p>hide([speed,[easing],[fn]])</p></li><li><p>toggle([speed],[easing],[fn])</p></li></ul></li><li><p>滑动显示和隐藏方式</p><ul><li>slideDown([speed],[easing],[fn])</li><li>slideUp([speed,[easing],[fn]])</li><li>slideToggle([speed],[easing],[fn])</li></ul></li><li><p>淡入淡出显示和隐藏方式</p><ul><li>fadeIn([speed],[easing],[fn])</li><li>fadeOut([speed],[easing],[fn])</li><li>fadeToggle([speed,[easing],[fn]])</li></ul></li></ol><h4 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h4><h5 id="js的遍历方式"><a href="#js的遍历方式" class="headerlink" title="js的遍历方式"></a>js的遍历方式</h5><ul><li>for(初始化值;循环结束条件;步长)</li></ul><h5 id="jquery的遍历方式"><a href="#jquery的遍历方式" class="headerlink" title="jquery的遍历方式"></a>jquery的遍历方式</h5><ol><li><p>jq对象.each(callback)</p><p>语法：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">jquery对象.each(function(index,element)&#123;&#125;);</span><br><span class="line">index:就是元素在集合中的索引</span><br><span class="line">element：就是集合中的每一个元素对象</span><br><span class="line">this：集合中的每一个元素对象</span><br></pre></td></tr></table></figure><p>回调函数返回值：</p><ul><li>true:如果当前function返回为false，则结束循环(break)。</li><li>false:如果当前function返回为true，则结束本次循环，继续下次循环(continue)</li></ul></li><li><p>$.each(object, [callback])</p></li><li><p>for..of: jquery 3.0 版本之后提供的方式<br> for(元素对象 of 容器对象)</p></li></ol><h4 id="事件绑定"><a href="#事件绑定" class="headerlink" title="事件绑定"></a>事件绑定</h4><ol><li><p>jquery标准的绑定方式</p><ul><li>jq对象.事件方法(回调函数)；</li><li>注：如果调用事件方法，不传递回调函数，则会触发浏览器默认行为。<ul><li>表单对象.submit();//让表单提交</li></ul></li></ul></li><li><p>on绑定事件/off解除绑定</p><ul><li>jq对象.on(“事件名称”,回调函数)</li><li>jq对象.off(“事件名称”)<ul><li>如果off方法不传递任何参数，则将组件上的所有事件全部解绑</li></ul></li></ul></li><li><p>事件切换：toggle</p><ul><li><p>jq对象.toggle(fn1,fn2…)</p><ul><li>当单击jq对象对应的组件后，会执行fn1.第二次点击会执行fn2…..</li></ul></li><li><p>注意：1.9版本 .toggle() 方法删除,jQuery Migrate（迁移）插件可以恢复此功能。</p>   <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"../js/jquery-migrate-1.0.0.js"</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul></li></ol><h4 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h4><p>增强JQuery的功能</p><p>实现方式：</p><ol><li>$.fn.extend(object) <ul><li>增强通过Jquery获取的对象的功能  $(“#id”)</li></ul></li><li>$.extend(object)<ul><li>增强JQeury对象自身的功能  $/jQuery</li></ul></li></ol><p><strong>感谢</strong></p><blockquote><p>黑马程序员</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode–二维数组中的查找</title>
      <link href="/2020/07/14/LeetCode%E2%80%93%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9F%A5%E6%89%BE/"/>
      <url>/2020/07/14/LeetCode%E2%80%93%E4%BA%8C%E7%BB%B4%E6%95%B0%E7%BB%84%E4%B8%AD%E7%9A%84%E6%9F%A5%E6%89%BE/</url>
      
        <content type="html"><![CDATA[<h2 id="LeetCode–二维数组中的查找"><a href="#LeetCode–二维数组中的查找" class="headerlink" title="LeetCode–二维数组中的查找"></a>LeetCode–二维数组中的查找</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>剑指offer，4题，主站 240题</p><p><a href="https://leetcode-cn.com/problems/er-wei-shu-zu-zhong-de-cha-zhao-lcof/" target="_blank" rel="noopener">二维数组中的查找</a></p><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>在一个 n * m 的二维数组中，每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。</p><p>示例:</p><p>现有矩阵 matrix 如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  [1,   4,  7, 11, 15],</span><br><span class="line">  [2,   5,  8, 12, 19],</span><br><span class="line">  [3,   6,  9, 16, 22],</span><br><span class="line">  [10, 13, 14, 17, 24],</span><br><span class="line">  [18, 21, 23, 26, 30]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>给定 target = 5，返回 true。</p><p>给定 target = 20，返回 false。</p><h4 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h4><p>使用线性查找，从右上角开始查找，因为一行的最大值在右上角，如果比当前的值小，那么就向左查询，如果比当前的值大，那么就向右查</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">findNumberIn2DArray</span><span class="params">(<span class="keyword">int</span>[][] matrix, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(matrix.length == <span class="number">0</span> || matrix[<span class="number">0</span>].length == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> x = <span class="number">0</span>, y = matrix[<span class="number">0</span>].length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(x&lt;matrix.length &amp;&amp; y&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">int</span> num = matrix[x][y];</span><br><span class="line">            <span class="keyword">if</span>(num == target)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(num &gt; target)&#123;</span><br><span class="line">                y--;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                x++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Go"><a href="#Go" class="headerlink" title="Go"></a>Go</h4><p>使用线性查找，从右上角开始查找，因为一行的最大值在右上角，如果比当前的值小，那么就向左查询，如果比当前的值大，那么就向右查</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">findNumberIn2DArray</span><span class="params">(matrix [][]<span class="keyword">int</span>, target <span class="keyword">int</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">    y := <span class="built_in">len</span>(matrix[<span class="number">0</span>])<span class="number">-1</span></span><br><span class="line">    x := <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> x&lt;<span class="built_in">len</span>(matrix) &amp;&amp; y&gt;=<span class="number">0</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> matrix[x][y] == target&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> matrix[x][y] &gt; target&#123;</span><br><span class="line">            y--</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            x++</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="C"><a href="#C" class="headerlink" title="C"></a>C</h4><p>使用线性查找，从右上角开始查找，因为一行的最大值在右上角，如果比当前的值小，那么就向左查询，如果比当前的值大，那么就向右查</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">findNumberIn2DArray</span><span class="params">(<span class="keyword">int</span>** matrix, <span class="keyword">int</span> matrixSize, <span class="keyword">int</span>* matrixColSize, <span class="keyword">int</span> target)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> y = matrixSize - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(x&lt;matrixSize &amp;&amp; y&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(matrix[x][y] == target)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(matrix[x][y] &gt; target)&#123;</span><br><span class="line">            y--;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            x++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h4><p>暴力法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Integer[][] $matrix</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Integer $target</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">findNumberIn2DArray</span><span class="params">($matrix, $target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(count($matrix)==<span class="number">0</span> || count($matrix[<span class="number">0</span>])==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>($i = <span class="number">0</span>;$i&lt;count($matrix);$i++)&#123;</span><br><span class="line">            <span class="keyword">for</span>($j = <span class="number">0</span>; $j&lt;count($matrix[$i]);$j++)&#123;</span><br><span class="line">                <span class="keyword">if</span>($matrix[$i][$j] == $target)&#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>线性查找</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Integer[] $nums</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Integer</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">findRepeatNumber</span><span class="params">($nums)</span> </span>&#123;</span><br><span class="line">        $res = [];</span><br><span class="line">        <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;count($nums);$i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>($res[$nums[$i]]))&#123;</span><br><span class="line">                <span class="keyword">return</span> $nums[$i];</span><br><span class="line">            &#125;</span><br><span class="line">            $res[$nums[$i]] = <span class="string">''</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>感谢</strong></p><blockquote><p>leetcode</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode–数组中重复的数字</title>
      <link href="/2020/07/13/LeetCode%E2%80%93%E6%95%B0%E7%BB%84%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E5%AD%97/"/>
      <url>/2020/07/13/LeetCode%E2%80%93%E6%95%B0%E7%BB%84%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E5%AD%97/</url>
      
        <content type="html"><![CDATA[<h2 id="LeetCode–数组中重复的数字"><a href="#LeetCode–数组中重复的数字" class="headerlink" title="LeetCode–数组中重复的数字"></a>LeetCode–数组中重复的数字</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>剑指offer，3题</p><p><a href="https://leetcode-cn.com/problems/shu-zu-zhong-zhong-fu-de-shu-zi-lcof/" target="_blank" rel="noopener">数组中重复的数字</a></p><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。</p><p>示例 1：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：</span><br><span class="line">[2, 3, 1, 0, 2, 5, 3]</span><br><span class="line">输出：2 或 3</span><br></pre></td></tr></table></figure><h4 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h4><p>使用set集合，遍历数组，将值存入set集合，当存入错误的时候，表示遇到重复的数字，返回此时的元素即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findRepeatNumber</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        Set&lt;Integer&gt; set = <span class="keyword">new</span> HashSet&lt;Integer&gt;();</span><br><span class="line">        <span class="keyword">int</span> temp = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> num : nums)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!set.add(num))&#123;</span><br><span class="line">                temp = num;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Go"><a href="#Go" class="headerlink" title="Go"></a>Go</h4><p>使用map集合，遍历数组，当map集合的长度不改变，即遇到重复的数字</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">findRepeatNumber</span><span class="params">(nums []<span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    find := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">int</span>, <span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span> k, v := <span class="keyword">range</span> nums &#123;</span><br><span class="line">find[v] = v</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(find) == k &#123;</span><br><span class="line"><span class="keyword">return</span> v</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="C"><a href="#C" class="headerlink" title="C"></a>C</h4><p>建立一个同等大小的空数组，原数组的值为新数组的下标，判断是否为第一次访问，访问一次置1，第二次访问直接返回该值。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">findRepeatNumber</span><span class="params">(<span class="keyword">int</span>* nums, <span class="keyword">int</span> numsSize)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> *tmp = <span class="built_in">calloc</span>(numsSize,<span class="keyword">sizeof</span>(<span class="keyword">int</span>));</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;numsSize;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(tmp[nums[i]] == <span class="number">0</span>)&#123;</span><br><span class="line">            tmp[nums[i]] = <span class="number">1</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h4><p>新建一个空数组，遍历数组，将元素依次插入新数组当中，使用isset判断是否重复</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Integer[] $nums</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Integer</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">findRepeatNumber</span><span class="params">($nums)</span> </span>&#123;</span><br><span class="line">        $res = [];</span><br><span class="line">        <span class="keyword">for</span>($i=<span class="number">0</span>;$i&lt;count($nums);$i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>($res[$nums[$i]]))&#123;</span><br><span class="line">                <span class="keyword">return</span> $nums[$i];</span><br><span class="line">            &#125;</span><br><span class="line">            $res[$nums[$i]] = <span class="string">''</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>感谢</strong></p><blockquote><p>leetcode</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java面试题——随机题（一），看看哪些你会哪些你不会</title>
      <link href="/2020/07/13/Java%E9%9D%A2%E8%AF%95%E9%A2%98%E2%80%94%E2%80%94%E9%9A%8F%E6%9C%BA%E9%A2%98%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%8C%E7%9C%8B%E7%9C%8B%E5%93%AA%E4%BA%9B%E4%BD%A0%E4%BC%9A%E5%93%AA%E4%BA%9B%E4%BD%A0%E4%B8%8D%E4%BC%9A/"/>
      <url>/2020/07/13/Java%E9%9D%A2%E8%AF%95%E9%A2%98%E2%80%94%E2%80%94%E9%9A%8F%E6%9C%BA%E9%A2%98%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%8C%E7%9C%8B%E7%9C%8B%E5%93%AA%E4%BA%9B%E4%BD%A0%E4%BC%9A%E5%93%AA%E4%BA%9B%E4%BD%A0%E4%B8%8D%E4%BC%9A/</url>
      
        <content type="html"><![CDATA[<h2 id="Java面试题——随机题（一），看看哪些你会哪些你不会"><a href="#Java面试题——随机题（一），看看哪些你会哪些你不会" class="headerlink" title="Java面试题——随机题（一），看看哪些你会哪些你不会"></a>Java面试题——随机题（一），看看哪些你会哪些你不会</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="请说明一下EJB的几种类型分别是什么？"><a href="#请说明一下EJB的几种类型分别是什么？" class="headerlink" title="请说明一下EJB的几种类型分别是什么？"></a>请说明一下EJB的几种类型分别是什么？</h4><p>会话（Session）Bean、实体（Entity）Bean 、消息驱动的（Message Driven）Bean</p><p>会话Bean又可分为有状态（Stateful）和无状态（Stateless）两种</p><p>实体Bean可分为Bean管理的持续性（BMP）和容器管理的持续性（CMP）两种。</p><h4 id="请说明一下锁机制的作用是什么？并且简述一下Hibernate的悲观锁和乐观锁机制是什么？"><a href="#请说明一下锁机制的作用是什么？并且简述一下Hibernate的悲观锁和乐观锁机制是什么？" class="headerlink" title="请说明一下锁机制的作用是什么？并且简述一下Hibernate的悲观锁和乐观锁机制是什么？"></a>请说明一下锁机制的作用是什么？并且简述一下Hibernate的悲观锁和乐观锁机制是什么？</h4><p>锁机制的作用是保证共享资源可以进行排他性的访问</p><p><strong>悲观锁</strong>悲观的认为在数据处理过程中极有可能存在修改数据的并发事务（包括本系统的其他事务或来自外部系统的事务），于是将处理的数据设置为锁定状态。</p><p>数据库中主要是通过数据库底层的锁机制才能保证真正的数据访问排他性。</p><p> 缺点：并发量不高，效率低；</p><p><strong>乐观锁</strong>对并发事务持乐观态度（认为对数据的并发操作不会经常性的发生），通过更加宽松的锁机制来解决由于悲观锁排他性的数据访问对系统性能造成的严重影响。最常见的乐观锁是通过数据版本标识来实现的</p><h4 id="redis为什么是单线程？"><a href="#redis为什么是单线程？" class="headerlink" title="redis为什么是单线程？"></a>redis为什么是单线程？</h4><p>多线程不一定比单线程效率高，多线程的本质就是CPU通过轮换时间片执行不同的线程，看似多个线程一起执行，但是却承担线程上下文切换的代价。</p><p>而对于Redis这样的内存数据库来说，没有上下文的切换的单线程效率是最高的。Redis用单个CPU绑定一块内存的数据，然后针对这块内存的数据进行多次读写操作都是在一个CPU上完成的。</p><h4 id="请你谈谈Java中线程如何实现，以及如何实现多线程，线程安全在Java中是如何实现的，线程的工作区是哪里"><a href="#请你谈谈Java中线程如何实现，以及如何实现多线程，线程安全在Java中是如何实现的，线程的工作区是哪里" class="headerlink" title="请你谈谈Java中线程如何实现，以及如何实现多线程，线程安全在Java中是如何实现的，线程的工作区是哪里"></a>请你谈谈Java中线程如何实现，以及如何实现多线程，线程安全在Java中是如何实现的，线程的工作区是哪里</h4><h5 id="Java多线程有三种实现方式"><a href="#Java多线程有三种实现方式" class="headerlink" title="Java多线程有三种实现方式"></a>Java多线程有三种实现方式</h5><p>(1)继承Thread类，重写run函数</p><p>(2)实现Runnable接口，重写run函数</p><p>开启线程：Thread t = new Thread(对象) //创建线程对象</p><p>t.start()</p><p>(3)实现Callable接口，重写call函数</p><p>Callable是类似于Runnable的接口，实现Callable接口的类和实现Runnable的类都是可被其它线程执行的任务。</p><h5 id="Callable和Runnable有几点不同"><a href="#Callable和Runnable有几点不同" class="headerlink" title="Callable和Runnable有几点不同:"></a>Callable和Runnable有几点不同:</h5><p>①Callable规定的方法是call()，而Runnable规定的方法是run()</p><p>②Callable的任务执行后可返回值，而Runnable的任务是不能返回值的</p><p>③call()方法可抛出异常，而run()方法是不能抛出异常的。</p><p>④运行Callable任务可拿到一个Future对象，Future表示异步计算的结果。它提供了检查计算是否完成的方法,以等待计算的完成,并检索计算的结果.通过Future对象可了解任务执行情况,可取消任务的执行,还可获取任务执行的结果</p><h5 id="线程不安全的原因："><a href="#线程不安全的原因：" class="headerlink" title="线程不安全的原因："></a>线程不安全的原因：</h5><p>在操作系统中，线程是不拥有资源的，进程是拥有资源的。而线程是由进程创建的，一个进程可以创建多个线程，这些线程共享着进程中的资源。所以，当线程一起并发运行时，同时对一个数据进行修改，就可能会造成数据的不一致性</p><h5 id="线程安全的解决机制："><a href="#线程安全的解决机制：" class="headerlink" title="线程安全的解决机制："></a>线程安全的解决机制：</h5><ol><li><p>加锁。</p><ul><li><p>锁能使其保护的代码以串行的形式来访问，当给一个复合操作加锁后，能使其成为原子操作。一种错误的思想是只要对写数据的方法加锁，其实这是错的，对数据进行操作的所有方法都需加锁，不管是读还是写。 </p></li><li><p>加锁时需要考虑性能问题，不能总是一味地给整个方法加锁synchronized就了事了，应该将方法中不影响共享状态且执行时间比较长的代码分离出去。 </p></li><li><p>加锁的含义不仅仅局限于互斥，还包括可见性。为了确保所有线程都能看见最新值，读操作和写操作必须使用同样的锁对象。 </p></li></ul></li><li><p>不共享状态 </p><ul><li><p>无状态对象： 无状态对象一定是线程安全的，因为不会影响到其他线程。</p></li><li><p>线程关闭： 仅在单线程环境下使用。 </p></li></ul></li><li><p>不可变对象 </p><p>可以使用final修饰的对象保证线程安全，由于final修饰的引用型变量(除String外)不可变是指引用不可变，但其指向的对象是可变的，所以此类必须安全发布，也即不能对外提供可以修改final对象的接口。</p></li></ol><h5 id="线程的工作区"><a href="#线程的工作区" class="headerlink" title="线程的工作区"></a>线程的工作区</h5><p>Java内存模型分为主内存，和工作内存。主内存是所有的线程所共享的，工作内存是每个线程自己有一个，不是共享的。</p><p>每条线程还有自己的工作内存，线程的工作内存中保存了被该线程使用到的变量的主内存副本拷贝。线程对变量的所有操作（读取、赋值），都必须在工作内存中进行，而不能直接读写主内存中的变量。不同线程之间也无法直接访问对方工作内存中的变量，线程间变量值的传递均需要通过主内存来完成</p><p><strong>感谢</strong></p><blockquote><p>牛客网</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>jQuery DOM操作</title>
      <link href="/2020/07/11/jQuery%20DOM%E6%93%8D%E4%BD%9C/"/>
      <url>/2020/07/11/jQuery%20DOM%E6%93%8D%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="jQuery-DOM操作"><a href="#jQuery-DOM操作" class="headerlink" title="jQuery DOM操作"></a>jQuery DOM操作</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="内容操作"><a href="#内容操作" class="headerlink" title="内容操作"></a>内容操作</h4><ol><li><p>html()</p><p>获取/设置元素的标签体内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">font</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>  --&gt; <span class="tag">&lt;<span class="name">font</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">font</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><p>text()</p><p>获取/设置元素的标签体纯文本内容</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;<span class="name">font</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span> --&gt; 内容</span><br></pre></td></tr></table></figure></li><li><p>val()</p><p>获取/设置元素的value属性值</p></li></ol></li></ol><h4 id="属性操作"><a href="#属性操作" class="headerlink" title="属性操作"></a>属性操作</h4><h5 id="通用属性操作"><a href="#通用属性操作" class="headerlink" title="通用属性操作"></a>通用属性操作</h5><ol><li><p>attr()</p><p>获取/设置元素的属性</p></li><li><p>removeAttr()</p><p>删除属性</p></li><li><p>prop()</p><p>获取/设置元素的属性</p></li><li><p>removeProp()</p><p>删除属性</p></li></ol><h5 id="attr和prop区别？"><a href="#attr和prop区别？" class="headerlink" title="attr和prop区别？"></a>attr和prop区别？</h5><ol><li>如果操作的是元素的固有属性，则建议使用prop</li><li>如果操作的是元素自定义的属性，则建议使用attr</li></ol><h5 id="对class属性操作"><a href="#对class属性操作" class="headerlink" title="对class属性操作"></a>对class属性操作</h5><ol><li><p>addClass()</p><p>添加class属性值</p></li><li><p>removeClass()</p><p>删除class属性值</p></li><li><p>toggleClass()</p><p>切换class属性</p><p>toggleClass(“one”): </p><p>判断如果元素对象上存在class=”one”，则将属性值one删除掉。  如果元素对象上不存在class=”one”，则添加</p></li><li><p>css():</p><p>添加样式</p></li></ol><h4 id="CRUD操作"><a href="#CRUD操作" class="headerlink" title="CRUD操作"></a>CRUD操作</h4><ol><li><p>append()</p><p>父元素将子元素追加到末尾</p><ul><li>对象1.append(对象2): 将对象2添加到对象1元素内部，并且在末尾</li></ul></li><li><p>prepend()</p><p>父元素将子元素追加到开头</p><ul><li>对象1.prepend(对象2):将对象2添加到对象1元素内部，并且在开头</li></ul></li><li><p>appendTo()</p><ul><li>对象1.appendTo(对象2):将对象1添加到对象2内部，并且在末尾</li></ul></li><li><p>prependTo()</p><ul><li>对象1.prependTo(对象2):将对象1添加到对象2内部，并且在开头</li></ul></li><li><p>after()</p><p>  添加元素到元素后边</p><ul><li>对象1.after(对象2)： 将对象2添加到对象1后边。对象1和对象2是兄弟关系</li></ul></li><li><p>before()</p><p>  添加元素到元素前边</p><ul><li>对象1.before(对象2)： 将对象2添加到对象1前边。对象1和对象2是兄弟关系</li></ul></li><li><p>insertAfter()</p><ul><li>对象1.insertAfter(对象2)：将对象2添加到对象1后边。对象1和对象2是兄弟关系</li></ul></li><li><p>insertBefore()</p><ul><li>对象1.insertBefore(对象2)： 将对象2添加到对象1前边。对象1和对象2是兄弟关系</li></ul></li><li><p>remove()</p><p>  移除元素</p><ul><li>对象.remove():将对象删除掉</li></ul></li><li><p>empty()</p><p> 清空元素的所有后代元素。</p><ul><li>对象.empty():将对象的后代元素全部清空，但是保留当前对象以及其属性节点</li></ul></li></ol><p><strong>感谢</strong></p><blockquote><p>黑马程序员</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>jQuery 选择器</title>
      <link href="/2020/07/11/jQuery%20%E9%80%89%E6%8B%A9%E5%99%A8/"/>
      <url>/2020/07/11/jQuery%20%E9%80%89%E6%8B%A9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="jQuery-选择器"><a href="#jQuery-选择器" class="headerlink" title="jQuery 选择器"></a>jQuery 选择器</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p>jQuery 选择器允许您对 HTML 元素组或单个元素进行操作。</p><p>jQuery 选择器基于元素的 id、类、类型、属性、属性值等”查找”（或选择）HTML 元素。 </p><p>jQuery 中所有选择器都以美元符号开头：$()。</p><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><h5 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a>基本选择器</h5><ol><li>标签选择器（元素选择器）<ul><li>语法： $(“html标签名”) 获得所有匹配标签名称的元素</li></ul></li><li>id选择器 <ul><li>语法： $(“#id的属性值”) 获得与指定id属性值匹配的元素</li></ul></li><li>类选择器<ul><li>语法： $(“.class的属性值”) 获得与指定的class属性值匹配的元素</li></ul></li><li>并集选择器：<ul><li>语法： $(“选择器1,选择器2….”) 获取多个选择器选中的所有元素</li></ul></li></ol><h5 id="层级选择器"><a href="#层级选择器" class="headerlink" title="层级选择器"></a>层级选择器</h5><ol><li>后代选择器<ul><li>语法： $(“A B “) 选择A元素内部的所有B元素        </li></ul></li><li>子选择器<ul><li>语法： $(“A &gt; B”) 选择A元素内部的所有B子元素</li></ul></li></ol><h5 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h5><ol><li>属性名称选择器 <ul><li>语法： $(“A[属性名]”) 包含指定属性的选择器</li></ul></li><li>属性选择器<ul><li>语法： $(“A[属性名=’值’]”) 包含指定属性等于指定值的选择器</li></ul></li><li>复合属性选择器<ul><li>语法： $(“A[属性名=’值’]…”) 包含多个属性条件的选择器</li></ul></li></ol><h5 id="过滤选择器"><a href="#过滤选择器" class="headerlink" title="过滤选择器"></a>过滤选择器</h5><ol><li>首元素选择器 <ul><li>语法： :first 获得选择的元素中的第一个元素</li></ul></li><li>尾元素选择器 <ul><li>语法： :last 获得选择的元素中的最后一个元素</li></ul></li><li>非元素选择器<ul><li>语法： :not(selector) 不包括指定内容的元素</li></ul></li><li>偶数选择器<ul><li>语法： :even 偶数，从 0 开始计数</li></ul></li><li>奇数选择器<ul><li>语法： :odd 奇数，从 0 开始计数</li></ul></li><li>等于索引选择器<ul><li>语法： :eq(index) 指定索引元素</li></ul></li><li>大于索引选择器 <ul><li>语法： :gt(index) 大于指定索引元素</li></ul></li><li>小于索引选择器 <ul><li>语法： :lt(index) 小于指定索引元素</li></ul></li><li>标题选择器<ul><li>语法： :header 获得标题（h1~h6）元素，固定写法</li></ul></li></ol><h5 id="表单过滤选择器"><a href="#表单过滤选择器" class="headerlink" title="表单过滤选择器"></a>表单过滤选择器</h5><ol><li>可用元素选择器 <ul><li>语法： :enabled 获得可用元素</li></ul></li><li>不可用元素选择器 <ul><li>语法： :disabled 获得不可用元素</li></ul></li><li>选中选择器 <ul><li>语法： :checked 获得单选/复选框选中的元素</li></ul></li><li>选中选择器 <ul><li>语法： :selected 获得下拉框选中的元素</li></ul></li></ol><p><strong>感谢</strong></p><blockquote><p>黑马程序员</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>jQuery--基本语法</title>
      <link href="/2020/07/11/jQuery--%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
      <url>/2020/07/11/jQuery--%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="jQuery-选择器"><a href="#jQuery-选择器" class="headerlink" title="jQuery 选择器"></a>jQuery 选择器</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p>jQuery 选择器允许您对 HTML 元素组或单个元素进行操作。</p><p>jQuery 选择器基于元素的 id、类、类型、属性、属性值等”查找”（或选择）HTML 元素。 </p><p>jQuery 中所有选择器都以美元符号开头：$()。</p><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><h5 id="基本选择器"><a href="#基本选择器" class="headerlink" title="基本选择器"></a>基本选择器</h5><ol><li>标签选择器（元素选择器）<ul><li>语法： $(“html标签名”) 获得所有匹配标签名称的元素</li></ul></li><li>id选择器 <ul><li>语法： $(“#id的属性值”) 获得与指定id属性值匹配的元素</li></ul></li><li>类选择器<ul><li>语法： $(“.class的属性值”) 获得与指定的class属性值匹配的元素</li></ul></li><li>并集选择器：<ul><li>语法： $(“选择器1,选择器2….”) 获取多个选择器选中的所有元素</li></ul></li></ol><h5 id="层级选择器"><a href="#层级选择器" class="headerlink" title="层级选择器"></a>层级选择器</h5><ol><li>后代选择器<ul><li>语法： $(“A B “) 选择A元素内部的所有B元素        </li></ul></li><li>子选择器<ul><li>语法： $(“A &gt; B”) 选择A元素内部的所有B子元素</li></ul></li></ol><h5 id="属性选择器"><a href="#属性选择器" class="headerlink" title="属性选择器"></a>属性选择器</h5><ol><li>属性名称选择器 <ul><li>语法： $(“A[属性名]”) 包含指定属性的选择器</li></ul></li><li>属性选择器<ul><li>语法： $(“A[属性名=’值’]”) 包含指定属性等于指定值的选择器</li></ul></li><li>复合属性选择器<ul><li>语法： $(“A[属性名=’值’]…”) 包含多个属性条件的选择器</li></ul></li></ol><h5 id="过滤选择器"><a href="#过滤选择器" class="headerlink" title="过滤选择器"></a>过滤选择器</h5><ol><li>首元素选择器 <ul><li>语法： :first 获得选择的元素中的第一个元素</li></ul></li><li>尾元素选择器 <ul><li>语法： :last 获得选择的元素中的最后一个元素</li></ul></li><li>非元素选择器<ul><li>语法： :not(selector) 不包括指定内容的元素</li></ul></li><li>偶数选择器<ul><li>语法： :even 偶数，从 0 开始计数</li></ul></li><li>奇数选择器<ul><li>语法： :odd 奇数，从 0 开始计数</li></ul></li><li>等于索引选择器<ul><li>语法： :eq(index) 指定索引元素</li></ul></li><li>大于索引选择器 <ul><li>语法： :gt(index) 大于指定索引元素</li></ul></li><li>小于索引选择器 <ul><li>语法： :lt(index) 小于指定索引元素</li></ul></li><li>标题选择器<ul><li>语法： :header 获得标题（h1~h6）元素，固定写法</li></ul></li></ol><h5 id="表单过滤选择器"><a href="#表单过滤选择器" class="headerlink" title="表单过滤选择器"></a>表单过滤选择器</h5><ol><li>可用元素选择器 <ul><li>语法： :enabled 获得可用元素</li></ul></li><li>不可用元素选择器 <ul><li>语法： :disabled 获得不可用元素</li></ul></li><li>选中选择器 <ul><li>语法： :checked 获得单选/复选框选中的元素</li></ul></li><li>选中选择器 <ul><li>语法： :selected 获得下拉框选中的元素</li></ul></li></ol><p><strong>感谢</strong></p><blockquote><p>黑马程序员</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>jQuery--简介和使用</title>
      <link href="/2020/07/11/jQuery--%E7%AE%80%E4%BB%8B%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/07/11/jQuery--%E7%AE%80%E4%BB%8B%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="jQuery–简介和使用"><a href="#jQuery–简介和使用" class="headerlink" title="jQuery–简介和使用"></a>jQuery–简介和使用</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p>jQuery是一个快速、简洁的JavaScript框架，是继Prototype之后又一个优秀的JavaScript代码库（<em>或JavaScript框架</em>）。jQuery设计的宗旨是“write Less，Do More”，即倡导写更少的代码，做更多的事情。它封装JavaScript常用的功能代码，提供一种简便的JavaScript设计模式，优化HTML文档操作、事件处理、动画设计和Ajax交互。</p><h4 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h4><p>jQuery是一个JavaScript函数库。</p><p>jQuery是一个轻量级的”写的少，做的多”的JavaScript库。</p><p>jQuery库包含以下功能：</p><ul><li>HTML 元素选取</li><li>HTML 元素操作</li><li>CSS 操作</li><li>HTML 事件函数</li><li>JavaScript 特效和动画</li><li>HTML DOM 遍历和修改</li><li>AJAX</li><li>Utilities</li></ul><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p> <a href="http://jquery.com/download/" target="_blank" rel="noopener">jquery.com</a>从这个网站上下载即可</p><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><p>jQuery 库是一个 JavaScript 文件，您可以使用 HTML 的 <script> 标签引用它：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"jquery-1.10.2.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><p>也可以使用CDN</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>感谢</strong></p><blockquote><p>百度百科</p><p>菜鸟教程</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java--Filter（过滤器）</title>
      <link href="/2020/07/10/Java--Filter%EF%BC%88%E8%BF%87%E6%BB%A4%E5%99%A8%EF%BC%89/"/>
      <url>/2020/07/10/Java--Filter%EF%BC%88%E8%BF%87%E6%BB%A4%E5%99%A8%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="Java–Filter（过滤器）"><a href="#Java–Filter（过滤器）" class="headerlink" title="Java–Filter（过滤器）"></a>Java–Filter（过滤器）</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>Filter也称之为过滤器，它是Servlet技术中最实用的技术，Web开发人员通过Filter技术，对web服务器管理的所有web资源，例如Jsp, Servlet, 静态图片文件或静态 html 文件等进行拦截，从而实现一些特殊的功能。</p><p>实现URL级别的权限访问控制、过滤敏感词汇、压缩响应信息等一些高级功能。</p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><h5 id="注解方式"><a href="#注解方式" class="headerlink" title="注解方式"></a>注解方式</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">@WebFilter(&quot;&#x2F;*&quot;)&#x2F;&#x2F;访问所有资源之前，都会执行该过滤器</span><br><span class="line">public class Filter implements Filter &#123;</span><br><span class="line">    @Override</span><br><span class="line">    public void init(FilterConfig filterConfig) throws ServletException &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException &#123;</span><br><span class="line">        System.out.println(&quot;filter被执行了....&quot;);</span><br><span class="line">        &#x2F;&#x2F;放行</span><br><span class="line">        filterChain.doFilter(servletRequest,servletResponse);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void destroy() &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="web-xml"><a href="#web-xml" class="headerlink" title="web.xml"></a>web.xml</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;filter&gt;</span><br><span class="line">        &lt;filter-name&gt;demo1&lt;&#x2F;filter-name&gt;</span><br><span class="line">        &lt;filter-class&gt;cn.itcast.web.filter.FilterDemo1&lt;&#x2F;filter-class&gt;</span><br><span class="line">    &lt;&#x2F;filter&gt;</span><br><span class="line">    &lt;filter-mapping&gt;</span><br><span class="line">        &lt;filter-name&gt;demo1&lt;&#x2F;filter-name&gt;</span><br><span class="line">&lt;!-- 拦截路径 --&gt;</span><br><span class="line">        &lt;url-pattern&gt;&#x2F;*&lt;&#x2F;url-pattern&gt;</span><br><span class="line">    &lt;&#x2F;filter-mapping&gt;</span><br></pre></td></tr></table></figure><h4 id="过滤器生命周期方法"><a href="#过滤器生命周期方法" class="headerlink" title="过滤器生命周期方法"></a>过滤器生命周期方法</h4><h5 id="init"><a href="#init" class="headerlink" title="init"></a>init</h5><p>在服务器启动后，会创建Filter对象，然后调用init方法。只执行一次。用于加载资源</p><h5 id="doFilter"><a href="#doFilter" class="headerlink" title="doFilter"></a>doFilter</h5><p>每一次请求被拦截资源时，会执行。执行多次</p><h5 id="destroy"><a href="#destroy" class="headerlink" title="destroy"></a>destroy</h5><p>在服务器关闭后，Filter对象被销毁。如果服务器是正常关闭，则会执行destroy方法。只执行一次。用于释放资源</p><h4 id="过滤器配置详解"><a href="#过滤器配置详解" class="headerlink" title="过滤器配置详解"></a>过滤器配置详解</h4><h5 id="拦截路径配置"><a href="#拦截路径配置" class="headerlink" title="拦截路径配置"></a>拦截路径配置</h5><ul><li><p>具体资源路径： /index.jsp   只有访问index.jsp资源时，过滤器才会被执行</p></li><li><p>拦截目录： /user/*    访问/user下的所有资源时，过滤器都会被执行</p></li><li><p>后缀名拦截： *.jsp        访问所有后缀名为jsp资源时，过滤器都会被执行</p></li><li><p>拦截所有资源：/*        访问所有资源时，过滤器都会被执行</p></li></ul><h5 id="拦截方式配置：资源被访问的方式"><a href="#拦截方式配置：资源被访问的方式" class="headerlink" title="拦截方式配置：资源被访问的方式"></a>拦截方式配置：资源被访问的方式</h5><ul><li><p>注解配置：</p><ul><li>设置dispatcherTypes属性<ol><li>REQUEST：默认值。浏览器直接请求资源</li><li>FORWARD：转发访问资源</li><li>INCLUDE：包含访问资源</li><li>ERROR：错误跳转资源</li><li>ASYNC：异步访问资源</li></ol></li></ul></li><li><p>web.xml配置</p><ul><li><p>设置标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;dispatcher&gt;&lt;&#x2F;dispatcher&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ul><h4 id="配置多个过滤器"><a href="#配置多个过滤器" class="headerlink" title="配置多个过滤器"></a>配置多个过滤器</h4><ul><li>执行顺序：如果有两个过滤器：过滤器1和过滤器2，具体过程？  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">过滤器1</span><br><span class="line"></span><br><span class="line">过滤器2</span><br><span class="line"></span><br><span class="line">资源执行</span><br><span class="line"></span><br><span class="line">过滤器2</span><br><span class="line"></span><br><span class="line">过滤器1</span><br></pre></td></tr></table></figure></li></ul><h4 id="过滤器先后顺序问题"><a href="#过滤器先后顺序问题" class="headerlink" title="过滤器先后顺序问题"></a>过滤器先后顺序问题</h4><p>有两个过滤器先执行哪一个？</p><ol><li>注解配置：按照类名的字符串比较规则比较，值小的先执行<ul><li>如： AFilter 和 BFilter，AFilter就先执行了。</li></ul></li><li>web.xml配置： <filter-mapping>谁定义在上边，谁先执行</li></ol><p><strong>感谢</strong></p><blockquote><p>黑马程序员</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>TP5.1让验证码在另外的项目（Electron-vue）里面使用</title>
      <link href="/2020/07/10/TP5.1%E8%AE%A9%E9%AA%8C%E8%AF%81%E7%A0%81%E5%9C%A8%E5%8F%A6%E5%A4%96%E7%9A%84%E9%A1%B9%E7%9B%AE%EF%BC%88Electron-vue%EF%BC%89%E9%87%8C%E9%9D%A2%E4%BD%BF%E7%94%A8/"/>
      <url>/2020/07/10/TP5.1%E8%AE%A9%E9%AA%8C%E8%AF%81%E7%A0%81%E5%9C%A8%E5%8F%A6%E5%A4%96%E7%9A%84%E9%A1%B9%E7%9B%AE%EF%BC%88Electron-vue%EF%BC%89%E9%87%8C%E9%9D%A2%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="TP5-1验证Token和Electron-vue头部携带Token"><a href="#TP5-1验证Token和Electron-vue头部携带Token" class="headerlink" title="TP5.1验证Token和Electron-vue头部携带Token"></a>TP5.1验证Token和Electron-vue头部携带Token</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p>在做一个Electron-vue的项目的时候需要使用到登录，使用TP5.1作为后台框架，正规的流程是在Electron-vue中携带Token信息，在TP5.1中验证Token来判断是否过期</p><h4 id="Electron-vue头部携带Token"><a href="#Electron-vue头部携带Token" class="headerlink" title="Electron-vue头部携带Token"></a>Electron-vue头部携带Token</h4><p>在配置拦截器的时候配置请求头</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200710130323399.png" alt="image-20200710130323399"></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// request拦截器</span></span><br><span class="line">service.interceptors.request.use(<span class="function"><span class="params">config</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (store.getters.token) &#123;</span><br><span class="line">    config.headers[<span class="string">'Authorization'</span>] = store.getters.token<span class="comment">// 让每个请求携带自定义token 请根据实际情况自行修改</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> config</span><br><span class="line">&#125;, error =&gt; &#123;</span><br><span class="line">  <span class="comment">// Do something with request error</span></span><br><span class="line">  <span class="built_in">console</span>.log(error) <span class="comment">// for debug</span></span><br><span class="line">  <span class="built_in">Promise</span>.reject(error)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>注意这个Authorization必须是在后端跨域的Access-Control-Allow-Headers参数中有的，比如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-Origin:*</span><br><span class="line">Access-Control-Allow-Methods:GET, POST, PATCH, PUT, DELETE</span><br><span class="line">Access-Control-Allow-Headers:Authorization, Content-Type, If-Match, If-Modified-Since, If-None-Match, If-Unmodified-Since, X-Requested-With</span><br></pre></td></tr></table></figure><h4 id="TP5-1验证Token"><a href="#TP5-1验证Token" class="headerlink" title="TP5.1验证Token"></a>TP5.1验证Token</h4><p>首先在路由的时候设置中间件</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200710130712029.png" alt="image-20200710130712029"></p><p>然后我们的验证就写在这个中间件里面</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">handle</span><span class="params">($request, \Closure $next)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 获取头部信息</span></span><br><span class="line">        $param = $request-&gt;header();</span><br><span class="line">        <span class="comment">// 不含token</span></span><br><span class="line">        <span class="keyword">if</span> (!array_key_exists(<span class="string">'authorization'</span>, $param)) TApiException(<span class="string">'非法token，禁止操作'</span>, <span class="number">20003</span>, <span class="number">200</span>);</span><br><span class="line">        <span class="comment">// 当前用户token是否存在（是否登录）</span></span><br><span class="line">        $token = $param[<span class="string">'authorization'</span>];</span><br><span class="line">        $user = Cache::get($token);</span><br><span class="line">        <span class="comment">// 验证失败（未登录或已过期）</span></span><br><span class="line">        <span class="keyword">if</span> (!$user) TApiException(<span class="string">'非法token，请重新登录'</span>, <span class="number">20003</span>, <span class="number">200</span>);</span><br><span class="line">        <span class="comment">// 将token和userid这类常用参数放在request中</span></span><br><span class="line">        $request-&gt;userToken = $token;</span><br><span class="line">        <span class="keyword">return</span> $next($request);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这样经过配置过的路由都会验证Token，以此来判断用户是否登录</p><p><strong>感谢</strong></p><blockquote><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Electron-vue请求携带cookie跨域问题</title>
      <link href="/2020/07/10/Electron-vue%E8%AF%B7%E6%B1%82%E6%90%BA%E5%B8%A6cookie%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/"/>
      <url>/2020/07/10/Electron-vue%E8%AF%B7%E6%B1%82%E6%90%BA%E5%B8%A6cookie%E8%B7%A8%E5%9F%9F%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="Electron-vue请求携带cookie跨域问题"><a href="#Electron-vue请求携带cookie跨域问题" class="headerlink" title="Electron-vue请求携带cookie跨域问题"></a>Electron-vue请求携带cookie跨域问题</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="问题说明"><a href="#问题说明" class="headerlink" title="问题说明"></a>问题说明</h4><p>在请求携带cookie的时候，跨域的问题又重新来了，原因在于cookie标识了服务器，我们在跨域配置的时候Access-Control-Allow-Origin，这个参数我们需要具体的指出，而不能使用*</p><h4 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h4><p>这个跨域问题一般在后端，这里一TP5.1为例</p><p>在路由配置跨域的时候精确到具体的客户端服务器的地址，也就是你前端的地址</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200710120558377.png" alt="image-20200710120558377"></p><p>这样就可以啦</p><p><strong>感谢</strong></p><blockquote><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Electron-vue在发送请求时携带cookie</title>
      <link href="/2020/07/10/Electron-vue%E5%9C%A8%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82%E6%97%B6%E6%90%BA%E5%B8%A6cookie/"/>
      <url>/2020/07/10/Electron-vue%E5%9C%A8%E5%8F%91%E9%80%81%E8%AF%B7%E6%B1%82%E6%97%B6%E6%90%BA%E5%B8%A6cookie/</url>
      
        <content type="html"><![CDATA[<h2 id="Electron-vue在发送请求时携带cookie"><a href="#Electron-vue在发送请求时携带cookie" class="headerlink" title="Electron-vue在发送请求时携带cookie"></a>Electron-vue在发送请求时携带cookie</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h4><p>axios一般呢我们会遇到在vue项目使用它来发送的我们的请求，相当于ajax</p><p>我们在使用axios的时候默认给它配置</p><p>例如我在项目调用请求的时候封装了一个request类，在引入axios的时候，给它初始化配置</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200710115444920.png" alt="image-20200710115444920"></p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line">axios.defaults.withCredentials=<span class="literal">true</span>;<span class="comment">//让ajax携带cookie</span></span><br></pre></td></tr></table></figure><p>vue项目类似（尽量在全局里面配置，比如main.js）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line">axios.defaults.withCredentials=<span class="literal">true</span>;<span class="comment">//让ajax携带cookie</span></span><br><span class="line">Vue.prototype.$axios = axios;</span><br></pre></td></tr></table></figure><p><strong>感谢</strong></p><blockquote><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>TP5.1解决跨域</title>
      <link href="/2020/07/10/TP5.1%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F/"/>
      <url>/2020/07/10/TP5.1%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="TP5-1解决跨域"><a href="#TP5-1解决跨域" class="headerlink" title="TP5.1解决跨域"></a>TP5.1解决跨域</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p>在前后端分离开发的时候就会遇到跨域的问题，在本地调试的时候可能不会出现什么太大的问题，但是上线部署的时候难免会遇到问题</p><p>不过这种跨域的问题还是最好在后端解决</p><h4 id="官方手册地址"><a href="#官方手册地址" class="headerlink" title="官方手册地址"></a>官方手册地址</h4><p><a href="https://www.kancloud.cn/manual/thinkphp5_1/489844" target="_blank" rel="noopener">https://www.kancloud.cn/manual/thinkphp5_1/489844</a></p><h4 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h4><p>在我们的route目录下的route.php，可以分组配置路由</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200710114319444.png" alt="image-20200710114319444"></p><p>这个是默认的跨域设置，当然这个都可以自己添加的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Access-Control-Allow-Origin:*</span><br><span class="line">Access-Control-Allow-Methods:GET, POST, PATCH, PUT, DELETE</span><br><span class="line">Access-Control-Allow-Headers:Authorization, Content-Type, If-Match, If-Modified-Since, If-None-Match, If-Unmodified-Since, X-Requested-With</span><br></pre></td></tr></table></figure><p>添加可以像这样的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Route::get(<span class="string">'new/:id'</span>, <span class="string">'News/read'</span>)</span><br><span class="line">    -&gt;ext(<span class="string">'html'</span>)</span><br><span class="line">    -&gt;header(<span class="string">'Access-Control-Allow-Origin'</span>,<span class="string">'thinkphp.cn'</span>)</span><br><span class="line">    -&gt;header(<span class="string">'Access-Control-Allow-Credentials'</span>, <span class="string">'true'</span>)</span><br><span class="line">    -&gt;allowCrossDomain();</span><br></pre></td></tr></table></figure><p><strong>感谢</strong></p><blockquote><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Electron-vue解决跨域</title>
      <link href="/2020/07/10/Electron-vue%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F/"/>
      <url>/2020/07/10/Electron-vue%E8%A7%A3%E5%86%B3%E8%B7%A8%E5%9F%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="Electron-vue解决跨域"><a href="#Electron-vue解决跨域" class="headerlink" title="Electron-vue解决跨域"></a>Electron-vue解决跨域</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p>在前后端分离开发的时候就会遇到跨域的问题，在本地调试的时候可能不会出现什么太大的问题，但是上线部署的时候难免会遇到问题</p><h4 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h4><p>在.electron-vue下面的dev-runner.js里面的WebpackDevServer添加配置</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200710113412336.png" alt="image-20200710113412336"></p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">proxy: &#123;</span><br><span class="line">  <span class="string">'/api'</span>: &#123;</span><br><span class="line">    <span class="comment">// 请求的目标服务器地址</span></span><br><span class="line">    target: <span class="string">'https://www.domain.com'</span>,</span><br><span class="line">    <span class="comment">// 如果是https接口，需要配置这个参数</span></span><br><span class="line">    secure: <span class="literal">false</span>,</span><br><span class="line">    <span class="comment">// 设置允许跨域</span></span><br><span class="line">    changeOrigin: <span class="literal">true</span>,</span><br><span class="line">    <span class="comment">// 重写路径</span></span><br><span class="line">    pathRewrite: &#123;</span><br><span class="line">      <span class="string">'^/api'</span>: <span class="string">''</span></span><br><span class="line">    &#125;,</span><br><span class="line">    headers: &#123;</span><br><span class="line">      referer: <span class="string">''</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p><strong>感谢</strong></p><blockquote><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Electron-vue运行之后出现了文件浏览器</title>
      <link href="/2020/07/08/Electron-vue%E8%BF%90%E8%A1%8C%E4%B9%8B%E5%90%8E%E5%87%BA%E7%8E%B0%E4%BA%86%E6%96%87%E4%BB%B6%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
      <url>/2020/07/08/Electron-vue%E8%BF%90%E8%A1%8C%E4%B9%8B%E5%90%8E%E5%87%BA%E7%8E%B0%E4%BA%86%E6%96%87%E4%BB%B6%E6%B5%8F%E8%A7%88%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="Electron-vue运行之后出现了文件浏览器"><a href="#Electron-vue运行之后出现了文件浏览器" class="headerlink" title="Electron-vue运行之后出现了文件浏览器"></a>Electron-vue运行之后出现了文件浏览器</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="问题介绍"><a href="#问题介绍" class="headerlink" title="问题介绍"></a>问题介绍</h4><p>在运行项目的时候出现了文件浏览器</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200708095621584.png" alt="image-20200708095621584"></p><h4 id="问题原因（官方解释）"><a href="#问题原因（官方解释）" class="headerlink" title="问题原因（官方解释）"></a>问题原因（官方解释）</h4><p>你的 <code>src/renderer</code> 包含错误。请检查 控制台 (console)，修复错误，然后用 <code>CommandOrControl+R</code> 刷新 electron。</p><h5 id="详述"><a href="#详述" class="headerlink" title="详述"></a>详述</h5><p>如果你的 <code>src/renderer</code> 中出现错误，则会在首次运行时与 ESLint 产生冲突。接着，一个无效的 webpack 的 <code>renderer.js</code> 会被生成出来，它会打断 <code>HtmlWebpackPlugin</code> 创建 <code>index.html</code>。由于 <code>webpack-dev-server</code> 没有 <code>index.html</code> 可以提供服务，所以服务器失败，程序返回到文件浏览器。</p><h4 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h4><p>主要适合ESlint有关，将ESlint检查关闭就可以了，具体的在.electron-vue下面的三个配置文件里面的ESlint代码注释掉</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200708095938682.png" alt="image-20200708095938682"></p><p>那么这个问题就解决了</p><p><strong>感谢</strong></p><blockquote><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Electron-vue取消代码检查</title>
      <link href="/2020/07/08/Electron-vue%E5%8F%96%E6%B6%88%E4%BB%A3%E7%A0%81%E6%A3%80%E6%9F%A5/"/>
      <url>/2020/07/08/Electron-vue%E5%8F%96%E6%B6%88%E4%BB%A3%E7%A0%81%E6%A3%80%E6%9F%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="Electron-vue取消代码检查Eslint"><a href="#Electron-vue取消代码检查Eslint" class="headerlink" title="Electron-vue取消代码检查Eslint"></a>Electron-vue取消代码检查Eslint</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p>在项目运行的时候容易出现错误，特别是这种检查代码的，什么格式啊，甚至分号呀，一来就是一大推</p><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h4><p>在创建项目的时候不使用eslint</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200708092506141.png" alt="image-20200708092506141"></p><p>这里选择no</p><h4 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h4><p>在.elerton-vue目录下里面的三个文件都修改一下</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200708092813354.png" alt="image-20200708092813354"></p><p>把有关eslint的都注释掉</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200708092922716.png" alt="image-20200708092922716"></p><p>记得要重新<code>npm run dev</code></p><p><strong>感谢</strong></p><blockquote><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用Composer安装TP5.1出现zsh no matches found 5.1</title>
      <link href="/2020/07/05/%E4%BD%BF%E7%94%A8Composer%E5%AE%89%E8%A3%85TP5.1%E5%87%BA%E7%8E%B0zsh%20no%20matches%20found%205.1/"/>
      <url>/2020/07/05/%E4%BD%BF%E7%94%A8Composer%E5%AE%89%E8%A3%85TP5.1%E5%87%BA%E7%8E%B0zsh%20no%20matches%20found%205.1/</url>
      
        <content type="html"><![CDATA[<h2 id="使用Composer安装TP5-1出现zsh-no-matches-found-5-1"><a href="#使用Composer安装TP5-1出现zsh-no-matches-found-5-1" class="headerlink" title="使用Composer安装TP5.1出现zsh: no matches found: 5.1.*"></a>使用Composer安装TP5.1出现zsh: no matches found: 5.1.*</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="问题提示"><a href="#问题提示" class="headerlink" title="问题提示"></a>问题提示</h4><p>zsh: no matches found: 5.1.*</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200705171018329.png" alt="image-20200705171018329"></p><h4 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h4><p>在之前还是可以执行的，现在新建的时候出现了现在的问题</p><p>解决办法是不使用这个版本模糊的命令，直接确定版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer create-project topthink&#x2F;think&#x3D;5.1.31 sight</span><br></pre></td></tr></table></figure><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200705171236759.png" alt="image-20200705171236759"></p><p><strong>感谢</strong></p><blockquote><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Composer切换国内源</title>
      <link href="/2020/07/05/Composer%E5%88%87%E6%8D%A2%E5%9B%BD%E5%86%85%E6%BA%90/"/>
      <url>/2020/07/05/Composer%E5%88%87%E6%8D%A2%E5%9B%BD%E5%86%85%E6%BA%90/</url>
      
        <content type="html"><![CDATA[<h2 id="Composer切换国内源"><a href="#Composer切换国内源" class="headerlink" title="Composer切换国内源"></a>Composer切换国内源</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="局部切换"><a href="#局部切换" class="headerlink" title="局部切换"></a>局部切换</h4><p>在当前项目下的composer.json中添加</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="attr">"repositories"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"composer"</span>,</span><br><span class="line">            <span class="attr">"url"</span>: <span class="string">"https://mirrors.aliyun.com/composer/"</span> <span class="comment">//第一个源</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="全局切换"><a href="#全局切换" class="headerlink" title="全局切换"></a>全局切换</h4><p>首先把默认的源给禁用掉</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer config -g secure-http false</span><br></pre></td></tr></table></figure><p>再修改镜像源，这里使用阿里的源</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer config -g repo.packagist composer https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;composer&#x2F;</span><br></pre></td></tr></table></figure><p>查看</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer config -g -l</span><br></pre></td></tr></table></figure><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200705170603751.png" alt="image-20200705170603751"></p><p><strong>感谢</strong></p><blockquote><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>TP5.1出现A non well formed numeric value encountered问题</title>
      <link href="/2020/07/05/TP5.1%E5%87%BA%E7%8E%B0A%20non%20well%20formed%20numeric%20value%20encountered%E9%97%AE%E9%A2%98/"/>
      <url>/2020/07/05/TP5.1%E5%87%BA%E7%8E%B0A%20non%20well%20formed%20numeric%20value%20encountered%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="TP5-1出现A-non-well-formed-numeric-value-encountered问题"><a href="#TP5-1出现A-non-well-formed-numeric-value-encountered问题" class="headerlink" title="TP5.1出现A non well formed numeric value encountered问题"></a>TP5.1出现A non well formed numeric value encountered问题</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="问题介绍"><a href="#问题介绍" class="headerlink" title="问题介绍"></a>问题介绍</h4><p>A non well formed numeric value encountered</p><p>出现这样的问题是tp5.1自动转化时间格式失败出现的问题</p><p>比如在数据库里面的字段是varchar格式的，在tp5.1里代码又是写的该字段是自动转化时间戳格式的，就会出错</p><h4 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h4><p>在数据库中使用时间类的字段，或者使用int类型，或者不使用tp5.1的自动转化</p><p><strong>感谢</strong></p><blockquote><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Mac正确解决checkPermissions Missing write access to问题</title>
      <link href="/2020/07/04/Mac%E6%AD%A3%E7%A1%AE%E8%A7%A3%E5%86%B3checkPermissions%20Missing%20write%20access%20to%E9%97%AE%E9%A2%98/"/>
      <url>/2020/07/04/Mac%E6%AD%A3%E7%A1%AE%E8%A7%A3%E5%86%B3checkPermissions%20Missing%20write%20access%20to%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h2 id="Mac正确解决checkPermissions-Missing-write-access-to问题"><a href="#Mac正确解决checkPermissions-Missing-write-access-to问题" class="headerlink" title="Mac正确解决checkPermissions Missing write access to问题"></a>Mac正确解决checkPermissions Missing write access to问题</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="问题详情"><a href="#问题详情" class="headerlink" title="问题详情"></a>问题详情</h4><p>npm WARN checkPermissions Missing write access to /Users/tanglei/Downloads/sight/node_modules/uview-ui</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200704120339929.png" alt="image-20200704120339929"></p><h4 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h4><p>刚开始以为是权限不够，那么就加权限sudo</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200704120507238.png" alt="image-20200704120507238"></p><p>然而还是没有用</p><p>那么就可能是已经有了这个文件了，把node_modules目录删除，再试一次</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200704120643679.png" alt="image-20200704120643679"></p><p>那么就解决了</p><p><strong>感谢</strong></p><blockquote><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode–最长公共前缀</title>
      <link href="/2020/07/01/LeetCode%E2%80%93%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/"/>
      <url>/2020/07/01/LeetCode%E2%80%93%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E5%89%8D%E7%BC%80/</url>
      
        <content type="html"><![CDATA[<h2 id="LeetCode–最长公共前缀"><a href="#LeetCode–最长公共前缀" class="headerlink" title="LeetCode–最长公共前缀"></a>LeetCode–最长公共前缀</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>leetcode题，14题</p><p><a href="https://leetcode-cn.com/problems/longest-common-prefix" target="_blank" rel="noopener">最长公共前缀</a></p><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p>编写一个函数来查找字符串数组中的最长公共前缀。</p><p>如果不存在公共前缀，返回空字符串 “”。</p><p>示例 1:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: [&quot;flower&quot;,&quot;flow&quot;,&quot;flight&quot;]</span><br><span class="line">输出: &quot;fl&quot;</span><br></pre></td></tr></table></figure><p>示例 2:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: [&quot;dog&quot;,&quot;racecar&quot;,&quot;car&quot;]</span><br><span class="line">输出: &quot;&quot;</span><br></pre></td></tr></table></figure><p>解释: 输入不存在公共前缀。</p><p>说明:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">所有输入只包含小写字母 a-z</span><br></pre></td></tr></table></figure><h4 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h4><h5 id="水平扫描法"><a href="#水平扫描法" class="headerlink" title="水平扫描法"></a>水平扫描法</h5><p>依次遍历字符串数组中的每个字符串，对于每个遍历到的字符串，更新最长公共前缀，当遍历完所有的字符串以后，即可得到字符串数组中的最长公共前缀。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">longestCommonPrefix</span><span class="params">(String[] strs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(strs == <span class="keyword">null</span> || strs.length == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//假设第一个字段为公共前缀</span></span><br><span class="line">        String prefix = strs[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> count = strs.length;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>;i&lt;count;i++)&#123;</span><br><span class="line">            <span class="comment">//获取两个字符串最长前缀</span></span><br><span class="line">            prefix = longestCommonPrefix(prefix,strs[i]);</span><br><span class="line">            <span class="keyword">if</span>(prefix.length() == <span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> prefix;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取两个字符串最长前缀</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">longestCommonPrefix</span><span class="params">(String str1,String str2)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> length = Math.min(str1.length(),str2.length());</span><br><span class="line">        <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(index&lt;length &amp;&amp; str1.charAt(index) == str2.charAt(index))&#123;</span><br><span class="line">            index++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> str1.substring(<span class="number">0</span>,index);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h4><p>水平扫描法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">longestCommonPrefix</span><span class="params">(self, strs: List[str])</span> -&gt; str:</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> strs:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">        <span class="comment">#假设第一个字段为公共前缀</span></span><br><span class="line">        prefix , count = strs[<span class="number">0</span>],len(strs)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,count):</span><br><span class="line">            <span class="comment">#获取两个字符串最长前缀</span></span><br><span class="line">            prefix = self.commonPrefix(prefix,strs[i])</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> prefix:</span><br><span class="line">                <span class="keyword">return</span> <span class="string">""</span></span><br><span class="line">        <span class="keyword">return</span> prefix</span><br><span class="line">    <span class="comment">#获取两个字符串最长前缀</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">commonPrefix</span><span class="params">(self,str1,str2)</span>:</span></span><br><span class="line">        length,index = min(len(str1),len(str2)),<span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> index &lt; length <span class="keyword">and</span> str1[index] == str2[index]:</span><br><span class="line">            index += <span class="number">1</span></span><br><span class="line">        <span class="keyword">return</span> str1[:index]</span><br></pre></td></tr></table></figure><h4 id="C"><a href="#C" class="headerlink" title="C++"></a>C++</h4><p>水平扫描法</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">longestCommonPrefix</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp; strs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!strs.<span class="built_in">size</span>())&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">string</span> prefix = strs[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> count = strs.<span class="built_in">size</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>;i &lt; count; i++)&#123;</span><br><span class="line">            prefix = longestCommonPrefix(prefix,strs[i]);</span><br><span class="line">            <span class="keyword">if</span> (!prefix.<span class="built_in">size</span>())&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> prefix;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">longestCommonPrefix</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span>&amp; str1,<span class="keyword">const</span> <span class="built_in">string</span>&amp; str2)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> length = <span class="built_in">min</span>(str1.<span class="built_in">size</span>(),str2.<span class="built_in">size</span>());</span><br><span class="line">        <span class="keyword">while</span>(index &lt; length &amp;&amp; str1[index] == str2[index])&#123;</span><br><span class="line">            index++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> str1.substr(<span class="number">0</span>,index);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h4 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h4><p>水平扫描法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String[] $strs</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">longestCommonPrefix</span><span class="params">($strs)</span> </span>&#123;</span><br><span class="line">        $prefix = <span class="string">''</span>;</span><br><span class="line">        $i = <span class="number">0</span>;</span><br><span class="line">      <span class="comment">//判断其中是否有字符串长度为0</span></span><br><span class="line">        <span class="keyword">foreach</span>($strs <span class="keyword">as</span> $key =&gt; $value)&#123;</span><br><span class="line">            <span class="keyword">if</span>($value == <span class="string">''</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> $prefix;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//判断个数是否为空</span></span><br><span class="line">        <span class="keyword">if</span>(count($strs)&lt;<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> $prefix;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">          <span class="comment">//获取当前第i个字符</span></span><br><span class="line">            $current = $strs[<span class="number">0</span>]&#123;$i&#125;;</span><br><span class="line">            <span class="keyword">if</span>(!$current)&#123;</span><br><span class="line">                <span class="keyword">return</span> $prefix;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">foreach</span>($strs <span class="keyword">as</span> $key =&gt; $value)&#123;</span><br><span class="line">                <span class="keyword">if</span>($value&#123;$i&#125; != $current)&#123;</span><br><span class="line">                    <span class="keyword">return</span> $prefix;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            $prefix .= $current;</span><br><span class="line">            $i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> $prefix;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>感谢</strong></p><blockquote><p>leetcode</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>查找--差值查找（Java）</title>
      <link href="/2020/07/01/%E6%9F%A5%E6%89%BE--%E5%B7%AE%E5%80%BC%E6%9F%A5%E6%89%BE%EF%BC%88Java%EF%BC%89/"/>
      <url>/2020/07/01/%E6%9F%A5%E6%89%BE--%E5%B7%AE%E5%80%BC%E6%9F%A5%E6%89%BE%EF%BC%88Java%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="查找–差值查找（Java）"><a href="#查找–差值查找（Java）" class="headerlink" title="查找–差值查找（Java）"></a>查找–差值查找（Java）</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p>插值查找算法类似于二分查找，不同的是插值查找每次从自适应mid处开始查找。</p><h4 id="自适应"><a href="#自适应" class="headerlink" title="自适应"></a>自适应</h4><p>计算自适应mid</p><p>int mid = left + (right – left) * (findVal – arr[left]) / (arr[right] – arr[left])</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.search;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InsertValueSearch</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> max = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[max];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; max; i++) &#123;</span><br><span class="line">            arr[i] = i + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> index = insertValueSearch(arr, <span class="number">0</span>, arr.length - <span class="number">1</span>, <span class="number">100</span>);</span><br><span class="line">        <span class="keyword">if</span>(index == -<span class="number">1</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"未找到"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"下标为："</span>+index);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">insertValueSearch</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> left, <span class="keyword">int</span> right, <span class="keyword">int</span> value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (left &gt; right || value &lt; arr[<span class="number">0</span>] || value &gt; arr[arr.length - <span class="number">1</span>]) &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> mid = left + (right - left) * (value - arr[left]) / (arr[right] - arr[left]);</span><br><span class="line">        <span class="keyword">int</span> midValue = arr[left];</span><br><span class="line">        <span class="keyword">if</span> (value &gt; arr[mid]) &#123;</span><br><span class="line">            <span class="keyword">return</span> insertValueSearch(arr, mid + <span class="number">1</span>, right, value);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (value &lt; arr[mid]) &#123;</span><br><span class="line">            <span class="keyword">return</span> insertValueSearch(arr, left, mid - <span class="number">1</span>, value);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="注意的事项"><a href="#注意的事项" class="headerlink" title="注意的事项"></a>注意的事项</h4><ul><li>对于数据量较大，关键字分布比较均匀的查找表来说，采用插值查找, 速度较快.</li><li>关键字分布不均匀的情况下，该方法不一定比折半查找要好</li></ul><p><strong>感谢</strong></p><blockquote><p>尚硅谷</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>查找--二分查找（Java）</title>
      <link href="/2020/06/30/%E6%9F%A5%E6%89%BE--%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%EF%BC%88Java%EF%BC%89/"/>
      <url>/2020/06/30/%E6%9F%A5%E6%89%BE--%E4%BA%8C%E5%88%86%E6%9F%A5%E6%89%BE%EF%BC%88Java%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="查找–二分查找（Java）"><a href="#查找–二分查找（Java）" class="headerlink" title="查找–二分查找（Java）"></a>查找–二分查找（Java）</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p>二分查找也称折半查找（Binary Search），它是一种效率较高的查找方法。但是，折半查找要求线性表必须采用顺序存储结构，而且表中元素按关键字有序排列。</p><h4 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h4><p>首先，假设表中元素是按升序排列，将表中间位置记录的关键字与查找关键字比较，如果两者相等，则查找成功；否则利用中间位置记录将表分成前、后两个子表，如果中间位置记录的关键字大于查找关键字，则进一步查找前一子表，否则进一步查找后一子表。重复以上过程，直到找到满足条件的记录，使查找成功，或直到子表不存在为止，此时查找不成功。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.search;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BinarySearch</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">5</span>, <span class="number">26</span>, <span class="number">68</span>, <span class="number">100</span>, <span class="number">235</span>, <span class="number">667</span>, <span class="number">896</span>, <span class="number">999</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> index = binarySearch(arr, <span class="number">0</span>, arr.length - <span class="number">1</span>, <span class="number">26</span>);</span><br><span class="line">        <span class="keyword">if</span>(index == -<span class="number">1</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"未找到"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"下标为："</span>+index);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">binarySearch</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> left, <span class="keyword">int</span> right, <span class="keyword">int</span> value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (left &gt; right) &#123;</span><br><span class="line">            <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> mid = (right + left) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span> midValue = arr[mid];</span><br><span class="line">        <span class="keyword">if</span> (value &gt; midValue) &#123;</span><br><span class="line">            <span class="keyword">return</span> binarySearch(arr, mid + <span class="number">1</span>, right, value);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (value &lt; midValue) &#123;</span><br><span class="line">            <span class="keyword">return</span> binarySearch(arr, left, mid - <span class="number">1</span>, value);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> mid;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h4><p>将数列中重复的数的下标全部找到</p><h5 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.search;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BinarySearch</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">5</span>, <span class="number">26</span>, <span class="number">26</span>, <span class="number">26</span>, <span class="number">26</span>, <span class="number">68</span>, <span class="number">100</span>, <span class="number">235</span>, <span class="number">667</span>, <span class="number">896</span>, <span class="number">999</span>&#125;;</span><br><span class="line">        List&lt;Integer&gt; arrayList = binarySearch(arr, <span class="number">0</span>, arr.length - <span class="number">1</span>, <span class="number">25</span>);</span><br><span class="line">        <span class="keyword">if</span> (arrayList.size() == <span class="number">0</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">"未找到"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"下标集为："</span> + arrayList);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;Integer&gt; <span class="title">binarySearch</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> left, <span class="keyword">int</span> right, <span class="keyword">int</span> value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (left &gt; right) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span> midValue = arr[mid];</span><br><span class="line">        <span class="keyword">if</span> (value &gt; midValue) &#123;</span><br><span class="line">            <span class="keyword">return</span> binarySearch(arr, mid + <span class="number">1</span>, right, value);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (value &lt; midValue) &#123;</span><br><span class="line">            <span class="keyword">return</span> binarySearch(arr, left, mid - <span class="number">1</span>, value);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            List&lt;Integer&gt; resIndexList = <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">            <span class="keyword">int</span> temp = mid - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (temp &lt; <span class="number">0</span> || arr[temp] != value) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                resIndexList.add(temp);</span><br><span class="line">                temp -= <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            resIndexList.add(mid);</span><br><span class="line">            temp = mid + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (temp &gt; arr.length - <span class="number">1</span> || arr[temp] != value) &#123;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                resIndexList.add(temp);</span><br><span class="line">                temp += <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> resIndexList;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>感谢</strong></p><blockquote><p>尚硅谷</p><p>百度百科</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>查找--线性查找（Java）</title>
      <link href="/2020/06/30/%E6%9F%A5%E6%89%BE--%E7%BA%BF%E6%80%A7%E6%9F%A5%E6%89%BE%EF%BC%88Java%EF%BC%89/"/>
      <url>/2020/06/30/%E6%9F%A5%E6%89%BE--%E7%BA%BF%E6%80%A7%E6%9F%A5%E6%89%BE%EF%BC%88Java%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="查找–线性查找（Java）"><a href="#查找–线性查找（Java）" class="headerlink" title="查找–线性查找（Java）"></a>查找–线性查找（Java）</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h4><p>线性查找又称顺序查找，是一种最简单的查找方法，它的基本思想是从第一个记录开始，逐个比较记录的关键字，直到和给定的K值相等，则查找成功；若比较结果与文件中n个记录的关键字都不等，则查找失败</p><p>线性查找可以的数列可以是有序的也可以是无序的</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.search;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderSearch</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">69</span>, <span class="number">35</span>, <span class="number">89</span>, <span class="number">1100</span>, <span class="number">456</span>, <span class="number">2</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> index = orderSearch(arr, <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span>(index == -<span class="number">1</span>)&#123;</span><br><span class="line">            System.out.println(<span class="string">"未找到"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">"下标为："</span>+index);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">orderSearch</span><span class="params">(<span class="keyword">int</span>[] arr,<span class="keyword">int</span> value)</span></span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(arr[i] == value)&#123;</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>感谢</strong></p><blockquote><p>尚硅谷</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java--小项目（登录、增删改查、分页、搜索）</title>
      <link href="/2020/06/29/Java--%E5%B0%8F%E9%A1%B9%E7%9B%AE%EF%BC%88%E7%99%BB%E5%BD%95%E3%80%81%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E3%80%81%E5%88%86%E9%A1%B5%E3%80%81%E6%90%9C%E7%B4%A2%EF%BC%89/"/>
      <url>/2020/06/29/Java--%E5%B0%8F%E9%A1%B9%E7%9B%AE%EF%BC%88%E7%99%BB%E5%BD%95%E3%80%81%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E3%80%81%E5%88%86%E9%A1%B5%E3%80%81%E6%90%9C%E7%B4%A2%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="Java–小项目（登录、增删改查、分页、搜索）"><a href="#Java–小项目（登录、增删改查、分页、搜索）" class="headerlink" title="Java–小项目（登录、增删改查、分页、搜索）"></a>Java–小项目（登录、增删改查、分页、搜索）</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><h4 id="技术选型"><a href="#技术选型" class="headerlink" title="技术选型"></a>技术选型</h4><p>Servlet、JSP、MySQL、JDBCTempleat、Duird、BeanUtilS、tomcat</p><h4 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h4><p>登录功能，列表展示，数据添加，数据编辑，数据删除，批量删除，分页展示，关键字搜索</p><h4 id="创建JavaWeb项目"><a href="#创建JavaWeb项目" class="headerlink" title="创建JavaWeb项目"></a>创建JavaWeb项目</h4><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200628131331797.png" alt="image-20200628131331797"></p><h4 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h4><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200628131511018.png" alt="image-20200628131511018"></p><h4 id="添加页面文件"><a href="#添加页面文件" class="headerlink" title="添加页面文件"></a>添加页面文件</h4><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200628132321881.png" alt="image-20200628132321881"></p><h4 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> <span class="keyword">little</span>; <span class="comment">-- 创建数据库</span></span><br><span class="line"><span class="keyword">use</span> <span class="keyword">little</span>;    <span class="comment">-- 使用数据库</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">user</span>(   <span class="comment">-- 创建表</span></span><br><span class="line"><span class="keyword">id</span> <span class="built_in">int</span> primary <span class="keyword">key</span> auto_increment,</span><br><span class="line"><span class="keyword">name</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">not</span> <span class="literal">null</span>,</span><br><span class="line">gender <span class="built_in">varchar</span>(<span class="number">5</span>),</span><br><span class="line">age <span class="built_in">int</span>,</span><br><span class="line">address <span class="built_in">varchar</span>(<span class="number">32</span>),</span><br><span class="line">qq<span class="built_in">varchar</span>(<span class="number">20</span>),</span><br><span class="line">email <span class="built_in">varchar</span>(<span class="number">50</span>,</span><br><span class="line">username <span class="built_in">varchar</span>(<span class="number">32</span>),</span><br><span class="line">  <span class="keyword">password</span> <span class="built_in">varchar</span>(<span class="number">32</span>),</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h4 id="列表展示"><a href="#列表展示" class="headerlink" title="列表展示"></a>列表展示</h4><h5 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h5><p>首先我们需要一组列表的数据，那么我们就需要一个相对应servlet，通过我们的三层架构，使用service同一做接口，然后调用dao层使用JBDC操作数据库，这样我们可以获得一个map集合的数据，然后就是渲染数据到jsp页面了，通过JSTL和EL把数据循环渲染到表里面，达到列表的展示</p><h5 id="list-jsp"><a href="#list-jsp" class="headerlink" title="list.jsp"></a>list.jsp</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: tanglei</span><br><span class="line">  Date: <span class="number">2020</span>/<span class="number">6</span>/<span class="number">28</span></span><br><span class="line">  Time: 下午<span class="number">2</span>:<span class="number">15</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;!-- 网页使用的语言 --&gt;</span><br><span class="line">&lt;html lang=<span class="string">"zh-CN"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;!-- 指定字符集 --&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;!-- 使用Edge最新的浏览器的渲染方式 --&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span>&gt;</span><br><span class="line">    &lt;!-- viewport视口：网页可以根据设置的宽度自动进行适配，在浏览器的内部虚拟一个容器，容器的宽度与设备的宽度相同。</span><br><span class="line">    width: 默认宽度与设备的宽度相同</span><br><span class="line">    initial-scale: 初始的缩放比，为<span class="number">1</span>:<span class="number">1</span> --&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span><br><span class="line">    &lt;!-- 上述<span class="number">3</span>个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span><br><span class="line">    &lt;title&gt;用户信息管理系统&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- <span class="number">1</span>. 导入CSS的全局样式 --&gt;</span><br><span class="line">    &lt;link href=<span class="string">"css/bootstrap.min.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">    &lt;!-- <span class="number">2</span>. jQuery导入，建议使用<span class="number">1.9</span>以上的版本 --&gt;</span><br><span class="line">    &lt;script src="js/jquery-2.1.0.min.js"&gt;&lt;/script&gt;</span><br><span class="line">    &lt;!-- <span class="number">3</span>. 导入bootstrap的js文件 --&gt;</span><br><span class="line">    &lt;script src="js/bootstrap.min.js"&gt;&lt;/script&gt;</span><br><span class="line">    &lt;style type=<span class="string">"text/css"</span>&gt;</span><br><span class="line">        td, th &#123;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"container"</span>&gt;</span><br><span class="line">    &lt;h3 style="text-align: center"&gt;用户信息列表&lt;/h3&gt;</span><br><span class="line">    &lt;table border=<span class="string">"1"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"table table-bordered table-hover"</span>&gt;</span><br><span class="line">        &lt;tr <span class="class"><span class="keyword">class</span></span>=<span class="string">"success"</span>&gt;</span><br><span class="line">            &lt;th&gt;编号&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;性别&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;年龄&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;籍贯&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;QQ&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;邮箱&lt;/th&gt;</span><br><span class="line">            &lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;c:forEach items=<span class="string">"$&#123;users&#125;"</span> <span class="keyword">var</span>=<span class="string">"user"</span> varStatus=<span class="string">"s"</span>&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">                &lt;td&gt;$&#123;s.count&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;user.name&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;user.gender&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;user.age&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;user.address&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;user.qq&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;$&#123;user.email&#125;&lt;/td&gt;</span><br><span class="line">                &lt;td&gt;&lt;a class="btn btn-default btn-sm" href="update.html"&gt;修改&lt;/a&gt;&amp;nbsp;&lt;a class="btn btn-default btn-sm"</span><br><span class="line">                                                                                        href=""&gt;删除&lt;/a&gt;&lt;/td&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">        &lt;/c:forEach&gt;</span><br><span class="line"></span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td colspan="8" align="center"&gt;&lt;a class="btn btn-primary" href="add.html"&gt;添加联系人&lt;/a&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="servlet"><a href="#servlet" class="headerlink" title="servlet"></a>servlet</h5><p>代码文件很多，就不一一展示了</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200628143933710.png" alt="image-20200628143933710"></p><h5 id="UserListServlet"><a href="#UserListServlet" class="headerlink" title="UserListServlet"></a>UserListServlet</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.little.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.guizimo.little.domain.User;</span><br><span class="line"><span class="keyword">import</span> cn.guizimo.little.service.UserService;</span><br><span class="line"><span class="keyword">import</span> cn.guizimo.little.service.impl.UserServiceImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/userListServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserListServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//调用UserService完成查询</span></span><br><span class="line">        UserService userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">        List&lt;User&gt; users = userService.findAll();</span><br><span class="line">        <span class="comment">//存入request域</span></span><br><span class="line">        req.setAttribute(<span class="string">"users"</span>,users);</span><br><span class="line">        <span class="comment">//转发到list.jsp</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/list.jsp"</span>).forward(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200628170505603.png" alt="image-20200628170505603"></p><h4 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h4><h5 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h5><p>登录功能首先就是对表单提交的数据进行比对，验证码可以在生成的时候就把它存入到session中，然后在servlet中进行比对，其他的字段在通过调用dao层的JDBC操作数据库进行比对，最后把登录成功的用户信息存入session中</p><h5 id="login-jsp"><a href="#login-jsp" class="headerlink" title="login.jsp"></a>login.jsp</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: tanglei</span><br><span class="line">  Date: <span class="number">2020</span>/<span class="number">6</span>/<span class="number">28</span></span><br><span class="line">  Time: 下午<span class="number">7</span>:<span class="number">37</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=<span class="string">"zh-CN"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>/&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span>/&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1"</span>/&gt;</span><br><span class="line">    &lt;title&gt;管理员登录&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- <span class="number">1</span>. 导入CSS的全局样式 --&gt;</span><br><span class="line">    &lt;link href=<span class="string">"css/bootstrap.min.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">    &lt;!-- <span class="number">2</span>. jQuery导入，建议使用<span class="number">1.9</span>以上的版本 --&gt;</span><br><span class="line">    &lt;script src="js/jquery-2.1.0.min.js"&gt;&lt;/script&gt;</span><br><span class="line">    &lt;!-- <span class="number">3</span>. 导入bootstrap的js文件 --&gt;</span><br><span class="line">    &lt;script src="js/bootstrap.min.js"&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">        <span class="function">function <span class="title">refreshCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            let vcode = document.getElementById(<span class="string">"vcode"</span>);</span><br><span class="line">            vcode.src = <span class="string">"$&#123;pageContext.request.contextPath&#125;/checkCodeServlet?="</span> + <span class="keyword">new</span> Date().getTime();</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"container"</span> style=<span class="string">"width: 400px;"</span>&gt;</span><br><span class="line">    &lt;h3 style="text-align: center;"&gt;管理员登录&lt;/h3&gt;</span><br><span class="line">    &lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/loginServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label for="user"&gt;用户名：&lt;/label&gt;</span><br><span class="line">            &lt;input type=<span class="string">"text"</span> name=<span class="string">"username"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"user"</span> placeholder=<span class="string">"请输入用户名"</span>/&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label for="password"&gt;密码：&lt;/label&gt;</span><br><span class="line">            &lt;input type=<span class="string">"password"</span> name=<span class="string">"password"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"password"</span> placeholder=<span class="string">"请输入密码"</span>/&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-inline"</span>&gt;</span><br><span class="line">            &lt;label for="vcode"&gt;验证码：&lt;/label&gt;</span><br><span class="line">            &lt;input type=<span class="string">"text"</span> name=<span class="string">"verifycode"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"verifycode"</span> placeholder=<span class="string">"请输入验证码"</span></span><br><span class="line">                   style=<span class="string">"width: 120px;"</span>/&gt;</span><br><span class="line">            &lt;a href=<span class="string">"javascript:refreshCode()"</span>&gt;&lt;img src=<span class="string">"$&#123;pageContext.request.contextPath&#125;/checkCodeServlet"</span></span><br><span class="line">                                                    title="看不清点击刷新" id="vcode"/&gt;&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">        &lt;hr/&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span> style=<span class="string">"text-align: center;"</span>&gt;</span><br><span class="line">            &lt;input <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn btn-primary"</span> type=<span class="string">"submit"</span> value=<span class="string">"登录"</span>&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- 出错显示的信息框 --&gt;</span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"alert alert-warning alert-dismissible"</span> role=<span class="string">"alert"</span>&gt;</span><br><span class="line">        &lt;button type=<span class="string">"button"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"close"</span> data-dismiss=<span class="string">"alert"</span>&gt;</span><br><span class="line">            &lt;span&gt;&amp;times;&lt;/span&gt;&lt;/button&gt;</span><br><span class="line">        &lt;strong&gt;$&#123;login_msg&#125;&lt;/strong&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="LoginServlet"><a href="#LoginServlet" class="headerlink" title="LoginServlet"></a>LoginServlet</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.little.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.guizimo.little.domain.User;</span><br><span class="line"><span class="keyword">import</span> cn.guizimo.little.service.UserService;</span><br><span class="line"><span class="keyword">import</span> cn.guizimo.little.service.impl.UserServiceImpl;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.BeanUtils;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/loginServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//设置编码</span></span><br><span class="line">        req.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        <span class="comment">//传递过来的验证码</span></span><br><span class="line">        String verifycode = req.getParameter(<span class="string">"verifycode"</span>);</span><br><span class="line">        HttpSession session = req.getSession();</span><br><span class="line">        <span class="comment">//session里面的验证码</span></span><br><span class="line">        String checkcode_server = (String) session.getAttribute(<span class="string">"CHECKCODE_SERVER"</span>);</span><br><span class="line">        session.removeAttribute(<span class="string">"CHECKCODE_SERVER"</span>);</span><br><span class="line">        <span class="comment">//比对验证码</span></span><br><span class="line">        <span class="keyword">if</span> (!checkcode_server.equalsIgnoreCase(verifycode)) &#123;</span><br><span class="line">            req.setAttribute(<span class="string">"login_msg"</span>, <span class="string">"验证码错误"</span>);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">"/login.jsp"</span>).forward(req, resp);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            BeanUtils.populate(user, parameterMap);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvocationTargetException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        UserService userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">        User loginUser = userService.login(user);</span><br><span class="line">        <span class="keyword">if</span>(loginUser != <span class="keyword">null</span>)&#123;</span><br><span class="line">            session.setAttribute(<span class="string">"user"</span>,loginUser);</span><br><span class="line">            resp.sendRedirect(req.getContextPath()+<span class="string">"/index.jsp"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            req.setAttribute(<span class="string">"login_msg"</span>, <span class="string">"登录失败"</span>);</span><br><span class="line">            req.getRequestDispatcher(<span class="string">"/login.jsp"</span>).forward(req, resp);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="CheckCodeServlet"><a href="#CheckCodeServlet" class="headerlink" title="CheckCodeServlet"></a>CheckCodeServlet</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.little.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.Color;</span><br><span class="line"><span class="keyword">import</span> java.awt.Font;</span><br><span class="line"><span class="keyword">import</span> java.awt.Graphics;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 验证码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/checkCodeServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CheckCodeServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span><span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//服务器通知浏览器不要缓存</span></span><br><span class="line">response.setHeader(<span class="string">"pragma"</span>,<span class="string">"no-cache"</span>);</span><br><span class="line">response.setHeader(<span class="string">"cache-control"</span>,<span class="string">"no-cache"</span>);</span><br><span class="line">response.setHeader(<span class="string">"expires"</span>,<span class="string">"0"</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//在内存中创建一个长80，宽30的图片，默认黑色背景</span></span><br><span class="line"><span class="comment">//参数一：长</span></span><br><span class="line"><span class="comment">//参数二：宽</span></span><br><span class="line"><span class="comment">//参数三：颜色</span></span><br><span class="line"><span class="keyword">int</span> width = <span class="number">80</span>;</span><br><span class="line"><span class="keyword">int</span> height = <span class="number">30</span>;</span><br><span class="line">BufferedImage image = <span class="keyword">new</span> BufferedImage(width,height,BufferedImage.TYPE_INT_RGB);</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取画笔</span></span><br><span class="line">Graphics g = image.getGraphics();</span><br><span class="line"><span class="comment">//设置画笔颜色为灰色</span></span><br><span class="line">g.setColor(Color.GRAY);</span><br><span class="line"><span class="comment">//填充图片</span></span><br><span class="line">g.fillRect(<span class="number">0</span>,<span class="number">0</span>, width,height);</span><br><span class="line"></span><br><span class="line"><span class="comment">//产生4个随机验证码，12Ey</span></span><br><span class="line">String checkCode = getCheckCode();</span><br><span class="line"><span class="comment">//将验证码放入HttpSession中</span></span><br><span class="line">request.getSession().setAttribute(<span class="string">"CHECKCODE_SERVER"</span>,checkCode);</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置画笔颜色为黄色</span></span><br><span class="line">g.setColor(Color.YELLOW);</span><br><span class="line"><span class="comment">//设置字体的小大</span></span><br><span class="line">g.setFont(<span class="keyword">new</span> Font(<span class="string">"黑体"</span>,Font.BOLD,<span class="number">24</span>));</span><br><span class="line"><span class="comment">//向图片上写入验证码</span></span><br><span class="line">g.drawString(checkCode,<span class="number">15</span>,<span class="number">25</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将内存中的图片输出到浏览器</span></span><br><span class="line"><span class="comment">//参数一：图片对象</span></span><br><span class="line"><span class="comment">//参数二：图片的格式，如PNG,JPG,GIF</span></span><br><span class="line"><span class="comment">//参数三：图片输出到哪里去</span></span><br><span class="line">ImageIO.write(image,<span class="string">"PNG"</span>,response.getOutputStream());</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 产生4位随机字符串 </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> String <span class="title">getCheckCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">String base = <span class="string">"0123456789ABCDEFGabcdefg"</span>;</span><br><span class="line"><span class="keyword">int</span> size = base.length();</span><br><span class="line">Random r = <span class="keyword">new</span> Random();</span><br><span class="line">StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">4</span>;i++)&#123;</span><br><span class="line"><span class="comment">//产生0到size-1的随机值</span></span><br><span class="line"><span class="keyword">int</span> index = r.nextInt(size);</span><br><span class="line"><span class="comment">//在base字符串中获取下标为index的字符</span></span><br><span class="line"><span class="keyword">char</span> c = base.charAt(index);</span><br><span class="line"><span class="comment">//将c放入到StringBuffer中去</span></span><br><span class="line">sb.append(c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sb.toString();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.doGet(request,response);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h5><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200628204715757.png" alt="image-20200628204715757"></p><h4 id="添加人员"><a href="#添加人员" class="headerlink" title="添加人员"></a>添加人员</h4><h5 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h5><p>添加操作就是把jsp提交的表单的数据向数据库里面存储，过程为jsp-&gt;servlet-&gt;service-&gt;dao</p><h5 id="add-jsp"><a href="#add-jsp" class="headerlink" title="add.jsp"></a>add.jsp</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: tanglei</span><br><span class="line">  Date: <span class="number">2020</span>/<span class="number">6</span>/<span class="number">28</span></span><br><span class="line">  Time: 下午<span class="number">8</span>:<span class="number">55</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;!-- HTML5文档--&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;!-- 网页使用的语言 --&gt;</span><br><span class="line">&lt;html lang=<span class="string">"zh-CN"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;!-- 指定字符集 --&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;!-- 使用Edge最新的浏览器的渲染方式 --&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span>&gt;</span><br><span class="line">    &lt;!-- viewport视口：网页可以根据设置的宽度自动进行适配，在浏览器的内部虚拟一个容器，容器的宽度与设备的宽度相同。</span><br><span class="line">    width: 默认宽度与设备的宽度相同</span><br><span class="line">    initial-scale: 初始的缩放比，为<span class="number">1</span>:<span class="number">1</span> --&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span><br><span class="line">    &lt;!-- 上述<span class="number">3</span>个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span><br><span class="line">    &lt;title&gt;添加用户&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- <span class="number">1</span>. 导入CSS的全局样式 --&gt;</span><br><span class="line">    &lt;link href=<span class="string">"css/bootstrap.min.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">    &lt;!-- <span class="number">2</span>. jQuery导入，建议使用<span class="number">1.9</span>以上的版本 --&gt;</span><br><span class="line">    &lt;script src="js/jquery-2.1.0.min.js"&gt;&lt;/script&gt;</span><br><span class="line">    &lt;!-- <span class="number">3</span>. 导入bootstrap的js文件 --&gt;</span><br><span class="line">    &lt;script src="js/bootstrap.min.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"container"</span>&gt;</span><br><span class="line">    &lt;center&gt;&lt;h3&gt;添加联系人页面&lt;/h3&gt;&lt;/center&gt;</span><br><span class="line">    &lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/addUserServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label for="name"&gt;姓名：&lt;/label&gt;</span><br><span class="line">            &lt;input type=<span class="string">"text"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"name"</span> name=<span class="string">"name"</span> placeholder=<span class="string">"请输入姓名"</span>&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label&gt;性别：&lt;/label&gt;</span><br><span class="line">            &lt;input type=<span class="string">"radio"</span> name=<span class="string">"gender"</span> value=<span class="string">"男"</span> checked=<span class="string">"checked"</span>/&gt;男</span><br><span class="line">            &lt;input type=<span class="string">"radio"</span> name=<span class="string">"gender"</span> value=<span class="string">"女"</span>/&gt;女</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label for="age"&gt;年龄：&lt;/label&gt;</span><br><span class="line">            &lt;input type=<span class="string">"text"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"age"</span> name=<span class="string">"age"</span> placeholder=<span class="string">"请输入年龄"</span>&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label for="address"&gt;籍贯：&lt;/label&gt;</span><br><span class="line">            &lt;select name=<span class="string">"address"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"jiguan"</span>&gt;</span><br><span class="line">                &lt;option value="广东"&gt;广东&lt;/option&gt;</span><br><span class="line">                &lt;option value="广西"&gt;广西&lt;/option&gt;</span><br><span class="line">                &lt;option value="湖南"&gt;湖南&lt;/option&gt;</span><br><span class="line">            &lt;/select&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label for="qq"&gt;QQ：&lt;/label&gt;</span><br><span class="line">            &lt;input type=<span class="string">"text"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> name=<span class="string">"qq"</span> placeholder=<span class="string">"请输入QQ号码"</span>/&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label for="email"&gt;Email：&lt;/label&gt;</span><br><span class="line">            &lt;input type=<span class="string">"text"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> name=<span class="string">"email"</span> placeholder=<span class="string">"请输入邮箱地址"</span>/&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span> style=<span class="string">"text-align: center"</span>&gt;</span><br><span class="line">            &lt;input <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-primary"</span> type=<span class="string">"submit"</span> value=<span class="string">"提交"</span> /&gt;</span><br><span class="line">            &lt;input <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-default"</span> type=<span class="string">"reset"</span> value=<span class="string">"重置"</span> /&gt;</span><br><span class="line">            &lt;input <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-default"</span> type=<span class="string">"button"</span> value=<span class="string">"返回"</span> /&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="AddUserServlet"><a href="#AddUserServlet" class="headerlink" title="AddUserServlet"></a>AddUserServlet</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.little.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.guizimo.little.domain.User;</span><br><span class="line"><span class="keyword">import</span> cn.guizimo.little.service.UserService;</span><br><span class="line"><span class="keyword">import</span> cn.guizimo.little.service.impl.UserServiceImpl;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.BeanUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/addUserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AddUserServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        req.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        Map&lt;String, String[]&gt; parameterMap = req.getParameterMap();</span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            BeanUtils.populate(user,parameterMap);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvocationTargetException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        UserService userService = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">        userService.addUser(user);</span><br><span class="line">        resp.sendRedirect(req.getContextPath()+<span class="string">"/userListServlet"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="测试-2"><a href="#测试-2" class="headerlink" title="测试"></a>测试</h5><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200628212933523.png" alt="image-20200628212933523"></p><h4 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h4><h5 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h5><p>首先我们需要在打开jsp页面的时候就查询到这样的一条记录，通过这一条记录的id作为表单的隐藏域，在servlet里面将数据进行保存即可</p><h5 id="update-jsp"><a href="#update-jsp" class="headerlink" title="update.jsp"></a>update.jsp</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: tanglei</span><br><span class="line">  Date: <span class="number">2020</span>/<span class="number">6</span>/<span class="number">29</span></span><br><span class="line">  Time: 上午<span class="number">10</span>:<span class="number">44</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;%<span class="meta">@taglib</span> prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;!-- 网页使用的语言 --&gt;</span><br><span class="line">&lt;html lang=<span class="string">"zh-CN"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;!-- 指定字符集 --&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span><br><span class="line">    &lt;title&gt;修改用户&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;link href=<span class="string">"css/bootstrap.min.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">    &lt;script src="js/jquery-2.1.0.min.js"&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src="js/bootstrap.min.js"&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"container"</span> style=<span class="string">"width: 400px;"</span>&gt;</span><br><span class="line">    &lt;h3 style="text-align: center;"&gt;修改联系人&lt;/h3&gt;</span><br><span class="line">    &lt;form action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/updateUserServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">        &lt;!--  隐藏域 提交id--&gt;</span><br><span class="line">        &lt;input type=<span class="string">"hidden"</span> name=<span class="string">"id"</span> value=<span class="string">"$&#123;user.id&#125;"</span>&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label for="name"&gt;姓名：&lt;/label&gt;</span><br><span class="line">            &lt;input type=<span class="string">"text"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"name"</span> name=<span class="string">"name"</span>  value=<span class="string">"$&#123;user.name&#125;"</span> readonly=<span class="string">"readonly"</span> placeholder=<span class="string">"请输入姓名"</span> /&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label&gt;性别：&lt;/label&gt;</span><br><span class="line">            &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;user.gender == '男'&#125;"</span>&gt;</span><br><span class="line">                &lt;input type=<span class="string">"radio"</span> name=<span class="string">"gender"</span> value=<span class="string">"男"</span> checked /&gt;男</span><br><span class="line">                &lt;input type=<span class="string">"radio"</span> name=<span class="string">"gender"</span> value=<span class="string">"女"</span>  /&gt;女</span><br><span class="line">            &lt;/c:if&gt;</span><br><span class="line"></span><br><span class="line">            &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;user.gender == '女'&#125;"</span>&gt;</span><br><span class="line">                &lt;input type=<span class="string">"radio"</span> name=<span class="string">"gender"</span> value=<span class="string">"男"</span>  /&gt;男</span><br><span class="line">                &lt;input type=<span class="string">"radio"</span> name=<span class="string">"gender"</span> value=<span class="string">"女"</span> checked  /&gt;女</span><br><span class="line">            &lt;/c:if&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label for="age"&gt;年龄：&lt;/label&gt;</span><br><span class="line">            &lt;input type=<span class="string">"text"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> value=<span class="string">"$&#123;user.age&#125;"</span> id=<span class="string">"age"</span>  name=<span class="string">"age"</span> placeholder=<span class="string">"请输入年龄"</span> /&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label for="address"&gt;籍贯：&lt;/label&gt;</span><br><span class="line">            &lt;select name=<span class="string">"address"</span> id=<span class="string">"address"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> &gt;</span><br><span class="line">                &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;user.address == '陕西'&#125;"</span>&gt;</span><br><span class="line">                    &lt;option value="陕西" selected&gt;陕西&lt;/option&gt;</span><br><span class="line">                    &lt;option value="北京"&gt;北京&lt;/option&gt;</span><br><span class="line">                    &lt;option value="上海"&gt;上海&lt;/option&gt;</span><br><span class="line">                &lt;/c:if&gt;</span><br><span class="line"></span><br><span class="line">                &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;user.address == '北京'&#125;"</span>&gt;</span><br><span class="line">                    &lt;option value="陕西" &gt;陕西&lt;/option&gt;</span><br><span class="line">                    &lt;option value="北京" selected&gt;北京&lt;/option&gt;</span><br><span class="line">                    &lt;option value="上海"&gt;上海&lt;/option&gt;</span><br><span class="line">                &lt;/c:if&gt;</span><br><span class="line"></span><br><span class="line">                &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;user.address == '上海'&#125;"</span>&gt;</span><br><span class="line">                    &lt;option value="陕西" &gt;陕西&lt;/option&gt;</span><br><span class="line">                    &lt;option value="北京"&gt;北京&lt;/option&gt;</span><br><span class="line">                    &lt;option value="上海" selected&gt;上海&lt;/option&gt;</span><br><span class="line">                &lt;/c:if&gt;</span><br><span class="line">            &lt;/select&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label for="qq"&gt;QQ：&lt;/label&gt;</span><br><span class="line">            &lt;input type=<span class="string">"text"</span> id=<span class="string">"qq"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> value=<span class="string">"$&#123;user.qq&#125;"</span> name=<span class="string">"qq"</span> placeholder=<span class="string">"请输入QQ号码"</span>/&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">            &lt;label for="email"&gt;Email：&lt;/label&gt;</span><br><span class="line">            &lt;input type=<span class="string">"text"</span> id=<span class="string">"email"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> value=<span class="string">"$&#123;user.email&#125;"</span> name=<span class="string">"email"</span> placeholder=<span class="string">"请输入邮箱地址"</span>/&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span> style=<span class="string">"text-align: center"</span>&gt;</span><br><span class="line">            &lt;input <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-primary"</span> type=<span class="string">"submit"</span> value=<span class="string">"提交"</span> /&gt;</span><br><span class="line">            &lt;input <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-default"</span> type=<span class="string">"reset"</span> value=<span class="string">"重置"</span> /&gt;</span><br><span class="line">            &lt;a class="btn btn-default" href="$&#123;pageContext.request.contextPath&#125;/userListServlet"&gt;返回&lt;/a&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="FindUserServlet"><a href="#FindUserServlet" class="headerlink" title="FindUserServlet"></a>FindUserServlet</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.little.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.guizimo.little.domain.User;</span><br><span class="line"><span class="keyword">import</span> cn.guizimo.little.service.UserService;</span><br><span class="line"><span class="keyword">import</span> cn.guizimo.little.service.impl.UserServiceImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/findUserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FindUserServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1.获取id</span></span><br><span class="line">        String id = req.getParameter(<span class="string">"id"</span>);</span><br><span class="line">        <span class="comment">//2.调用Service查询</span></span><br><span class="line">        UserService service = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">        User user = service.findUserById(id);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.将user存入request</span></span><br><span class="line">        req.setAttribute(<span class="string">"user"</span>,user);</span><br><span class="line">        <span class="comment">//4.转发到update.jsp</span></span><br><span class="line">        req.getRequestDispatcher(<span class="string">"/update.jsp"</span>).forward(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="UpdateUserServlet"><a href="#UpdateUserServlet" class="headerlink" title="UpdateUserServlet"></a>UpdateUserServlet</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.little.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.guizimo.little.domain.User;</span><br><span class="line"><span class="keyword">import</span> cn.guizimo.little.service.UserService;</span><br><span class="line"><span class="keyword">import</span> cn.guizimo.little.service.impl.UserServiceImpl;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.beanutils.BeanUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/updateUserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UpdateUserServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1.设置编码</span></span><br><span class="line">        req.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        <span class="comment">//2.获取map</span></span><br><span class="line">        Map&lt;String, String[]&gt; map = req.getParameterMap();</span><br><span class="line">        <span class="comment">//3.封装对象</span></span><br><span class="line">        User user = <span class="keyword">new</span> User();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            BeanUtils.populate(user,map);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (InvocationTargetException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.调用Service修改</span></span><br><span class="line">        UserService service = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">        service.updateUser(user);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.跳转到查询所有Servlet</span></span><br><span class="line">        resp.sendRedirect(req.getContextPath()+<span class="string">"/userListServlet"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="测试-3"><a href="#测试-3" class="headerlink" title="测试"></a>测试</h5><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200629111834002.png" alt="image-20200629111834002"></p><h4 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h4><h5 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h5><p>通过获取到对应的id即可到servlet中处理，操作数据库删除，在进行删除的时候可出现提示框</p><h5 id="DelUserServlet"><a href="#DelUserServlet" class="headerlink" title="DelUserServlet"></a>DelUserServlet</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.little.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.guizimo.little.service.UserService;</span><br><span class="line"><span class="keyword">import</span> cn.guizimo.little.service.impl.UserServiceImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/delUserServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DelUserServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1.获取id</span></span><br><span class="line">        String id = req.getParameter(<span class="string">"id"</span>);</span><br><span class="line">        <span class="comment">//2.调用service删除</span></span><br><span class="line">        UserService service = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">        service.deleteUser(id);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.跳转到查询所有Servlet</span></span><br><span class="line">        resp.sendRedirect(req.getContextPath()+<span class="string">"/userListServlet"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="测试-4"><a href="#测试-4" class="headerlink" title="测试"></a>测试</h5><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200629114632231.png" alt="image-20200629114632231"></p><h4 id="删除选择的多个"><a href="#删除选择的多个" class="headerlink" title="删除选择的多个"></a>删除选择的多个</h4><h5 id="思路-5"><a href="#思路-5" class="headerlink" title="思路"></a>思路</h5><p>和删除差不多，最主要是获取id的集合</p><h5 id="DelSelectedServlet"><a href="#DelSelectedServlet" class="headerlink" title="DelSelectedServlet"></a>DelSelectedServlet</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.little.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.guizimo.little.service.UserService;</span><br><span class="line"><span class="keyword">import</span> cn.guizimo.little.service.impl.UserServiceImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/delSelectedServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DelSelectedServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1.获取所有id</span></span><br><span class="line">        String[] ids = req.getParameterValues(<span class="string">"uid"</span>);</span><br><span class="line">        <span class="comment">//2.调用service删除</span></span><br><span class="line">        UserService service = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">        service.delSelectedUser(ids);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.跳转查询所有Servlet</span></span><br><span class="line">        resp.sendRedirect(req.getContextPath()+<span class="string">"/userListServlet"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="测试-5"><a href="#测试-5" class="headerlink" title="测试"></a>测试</h5><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200629121417352.png" alt="image-20200629121417352"></p><h4 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h4><h5 id="思路-6"><a href="#思路-6" class="headerlink" title="思路"></a>思路</h5><p>在jsp中获取查询的总条数，每页显示的条数，当前的页码，将之传递给服务器，操作数据库进行查询</p><h5 id="list-jsp-1"><a href="#list-jsp-1" class="headerlink" title="list.jsp"></a>list.jsp</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: tanglei</span><br><span class="line">  Date: <span class="number">2020</span>/<span class="number">6</span>/<span class="number">28</span></span><br><span class="line">  Time: 下午<span class="number">2</span>:<span class="number">15</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;%@ taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span> %&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;!-- 网页使用的语言 --&gt;</span><br><span class="line">&lt;html lang=<span class="string">"zh-CN"</span>&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;!-- 指定字符集 --&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">"utf-8"</span>&gt;</span><br><span class="line">    &lt;!-- 使用Edge最新的浏览器的渲染方式 --&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"IE=edge"</span>&gt;</span><br><span class="line">    &lt;!-- viewport视口：网页可以根据设置的宽度自动进行适配，在浏览器的内部虚拟一个容器，容器的宽度与设备的宽度相同。</span><br><span class="line">    width: 默认宽度与设备的宽度相同</span><br><span class="line">    initial-scale: 初始的缩放比，为<span class="number">1</span>:<span class="number">1</span> --&gt;</span><br><span class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span><br><span class="line">    &lt;!-- 上述<span class="number">3</span>个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ --&gt;</span><br><span class="line">    &lt;title&gt;用户信息管理系统&lt;/title&gt;</span><br><span class="line"></span><br><span class="line">    &lt;!-- <span class="number">1</span>. 导入CSS的全局样式 --&gt;</span><br><span class="line">    &lt;link href=<span class="string">"css/bootstrap.min.css"</span> rel=<span class="string">"stylesheet"</span>&gt;</span><br><span class="line">    &lt;!-- <span class="number">2</span>. jQuery导入，建议使用<span class="number">1.9</span>以上的版本 --&gt;</span><br><span class="line">    &lt;script src="js/jquery-2.1.0.min.js"&gt;&lt;/script&gt;</span><br><span class="line">    &lt;!-- <span class="number">3</span>. 导入bootstrap的js文件 --&gt;</span><br><span class="line">    &lt;script src="js/bootstrap.min.js"&gt;&lt;/script&gt;</span><br><span class="line">    &lt;style type=<span class="string">"text/css"</span>&gt;</span><br><span class="line">        td, th &#123;</span><br><span class="line">            text-align: center;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        <span class="function">function <span class="title">deleteUser</span><span class="params">(id)</span> </span>&#123;</span><br><span class="line">            <span class="comment">//用户安全提示</span></span><br><span class="line">            <span class="keyword">if</span> (confirm(<span class="string">"您确定要删除吗？"</span>)) &#123;</span><br><span class="line">                <span class="comment">//访问路径</span></span><br><span class="line">                location.href = <span class="string">"$&#123;pageContext.request.contextPath&#125;/delUserServlet?id="</span> + id;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        window.onload = function () &#123;</span><br><span class="line">            <span class="comment">//给删除选中按钮添加单击事件</span></span><br><span class="line">            document.getElementById(<span class="string">"delSelected"</span>).onclick = function () &#123;</span><br><span class="line">                <span class="keyword">if</span> (confirm(<span class="string">"您确定要删除选中条目吗？"</span>)) &#123;</span><br><span class="line">                    <span class="keyword">var</span> flag = <span class="keyword">false</span>;</span><br><span class="line">                    <span class="comment">//判断是否有选中条目</span></span><br><span class="line">                    <span class="keyword">var</span> cbs = document.getElementsByName(<span class="string">"uid"</span>);</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; cbs.length; i++) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (cbs[i].checked) &#123;</span><br><span class="line">                            <span class="comment">//有一个条目选中了</span></span><br><span class="line">                            flag = <span class="keyword">true</span>;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (flag) &#123;<span class="comment">//有条目被选中</span></span><br><span class="line">                        <span class="comment">//表单提交</span></span><br><span class="line">                        document.getElementById(<span class="string">"form"</span>).submit();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//1.获取第一个cb</span></span><br><span class="line">            document.getElementById(<span class="string">"firstCb"</span>).onclick = function () &#123;</span><br><span class="line">                <span class="comment">//2.获取下边列表中所有的cb</span></span><br><span class="line">                <span class="keyword">var</span> cbs = document.getElementsByName(<span class="string">"uid"</span>);</span><br><span class="line">                <span class="comment">//3.遍历</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; cbs.length; i++) &#123;</span><br><span class="line">                    <span class="comment">//4.设置这些cbs[i]的checked状态 = firstCb.checked</span></span><br><span class="line">                    cbs[i].checked = <span class="keyword">this</span>.checked;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"container"</span>&gt;</span><br><span class="line">    &lt;h3 style="text-align: center"&gt;用户信息列表&lt;/h3&gt;</span><br><span class="line">    &lt;div style=<span class="string">"float: left;"</span>&gt;</span><br><span class="line"></span><br><span class="line">        &lt;form <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-inline"</span> action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/findUserByPageServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">                &lt;label for="exampleInputName2"&gt;姓名&lt;/label&gt;</span><br><span class="line">                &lt;input type=<span class="string">"text"</span> name=<span class="string">"name"</span> value=<span class="string">"$&#123;condition.name[0]&#125;"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"exampleInputName2"</span>&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">                &lt;label for="exampleInputName3"&gt;籍贯&lt;/label&gt;</span><br><span class="line">                &lt;input type=<span class="string">"text"</span> name=<span class="string">"address"</span> value=<span class="string">"$&#123;condition.address[0]&#125;"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span></span><br><span class="line">                       id=<span class="string">"exampleInputName3"</span>&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">                &lt;label for="exampleInputEmail2"&gt;邮箱&lt;/label&gt;</span><br><span class="line">                &lt;input type=<span class="string">"text"</span> name=<span class="string">"email"</span> value=<span class="string">"$&#123;condition.email[0]&#125;"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span></span><br><span class="line">                       id=<span class="string">"exampleInputEmail2"</span>&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;button type="submit" class="btn btn-default"&gt;查询&lt;/button&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div style=<span class="string">"float: right;margin: 5px;"</span>&gt;</span><br><span class="line">        &lt;a class="btn btn-primary" href="$&#123;pageContext.request.contextPath&#125;/add.jsp"&gt;添加联系人&lt;/a&gt;</span><br><span class="line">        &lt;a class="btn btn-primary" href="javascript:void(0);" id="delSelected"&gt;删除选中&lt;/a&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;form id=<span class="string">"form"</span> action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/delSelectedServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">        &lt;table border=<span class="string">"1"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"table table-bordered table-hover"</span>&gt;</span><br><span class="line">            &lt;tr <span class="class"><span class="keyword">class</span></span>=<span class="string">"success"</span>&gt;</span><br><span class="line">                &lt;th&gt;&lt;input type="checkbox" id="firstCb"&gt;&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;编号&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;姓名&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;性别&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;年龄&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;籍贯&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;QQ&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;邮箱&lt;/th&gt;</span><br><span class="line">                &lt;th&gt;操作&lt;/th&gt;</span><br><span class="line">            &lt;/tr&gt;</span><br><span class="line">            &lt;c:forEach items=<span class="string">"$&#123;pb.list&#125;"</span> <span class="keyword">var</span>=<span class="string">"user"</span> varStatus=<span class="string">"s"</span>&gt;</span><br><span class="line">                &lt;tr&gt;</span><br><span class="line">                    &lt;td&gt;&lt;input type="checkbox" name="uid" value="$&#123;user.id&#125;"&gt;&lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;$&#123;s.count&#125;&lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;$&#123;user.name&#125;&lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;$&#123;user.gender&#125;&lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;$&#123;user.age&#125;&lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;$&#123;user.address&#125;&lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;$&#123;user.qq&#125;&lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;$&#123;user.email&#125;&lt;/td&gt;</span><br><span class="line">                    &lt;td&gt;</span><br><span class="line">                        &lt;a <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-default btn-sm"</span></span><br><span class="line">                           href="$&#123;pageContext.request.contextPath&#125;/findUserServlet?id=$&#123;user.id&#125;"&gt;修改&lt;/a&gt;&amp;nbsp;</span><br><span class="line">                        &lt;a class="btn btn-default btn-sm" href="javascript:deleteUser($&#123;user.id&#125;);"&gt;删除&lt;/a&gt;</span><br><span class="line">                    &lt;/td&gt;</span><br><span class="line">                &lt;/tr&gt;</span><br><span class="line">            &lt;/c:forEach&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div&gt;</span><br><span class="line">        &lt;nav aria-label=<span class="string">"Page navigation"</span>&gt;</span><br><span class="line">            &lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"pagination"</span>&gt;</span><br><span class="line">                &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;pb.currentPage == 1&#125;"</span>&gt;</span><br><span class="line">                    &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"disabled"</span>&gt;</span><br><span class="line">                        &lt;a href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/findUserByPageServlet?currentPage=1&amp;rows=5&amp;name=$&#123;condition.name[0]&#125;&amp;address=$&#123;condition.address[0]&#125;&amp;email=$&#123;condition.email[0]&#125;"</span></span><br><span class="line">                           aria-label=<span class="string">"Previous"</span>&gt;</span><br><span class="line">                            &lt;span aria-hidden="true"&gt;&amp;laquo;&lt;/span&gt;</span><br><span class="line">                        &lt;/a&gt;</span><br><span class="line">                    &lt;/li&gt;</span><br><span class="line">                &lt;/c:if&gt;</span><br><span class="line">                &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;pb.currentPage != 1&#125;"</span>&gt;</span><br><span class="line">                    &lt;li&gt;</span><br><span class="line">                        &lt;a href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/findUserByPageServlet?currentPage=$&#123;pb.currentPage - 1&#125;&amp;rows=5&amp;name=$&#123;condition.name[0]&#125;&amp;address=$&#123;condition.address[0]&#125;&amp;email=$&#123;condition.email[0]&#125;"</span></span><br><span class="line">                           aria-label=<span class="string">"Previous"</span>&gt;</span><br><span class="line">                            &lt;span aria-hidden="true"&gt;&amp;laquo;&lt;/span&gt;</span><br><span class="line">                        &lt;/a&gt;</span><br><span class="line">                    &lt;/li&gt;</span><br><span class="line">                &lt;/c:if&gt;</span><br><span class="line"></span><br><span class="line">                &lt;c:forEach begin=<span class="string">"1"</span> end=<span class="string">"$&#123;pb.totalPage&#125;"</span> <span class="keyword">var</span>=<span class="string">"i"</span>&gt;</span><br><span class="line">                    &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;pb.currentPage == i&#125;"</span>&gt;</span><br><span class="line">                        &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"active"</span>&gt;&lt;a</span><br><span class="line">                                href="$&#123;pageContext.request.contextPath&#125;/findUserByPageServlet?currentPage=$&#123;i&#125;&amp;rows=5&amp;name=$&#123;condition.name[0]&#125;&amp;address=$&#123;condition.address[0]&#125;&amp;email=$&#123;condition.email[0]&#125;"&gt;$&#123;i&#125;&lt;/a&gt;</span><br><span class="line">                        &lt;/li&gt;</span><br><span class="line">                    &lt;/c:if&gt;</span><br><span class="line">                    &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;pb.currentPage != i&#125;"</span>&gt;</span><br><span class="line">                        &lt;li&gt;</span><br><span class="line">                            &lt;a href="$&#123;pageContext.request.contextPath&#125;/findUserByPageServlet?currentPage=$&#123;i&#125;&amp;rows=5&amp;name=$&#123;condition.name[0]&#125;&amp;address=$&#123;condition.address[0]&#125;&amp;email=$&#123;condition.email[0]&#125;"&gt;$&#123;i&#125;&lt;/a&gt;</span><br><span class="line">                        &lt;/li&gt;</span><br><span class="line">                    &lt;/c:if&gt;</span><br><span class="line">                &lt;/c:forEach&gt;</span><br><span class="line">                &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;pb.currentPage == pb.totalPage&#125;"</span>&gt;</span><br><span class="line">                    &lt;li <span class="class"><span class="keyword">class</span></span>=<span class="string">"disabled"</span>&gt;</span><br><span class="line">                        &lt;a href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/findUserByPageServlet?currentPage=$&#123;pb.totalPage&#125;&amp;rows=5&amp;name=$&#123;condition.name[0]&#125;&amp;address=$&#123;condition.address[0]&#125;&amp;email=$&#123;condition.email[0]&#125;"</span></span><br><span class="line">                           aria-label=<span class="string">"Next"</span>&gt;</span><br><span class="line">                            &lt;span aria-hidden="true"&gt;&amp;raquo;&lt;/span&gt;</span><br><span class="line">                        &lt;/a&gt;</span><br><span class="line">                    &lt;/li&gt;</span><br><span class="line">                &lt;/c:if&gt;</span><br><span class="line">                &lt;c:<span class="keyword">if</span> test=<span class="string">"$&#123;pb.currentPage != pb.totalPage&#125;"</span>&gt;</span><br><span class="line">                    &lt;li&gt;</span><br><span class="line">                        &lt;a href=<span class="string">"$&#123;pageContext.request.contextPath&#125;/findUserByPageServlet?currentPage=$&#123;pb.currentPage + 1&#125;&amp;rows=5&amp;name=$&#123;condition.name[0]&#125;&amp;address=$&#123;condition.address[0]&#125;&amp;email=$&#123;condition.email[0]&#125;"</span></span><br><span class="line">                           aria-label=<span class="string">"Next"</span>&gt;</span><br><span class="line">                            &lt;span aria-hidden="true"&gt;&amp;raquo;&lt;/span&gt;</span><br><span class="line">                        &lt;/a&gt;</span><br><span class="line">                    &lt;/li&gt;</span><br><span class="line">                &lt;/c:if&gt;</span><br><span class="line"></span><br><span class="line">                &lt;span style=<span class="string">"font-size: 25px;margin-left: 5px;"</span>&gt;</span><br><span class="line">                    共$&#123;pb.totalCount&#125;条记录，共$&#123;pb.totalPage&#125;页</span><br><span class="line">                &lt;/span&gt;</span><br><span class="line">            &lt;/ul&gt;</span><br><span class="line">        &lt;/nav&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="FindUserByPageServlet"><a href="#FindUserByPageServlet" class="headerlink" title="FindUserByPageServlet"></a>FindUserByPageServlet</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.little.web.servlet;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.guizimo.little.domain.PageBean;</span><br><span class="line"><span class="keyword">import</span> cn.guizimo.little.domain.User;</span><br><span class="line"><span class="keyword">import</span> cn.guizimo.little.service.UserService;</span><br><span class="line"><span class="keyword">import</span> cn.guizimo.little.service.impl.UserServiceImpl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/findUserByPageServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FindUserByPageServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//1.获取参数</span></span><br><span class="line">        String currentPage = request.getParameter(<span class="string">"currentPage"</span>);<span class="comment">//当前页码</span></span><br><span class="line">        String rows = request.getParameter(<span class="string">"rows"</span>);<span class="comment">//每页显示条数</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(currentPage == <span class="keyword">null</span> || <span class="string">""</span>.equals(currentPage))&#123;</span><br><span class="line">            currentPage = <span class="string">"1"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(rows == <span class="keyword">null</span> || <span class="string">""</span>.equals(rows))&#123;</span><br><span class="line">            rows = <span class="string">"5"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//获取条件查询参数</span></span><br><span class="line">        Map&lt;String, String[]&gt; condition = request.getParameterMap();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.调用service查询</span></span><br><span class="line">        UserService service = <span class="keyword">new</span> UserServiceImpl();</span><br><span class="line">        PageBean&lt;User&gt; pb = service.findUserByPage(currentPage,rows,condition);</span><br><span class="line"></span><br><span class="line">        System.out.println(pb);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//3.将PageBean存入request</span></span><br><span class="line">        request.setAttribute(<span class="string">"pb"</span>,pb);</span><br><span class="line">        request.setAttribute(<span class="string">"condition"</span>,condition);<span class="comment">//将查询条件存入request</span></span><br><span class="line">        <span class="comment">//4.转发到list.jsp</span></span><br><span class="line">        request.getRequestDispatcher(<span class="string">"/list.jsp"</span>).forward(request,response);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="测试-6"><a href="#测试-6" class="headerlink" title="测试"></a>测试</h5><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200629190257416.png" alt="image-20200629190257416"></p><h4 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h4><h5 id="思路-7"><a href="#思路-7" class="headerlink" title="思路"></a>思路</h5><p>主要是在sql语句的编写</p><h5 id="jsp"><a href="#jsp" class="headerlink" title="jsp"></a>jsp</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=<span class="string">"float: left;"</span>&gt;</span><br><span class="line">        &lt;form <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-inline"</span> action=<span class="string">"$&#123;pageContext.request.contextPath&#125;/findUserByPageServlet"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">                &lt;label for="exampleInputName2"&gt;姓名&lt;/label&gt;</span><br><span class="line">                &lt;input type=<span class="string">"text"</span> name=<span class="string">"name"</span> value=<span class="string">"$&#123;condition.name[0]&#125;"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span> id=<span class="string">"exampleInputName2"</span>&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">                &lt;label for="exampleInputName3"&gt;籍贯&lt;/label&gt;</span><br><span class="line">                &lt;input type=<span class="string">"text"</span> name=<span class="string">"address"</span> value=<span class="string">"$&#123;condition.address[0]&#125;"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span></span><br><span class="line">                       id=<span class="string">"exampleInputName3"</span>&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-group"</span>&gt;</span><br><span class="line">                &lt;label for="exampleInputEmail2"&gt;邮箱&lt;/label&gt;</span><br><span class="line">                &lt;input type=<span class="string">"text"</span> name=<span class="string">"email"</span> value=<span class="string">"$&#123;condition.email[0]&#125;"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"form-control"</span></span><br><span class="line">                       id=<span class="string">"exampleInputEmail2"</span>&gt;</span><br><span class="line">            &lt;/div&gt;</span><br><span class="line">            &lt;button type="submit" class="btn btn-default"&gt;查询&lt;/button&gt;</span><br><span class="line">        &lt;/form&gt;</span><br><span class="line">    &lt;/div&gt;</span><br></pre></td></tr></table></figure><h5 id="dao层方法"><a href="#dao层方法" class="headerlink" title="dao层方法"></a>dao层方法</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findTotalCount</span><span class="params">(Map&lt;String, String[]&gt; condition)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//1.定义模板初始化sql</span></span><br><span class="line">        String sql = <span class="string">"select count(*) from user where 1 = 1 "</span>;</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder(sql);</span><br><span class="line">        <span class="comment">//2.遍历map</span></span><br><span class="line">        Set&lt;String&gt; keySet = condition.keySet();</span><br><span class="line">        <span class="comment">//定义参数的集合</span></span><br><span class="line">        List&lt;Object&gt; params = <span class="keyword">new</span> ArrayList&lt;Object&gt;();</span><br><span class="line">        <span class="keyword">for</span> (String key : keySet) &#123;</span><br><span class="line">            <span class="comment">//排除分页条件参数</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="string">"currentPage"</span>.equals(key) || <span class="string">"rows"</span>.equals(key))&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//获取value</span></span><br><span class="line">            String value = condition.get(key)[<span class="number">0</span>];</span><br><span class="line">            <span class="comment">//判断value是否有值</span></span><br><span class="line">            <span class="keyword">if</span>(value != <span class="keyword">null</span> &amp;&amp; !<span class="string">""</span>.equals(value))&#123;</span><br><span class="line">                <span class="comment">//有值</span></span><br><span class="line">                sb.append(<span class="string">" and "</span>+key+<span class="string">" like ? "</span>);</span><br><span class="line">                params.add(<span class="string">"%"</span>+value+<span class="string">"%"</span>);<span class="comment">//？条件的值</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(sb.toString());</span><br><span class="line">        System.out.println(params);</span><br><span class="line">        <span class="keyword">return</span> template.queryForObject(sb.toString(),Integer<span class="class">.<span class="keyword">class</span>,<span class="title">params</span>.<span class="title">toArray</span>())</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findByPage</span><span class="params">(<span class="keyword">int</span> start, <span class="keyword">int</span> rows, Map&lt;String, String[]&gt; condition)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">"select * from user  where 1 = 1 "</span>;</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder(sql);</span><br><span class="line">        <span class="comment">//2.遍历map</span></span><br><span class="line">        Set&lt;String&gt; keySet = condition.keySet();</span><br><span class="line">        <span class="comment">//定义参数的集合</span></span><br><span class="line">        List&lt;Object&gt; params = <span class="keyword">new</span> ArrayList&lt;Object&gt;();</span><br><span class="line">        <span class="keyword">for</span> (String key : keySet) &#123;</span><br><span class="line">            <span class="comment">//排除分页条件参数</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="string">"currentPage"</span>.equals(key) || <span class="string">"rows"</span>.equals(key))&#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//获取value</span></span><br><span class="line">            String value = condition.get(key)[<span class="number">0</span>];</span><br><span class="line">            <span class="comment">//判断value是否有值</span></span><br><span class="line">            <span class="keyword">if</span>(value != <span class="keyword">null</span> &amp;&amp; !<span class="string">""</span>.equals(value))&#123;</span><br><span class="line">                <span class="comment">//有值</span></span><br><span class="line">                sb.append(<span class="string">" and "</span>+key+<span class="string">" like ? "</span>);</span><br><span class="line">                params.add(<span class="string">"%"</span>+value+<span class="string">"%"</span>);<span class="comment">//？条件的值</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//添加分页查询</span></span><br><span class="line">        sb.append(<span class="string">" limit ?,? "</span>);</span><br><span class="line">        <span class="comment">//添加分页查询参数值</span></span><br><span class="line">        params.add(start);</span><br><span class="line">        params.add(rows);</span><br><span class="line">        sql = sb.toString();</span><br><span class="line">        System.out.println(sql);</span><br><span class="line">        System.out.println(params);</span><br><span class="line">        <span class="keyword">return</span> template.query(sql,<span class="keyword">new</span> BeanPropertyRowMapper&lt;User&gt;(User<span class="class">.<span class="keyword">class</span>),<span class="title">params</span>.<span class="title">toArray</span>())</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="测试-7"><a href="#测试-7" class="headerlink" title="测试"></a>测试</h5><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200629191252508.png" alt="image-20200629191252508"></p><p><strong>感谢</strong></p><blockquote><p>黑马程序员</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JSP--EL表达式</title>
      <link href="/2020/06/28/JSP--EL%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2020/06/28/JSP--EL%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="JSP–EL表达式"><a href="#JSP–EL表达式" class="headerlink" title="JSP–EL表达式"></a>JSP–EL表达式</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>Expression Language 表达式语言</p><p>JSP表达式语言（EL）使得访问存储在JavaBean中的数据变得非常简单。JSP EL既可以用来创建算术表达式也可以用来创建逻辑表达式。在JSP EL表达式内可以使用整型数，浮点数，字符串，常量true、false，还有null</p><h4 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h4><p>替换和简化jsp页面中java代码的编写</p><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$&#123;表达式&#125;</span><br></pre></td></tr></table></figure><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><ul><li><p>jsp默认支持el表达式的。如果要忽略el表达式</p><p>设置jsp中page指令中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">isELIgnored&#x3D;&quot;true&quot; 忽略当前jsp页面中所有的el表达式</span><br></pre></td></tr></table></figure></li><li><p>忽略当前这个el表达式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\$&#123;表达式&#125;</span><br></pre></td></tr></table></figure></li></ul><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><h5 id="运算"><a href="#运算" class="headerlink" title="运算"></a>运算</h5><ul><li>运算符：<ol><li>算数运算符： + - * /(div) %(mod)</li><li>比较运算符： &gt; &lt; &gt;= &lt;= == !=</li><li>逻辑运算符： &amp;&amp;(and) ||(or) !(not)</li><li>空运算符： empty<ul><li>功能：用于判断字符串、集合、数组对象是否为null或者长度是否为0</li><li>${empty list}:判断字符串、集合、数组对象是否为null或者长度为0</li><li>${not empty str}:表示判断字符串、集合、数组对象是否不为null 并且 长度&gt;0</li></ul></li></ol></li></ul><h5 id="获取值"><a href="#获取值" class="headerlink" title="获取值"></a>获取值</h5><ol><li><p>el表达式只能从域对象中获取值</p></li><li><p>语法：</p><ol><li><p>${域名称.键名}：从指定域中获取指定键的值</p><ul><li>域名称：<ol><li>pageScope        –&gt; pageContext<ol start="2"><li>requestScope     –&gt; request<ol start="3"><li>sessionScope     –&gt; session</li><li>applicationScope –&gt; application（ServletContext）</li></ol></li></ol></li></ol></li><li>举例：在request域中存储了name=张三</li><li>获取：${requestScope.name}</li></ul></li><li><p>${键名}：表示依次从最小的域中查找是否有该键对应的值，直到找到为止。</p></li><li><p>获取对象、List集合、Map集合的值</p><ol><li><p>对象：${域名称.键名.属性名}</p><ul><li>本质上会去调用对象的getter方法</li></ul></li><li><p>List集合：${域名称.键名[索引]}</p></li><li><p>Map集合：</p><ul><li><p>${域名称.键名.key名称}</p></li><li><p>${域名称.键名[“key名称”]}</p></li></ul></li></ol></li></ol></li></ol><p><strong>感谢</strong></p><blockquote><p>黑马程序员</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JSP--JSTL（JSP标准标签库）</title>
      <link href="/2020/06/28/JSP--JSTL%EF%BC%88JSP%E6%A0%87%E5%87%86%E6%A0%87%E7%AD%BE%E5%BA%93%EF%BC%89/"/>
      <url>/2020/06/28/JSP--JSTL%EF%BC%88JSP%E6%A0%87%E5%87%86%E6%A0%87%E7%AD%BE%E5%BA%93%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="JSP–JSTL（JSP标准标签库）"><a href="#JSP–JSTL（JSP标准标签库）" class="headerlink" title="JSP–JSTL（JSP标准标签库）"></a>JSP–JSTL（JSP标准标签库）</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>JavaServer Pages Tag Library  JSP标准标签库</p><p>是由Apache组织提供的开源的免费的jsp标签</p><h4 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h4><p>用于简化和替换jsp页面上的java代码        </p><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>菜鸟教程文档地址 <a href="https://www.runoob.com/jsp/jsp-jstl.html" target="_blank" rel="noopener">https://www.runoob.com/jsp/jsp-jstl.html</a></p><h5 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h5><ul><li>官方下载地址：<a href="http://archive.apache.org/dist/jakarta/taglibs/standard/binaries/" target="_blank" rel="noopener">http://archive.apache.org/dist/jakarta/taglibs/standard/binaries/</a></li><li>菜鸟教程下载地址：<a href="http://static.runoob.com/download/jakarta-taglibs-standard-1.1.2.tar.gz" target="_blank" rel="noopener">jakarta-taglibs-standard-1.1.2.zip</a></li></ul><p>下载 <strong>jakarta-taglibs-standard-1.1.2.zip</strong> 包并解压，将 <strong>jakarta-taglibs-standard-1.1.2/lib/</strong> 下的两个 jar 文件：<strong>standard.jar</strong> 和 <strong>jstl.jar</strong> 文件拷贝到 <strong>/WEB-INF/lib/</strong> 下。</p><p>将 tld 下的需要引入的 tld 文件复制到 WEB-INF 目录下。</p><p>接下来我们在 web.xml 文件中添加以下配置：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">version</span>=<span class="string">"2.4"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns</span>=<span class="string">"http://java.sun.com/xml/ns/j2ee"</span> </span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://java.sun.com/xml/ns/j2ee </span></span></span><br><span class="line"><span class="tag"><span class="string">        http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jsp-config</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">taglib</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">taglib-uri</span>&gt;</span>http://java.sun.com/jsp/jstl/fmt<span class="tag">&lt;/<span class="name">taglib-uri</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">taglib-location</span>&gt;</span>/WEB-INF/fmt.tld<span class="tag">&lt;/<span class="name">taglib-location</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">taglib</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">taglib</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">taglib-uri</span>&gt;</span>http://java.sun.com/jsp/jstl/fmt-rt<span class="tag">&lt;/<span class="name">taglib-uri</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">taglib-location</span>&gt;</span>/WEB-INF/fmt-rt.tld<span class="tag">&lt;/<span class="name">taglib-location</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">taglib</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">taglib</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">taglib-uri</span>&gt;</span>http://java.sun.com/jsp/jstl/core<span class="tag">&lt;/<span class="name">taglib-uri</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">taglib-location</span>&gt;</span>/WEB-INF/c.tld<span class="tag">&lt;/<span class="name">taglib-location</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">taglib</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">taglib</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">taglib-uri</span>&gt;</span>http://java.sun.com/jsp/jstl/core-rt<span class="tag">&lt;/<span class="name">taglib-uri</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">taglib-location</span>&gt;</span>/WEB-INF/c-rt.tld<span class="tag">&lt;/<span class="name">taglib-location</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">taglib</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">taglib</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">taglib-uri</span>&gt;</span>http://java.sun.com/jsp/jstl/sql<span class="tag">&lt;/<span class="name">taglib-uri</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">taglib-location</span>&gt;</span>/WEB-INF/sql.tld<span class="tag">&lt;/<span class="name">taglib-location</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">taglib</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">taglib</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">taglib-uri</span>&gt;</span>http://java.sun.com/jsp/jstl/sql-rt<span class="tag">&lt;/<span class="name">taglib-uri</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">taglib-location</span>&gt;</span>/WEB-INF/sql-rt.tld<span class="tag">&lt;/<span class="name">taglib-location</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">taglib</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">taglib</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">taglib-uri</span>&gt;</span>http://java.sun.com/jsp/jstl/x<span class="tag">&lt;/<span class="name">taglib-uri</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">taglib-location</span>&gt;</span>/WEB-INF/x.tld<span class="tag">&lt;/<span class="name">taglib-location</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">taglib</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">taglib</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">taglib-uri</span>&gt;</span>http://java.sun.com/jsp/jstl/x-rt<span class="tag">&lt;/<span class="name">taglib-uri</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">taglib-location</span>&gt;</span>/WEB-INF/x-rt.tld<span class="tag">&lt;/<span class="name">taglib-location</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">taglib</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">jsp-config</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="使用步骤"><a href="#使用步骤" class="headerlink" title="使用步骤"></a>使用步骤</h4><ol><li><p>导入jstl相关jar包</p></li><li><p>引入标签库：taglib指令：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ taglib %&gt;</span><br></pre></td></tr></table></figure></li><li><p>使用标签</p></li></ol><h4 id="常用的JSTL标签"><a href="#常用的JSTL标签" class="headerlink" title="常用的JSTL标签"></a>常用的JSTL标签</h4><h5 id="if–相当于java代码的if语句"><a href="#if–相当于java代码的if语句" class="headerlink" title="if–相当于java代码的if语句"></a>if–相当于java代码的if语句</h5><ol><li><p>属性：</p><ul><li>test 必须属性，接受boolean表达式<ul><li>如果表达式为true，则显示if标签体内容，如果为false，则不显示标签体内容</li><li>一般情况下，test属性值会结合el表达式一起使用</li></ul></li></ul></li><li><p>注意：</p><ul><li>c:if标签没有else情况，想要else情况，则可以在定义一个c:if标签</li></ul></li></ol><h5 id="choose–相当于java代码的switch语句"><a href="#choose–相当于java代码的switch语句" class="headerlink" title="choose–相当于java代码的switch语句"></a>choose–相当于java代码的switch语句</h5><ol><li>使用choose标签声明                     相当于switch声明<ol start="2"><li>使用when标签做判断                     相当于case</li><li>使用otherwise标签做其他情况的声明        相当于default</li></ol></li></ol><h5 id="foreach–相当于java代码的for语句"><a href="#foreach–相当于java代码的for语句" class="headerlink" title="foreach–相当于java代码的for语句"></a>foreach–相当于java代码的for语句</h5><p><strong>感谢</strong></p><blockquote><p>菜鸟教程</p><p>黑马程序员</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java--MVC开发模式</title>
      <link href="/2020/06/28/Java--MVC%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F/"/>
      <url>/2020/06/28/Java--MVC%E5%BC%80%E5%8F%91%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="Java–MVC开发模式"><a href="#Java–MVC开发模式" class="headerlink" title="Java–MVC开发模式"></a>Java–MVC开发模式</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="Jsp演变历史"><a href="#Jsp演变历史" class="headerlink" title="Jsp演变历史"></a>Jsp演变历史</h4><ol><li>早期只有servlet，只能使用response输出标签数据，非常麻烦</li><li>后来又jsp，简化了Servlet的开发，如果过度使用jsp，在jsp中即写大量的java代码，有写html表，造成难于维护，难于分工协作</li><li>再后来，java的web开发，借鉴mvc开发模式，使得程序的设计更加合理性</li></ol><h4 id="MVC开发模式"><a href="#MVC开发模式" class="headerlink" title="MVC开发模式"></a>MVC开发模式</h4><h5 id="示意图"><a href="#示意图" class="headerlink" title="示意图"></a>示意图</h5><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200628111127740.png" alt="image-20200628111127740"></p><p>再来一张</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200628111826407.png" alt="image-20200628111826407"></p><h5 id="M：Model–模型–JavaBean"><a href="#M：Model–模型–JavaBean" class="headerlink" title="M：Model–模型–JavaBean"></a>M：Model–模型–JavaBean</h5><p>Model层：Model指模型部分，一般在应用中Model层包括业务处理层Service和数据访问层Dao。数据访问层主要是对数据库的一些操作的封装。业务处理层主要是用作将从Controller层获取的数据和数据库的数据进行桥接。除此以外，对复杂业务逻辑进行处理,比如事务处理</p><ul><li>完成具体的业务操作，如：查询数据库，封装对象</li></ul><h5 id="V：View–视图–JSP"><a href="#V：View–视图–JSP" class="headerlink" title="V：View–视图–JSP"></a>V：View–视图–JSP</h5><p>View层：View指视图部分，这一部分的内容是展示给用户实际进行交互的，通常使用JSP和HTML进行构建</p><ul><li>展示数据</li></ul><h5 id="C：Controller–控制器–Servlet"><a href="#C：Controller–控制器–Servlet" class="headerlink" title="C：Controller–控制器–Servlet"></a>C：Controller–控制器–Servlet</h5><p>Controller层：Controller指控制部分，一般是对View层提交的请求为其设置对应的Servlet进行特定功能的处理，这里的进行特定功能的处理一般是编写在Model中的业务处理层中的。Controller一般只是在Web应用中充当一个中介者的作用</p><ul><li>获取用户的输入</li><li>调用模型</li><li>将数据交给视图进行展示</li></ul><h4 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h4><ol><li><p>优点：</p><ul><li><p>耦合性低，方便维护，可以利于分工协作</p></li><li><p>重用性高</p></li></ul></li><li><p>缺点：</p><ul><li>使得项目架构变得复杂，对开发人员要求高</li></ul></li></ol><p><strong>感谢</strong></p><blockquote><p>黑马程序员</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>十大排序算法的分析</title>
      <link href="/2020/06/27/%E5%8D%81%E5%A4%A7%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84%E5%88%86%E6%9E%90/"/>
      <url>/2020/06/27/%E5%8D%81%E5%A4%A7%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E7%9A%84%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="十大排序算法的分析"><a href="#十大排序算法的分析" class="headerlink" title="十大排序算法的分析"></a>十大排序算法的分析</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="十大算法比对图"><a href="#十大算法比对图" class="headerlink" title="十大算法比对图"></a>十大算法比对图</h4><p>（来自尚硅谷）</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200627154337419.png" alt="image-20200627154337419"></p><h4 id="相关术语解释"><a href="#相关术语解释" class="headerlink" title="相关术语解释"></a>相关术语解释</h4><h5 id="稳定"><a href="#稳定" class="headerlink" title="稳定"></a>稳定</h5><p>如果a原本在b前面，而a=b，排序之后a仍然在b的前面；</p><h5 id="不稳定"><a href="#不稳定" class="headerlink" title="不稳定"></a>不稳定</h5><p>如果a原本在b的前面，而a=b，排序之后a可能会出现在b的后面；</p><h5 id="内排序"><a href="#内排序" class="headerlink" title="内排序"></a>内排序</h5><p>所有排序操作都在内存中完成；</p><h5 id="外排序"><a href="#外排序" class="headerlink" title="外排序"></a>外排序</h5><p>由于数据太大，因此把数据放在磁盘中，而排序通过磁盘和内存的数据传输才能进行；</p><h5 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h5><p> 一个算法执行所耗费的时间。</p><h5 id="空间复杂度"><a href="#空间复杂度" class="headerlink" title="空间复杂度"></a>空间复杂度</h5><p>运行完一个程序所需内存的大小。</p><h5 id="n"><a href="#n" class="headerlink" title="n"></a>n</h5><p>数据规模</p><h5 id="k"><a href="#k" class="headerlink" title="k"></a>k</h5><p>“桶”的个数</p><h5 id="In-place"><a href="#In-place" class="headerlink" title="In-place"></a>In-place</h5><p>不占用额外内存</p><h5 id="Out-place"><a href="#Out-place" class="headerlink" title="Out-place"></a>Out-place</h5><p>占用额外内存</p><p><strong>感谢</strong></p><blockquote><p>尚硅谷</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>基数排序（Java）</title>
      <link href="/2020/06/27/%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F%EF%BC%88Java%EF%BC%89/"/>
      <url>/2020/06/27/%E5%9F%BA%E6%95%B0%E6%8E%92%E5%BA%8F%EF%BC%88Java%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="基数排序（Java）"><a href="#基数排序（Java）" class="headerlink" title="基数排序（Java）"></a>基数排序（Java）</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="基数排序-桶排序-介绍"><a href="#基数排序-桶排序-介绍" class="headerlink" title="基数排序(桶排序)介绍"></a>基数排序(桶排序)介绍</h4><p>基数排序（radix sort）属于“分配式排序”（distribution sort），又称“桶子法”（bucket sort）或bin sort，顾名思义，它是通过键值的各个位的值，将要排序的元素分配至某些“桶”中，达到排序的作用</p><p>基数排序法是属于稳定性的排序，基数排序法的是效率高的稳定性排序法</p><p><strong>基数排序(Radix Sort)是桶排序的扩展</strong></p><p>基数排序是1887年赫尔曼·何乐礼发明的。它是这样实现的：将整数按位数切割成不同的数字，然后按每个位数分别比较。</p><h4 id="基数排序基本思想"><a href="#基数排序基本思想" class="headerlink" title="基数排序基本思想"></a>基数排序基本思想</h4><p>将所有待比较数值统一为同样的数位长度，数位较短的数前面补零。然后，从最低位开始，依次进行一次排序。这样从最低位排序一直到最高位排序完成以后, 数列就变成一个有序序列。</p><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><p>空间换时间，稳定</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.sort;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RadixSort</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> arr[] = &#123;<span class="number">53</span>,<span class="number">45</span>,<span class="number">6</span>,<span class="number">378</span>,<span class="number">15</span>,<span class="number">234</span>,<span class="number">78</span>&#125;;</span><br><span class="line">        System.out.println(<span class="string">"排序前"</span>);</span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line">        radixSort(arr);</span><br><span class="line">        System.out.println(<span class="string">"排序后"</span>);</span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">radixSort</span><span class="params">(<span class="keyword">int</span> arr[])</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取最大位数</span></span><br><span class="line">        <span class="keyword">int</span> max = arr[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[i] &gt; max) &#123;</span><br><span class="line">                max = arr[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//计算位数</span></span><br><span class="line">        <span class="keyword">int</span> maxLength = (max + <span class="string">""</span>).length();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[][] bucket = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>][arr.length];</span><br><span class="line">        <span class="keyword">int</span>[] bucketElemtCounts = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = <span class="number">1</span>; i &lt; maxLength; i++, n *= <span class="number">10</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">                <span class="keyword">int</span> digitOfElemt = arr[j] / n % <span class="number">10</span>;</span><br><span class="line">                bucket[digitOfElemt][bucketElemtCounts[digitOfElemt]] = arr[j];</span><br><span class="line">                bucketElemtCounts[digitOfElemt]++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; bucketElemtCounts.length; k++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (bucketElemtCounts[k] != <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">0</span>; l &lt; bucketElemtCounts[k]; l++) &#123;</span><br><span class="line">                        arr[index++] = bucket[k][l];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                bucketElemtCounts[k] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">"第"</span>+(i+<span class="number">1</span>)+<span class="string">"轮排序"</span>);</span><br><span class="line">            System.out.println(Arrays.toString(arr));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200627152753261.png" alt="image-20200627152753261"></p><h4 id="测试速度"><a href="#测试速度" class="headerlink" title="测试速度"></a>测试速度</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.sort;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RadixSort</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> max = <span class="number">80000</span>;</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[max];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; max; i++) &#123;</span><br><span class="line">            arr[i] = (<span class="keyword">int</span>)(Math.random() * <span class="number">80000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> date1 = System.currentTimeMillis();</span><br><span class="line">        radixSort(arr);</span><br><span class="line">        <span class="keyword">long</span> date2 = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">"位移式希尔排序"</span>+max+<span class="string">"数组的时间为："</span>+(date2-date1));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">radixSort</span><span class="params">(<span class="keyword">int</span> arr[])</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取最大位数</span></span><br><span class="line">        <span class="keyword">int</span> max = arr[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[i] &gt; max) &#123;</span><br><span class="line">                max = arr[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//计算位数</span></span><br><span class="line">        <span class="keyword">int</span> maxLength = (max + <span class="string">""</span>).length();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span>[][] bucket = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>][arr.length];</span><br><span class="line">        <span class="keyword">int</span>[] bucketElemtCounts = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, n = <span class="number">1</span>; i &lt; maxLength; i++, n *= <span class="number">10</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">                <span class="keyword">int</span> digitOfElemt = arr[j] / n % <span class="number">10</span>;</span><br><span class="line">                bucket[digitOfElemt][bucketElemtCounts[digitOfElemt]] = arr[j];</span><br><span class="line">                bucketElemtCounts[digitOfElemt]++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; bucketElemtCounts.length; k++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (bucketElemtCounts[k] != <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> l = <span class="number">0</span>; l &lt; bucketElemtCounts[k]; l++) &#123;</span><br><span class="line">                        arr[index++] = bucket[k][l];</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                bucketElemtCounts[k] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200627153106424.png" alt="image-20200627153106424"></p><p><strong>感谢</strong></p><blockquote><p>尚硅谷</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>归并排序（Java）</title>
      <link href="/2020/06/27/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F%EF%BC%88Java%EF%BC%89/"/>
      <url>/2020/06/27/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F%EF%BC%88Java%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="归并排序（Java）"><a href="#归并排序（Java）" class="headerlink" title="归并排序（Java）"></a>归并排序（Java）</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="归并排序介绍"><a href="#归并排序介绍" class="headerlink" title="归并排序介绍"></a>归并排序介绍</h4><p>归并排序（MERGE-SORT）是利用归并的思想实现的排序方法，该算法采用经典的分治（divide-and-conquer）策略（分治法将问题分(divide)成一些小的问题然后递归求解，而治(conquer)的阶段则将分的阶段得到的各答案”修补”在一起，即分而治之)。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.sort;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MergetSort</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> arr[] = &#123;<span class="number">8</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">6</span>, <span class="number">2</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> temp[] = <span class="keyword">new</span> <span class="keyword">int</span>[arr.length];</span><br><span class="line">        System.out.println(<span class="string">"排序前"</span>);</span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line">        mergeSort(arr, <span class="number">0</span>, arr.length - <span class="number">1</span>, temp);</span><br><span class="line">        System.out.println(<span class="string">"排序后"</span>);</span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mergeSort</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> left, <span class="keyword">int</span> right, <span class="keyword">int</span>[] temp)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (left &lt; right) &#123;</span><br><span class="line">            <span class="keyword">int</span> mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">            mergeSort(arr, left, mid, temp);</span><br><span class="line">            mergeSort(arr, mid + <span class="number">1</span>, right, temp);</span><br><span class="line">            merge(arr, left, mid, right, temp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> left, <span class="keyword">int</span> mid, <span class="keyword">int</span> right, <span class="keyword">int</span>[] temp)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = left;</span><br><span class="line">        <span class="keyword">int</span> j = mid + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= right) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[i] &lt;= arr[j]) &#123;</span><br><span class="line">                temp[t] = arr[i];</span><br><span class="line">                t += <span class="number">1</span>;</span><br><span class="line">                i += <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                temp[t] = arr[j];</span><br><span class="line">                t += <span class="number">1</span>;</span><br><span class="line">                j += <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (i &lt;= mid) &#123;</span><br><span class="line">            temp[t] = arr[i];</span><br><span class="line">            t += <span class="number">1</span>;</span><br><span class="line">            i += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (j &lt;= right) &#123;</span><br><span class="line">            temp[t] = arr[j];</span><br><span class="line">            t += <span class="number">1</span>;</span><br><span class="line">            j += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        t = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> tempIndex = left;</span><br><span class="line">        <span class="keyword">while</span> (tempIndex &lt;= right) &#123;</span><br><span class="line">            arr[tempIndex] = temp[t];</span><br><span class="line">            t += <span class="number">1</span>;</span><br><span class="line">            tempIndex += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200627143158315.png" alt="image-20200627143158315"></p><h4 id="速度测试"><a href="#速度测试" class="headerlink" title="速度测试"></a>速度测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.sort;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MergetSort</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> max = <span class="number">80000</span>;</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[max];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; max; i++) &#123;</span><br><span class="line">            arr[i] = (<span class="keyword">int</span>)(Math.random() * <span class="number">8000000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> temp[] = <span class="keyword">new</span> <span class="keyword">int</span>[arr.length];</span><br><span class="line">        <span class="keyword">long</span> date1 = System.currentTimeMillis();</span><br><span class="line">        mergeSort(arr, <span class="number">0</span>, arr.length - <span class="number">1</span>, temp);</span><br><span class="line">        <span class="keyword">long</span> date2 = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">"归并排序"</span>+max+<span class="string">"数组的时间为："</span>+(date2-date1));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mergeSort</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> left, <span class="keyword">int</span> right, <span class="keyword">int</span>[] temp)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (left &lt; right) &#123;</span><br><span class="line">            <span class="keyword">int</span> mid = (left + right) / <span class="number">2</span>;</span><br><span class="line">            mergeSort(arr, left, mid, temp);</span><br><span class="line">            mergeSort(arr, mid + <span class="number">1</span>, right, temp);</span><br><span class="line">            merge(arr, left, mid, right, temp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> left, <span class="keyword">int</span> mid, <span class="keyword">int</span> right, <span class="keyword">int</span>[] temp)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = left;</span><br><span class="line">        <span class="keyword">int</span> j = mid + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= right) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[i] &lt;= arr[j]) &#123;</span><br><span class="line">                temp[t] = arr[i];</span><br><span class="line">                t += <span class="number">1</span>;</span><br><span class="line">                i += <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                temp[t] = arr[j];</span><br><span class="line">                t += <span class="number">1</span>;</span><br><span class="line">                j += <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (i &lt;= mid) &#123;</span><br><span class="line">            temp[t] = arr[i];</span><br><span class="line">            t += <span class="number">1</span>;</span><br><span class="line">            i += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (j &lt;= right) &#123;</span><br><span class="line">            temp[t] = arr[j];</span><br><span class="line">            t += <span class="number">1</span>;</span><br><span class="line">            j += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        t = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> tempIndex = left;</span><br><span class="line">        <span class="keyword">while</span> (tempIndex &lt;= right) &#123;</span><br><span class="line">            arr[tempIndex] = temp[t];</span><br><span class="line">            t += <span class="number">1</span>;</span><br><span class="line">            tempIndex += <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200627143747548.png" alt="image-20200627143747548"></p><p><strong>感谢</strong></p><blockquote><p>尚硅谷</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>交换排序之快速排序（Java）</title>
      <link href="/2020/06/27/%E4%BA%A4%E6%8D%A2%E6%8E%92%E5%BA%8F%E4%B9%8B%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%EF%BC%88Java%EF%BC%89/"/>
      <url>/2020/06/27/%E4%BA%A4%E6%8D%A2%E6%8E%92%E5%BA%8F%E4%B9%8B%E5%BF%AB%E9%80%9F%E6%8E%92%E5%BA%8F%EF%BC%88Java%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="交换排序之快速排序（Java）"><a href="#交换排序之快速排序（Java）" class="headerlink" title="交换排序之快速排序（Java）"></a>交换排序之快速排序（Java）</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="快速排序法介绍"><a href="#快速排序法介绍" class="headerlink" title="快速排序法介绍"></a>快速排序法介绍</h4><p>快速排序（Quicksort）是对冒泡排序的一种改进。基本思想是：通过一趟排序将要排序的数据分割成独立的两部分，其中一部分的所有数据都比另外一部分的所有数据都要小，然后再按此方法对这两部分数据分别进行快速排序，整个排序过程可以递归进行，以此达到整个数据变成有序序列</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.sort;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuickSort</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;-<span class="number">9</span>, <span class="number">78</span>, <span class="number">0</span>, <span class="number">23</span>, -<span class="number">587</span>, <span class="number">71</span>&#125;;</span><br><span class="line">        System.out.println(<span class="string">"排序前"</span>);</span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line">        quickSort(arr, <span class="number">0</span>, arr.length - <span class="number">1</span>);</span><br><span class="line">        System.out.println(<span class="string">"排序后"</span>);</span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> l = left;</span><br><span class="line">        <span class="keyword">int</span> r = right;</span><br><span class="line">        <span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> pivot = arr[(left + right) / <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line">            <span class="keyword">while</span> (arr[l] &lt; pivot) &#123;</span><br><span class="line">                l += <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> (arr[r] &gt; pivot) &#123;</span><br><span class="line">                r -= <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (l &gt;= r) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            temp = arr[l];</span><br><span class="line">            arr[l] = arr[r];</span><br><span class="line">            arr[r] = temp;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (arr[l] == pivot) &#123;</span><br><span class="line">                r -= <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (arr[r] == pivot) &#123;</span><br><span class="line">                l += <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">            l += <span class="number">1</span>;</span><br><span class="line">            r -= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//向左递归</span></span><br><span class="line">        <span class="keyword">if</span> (left &lt; r) &#123;</span><br><span class="line">            quickSort(arr, left, r);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//向右递归</span></span><br><span class="line">        <span class="keyword">if</span> (right &gt; l) &#123;</span><br><span class="line">            quickSort(arr, l, right);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200627133332316.png" alt="image-20200627133332316"></p><h4 id="测试速度"><a href="#测试速度" class="headerlink" title="测试速度"></a>测试速度</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.sort;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuickSort</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> max = <span class="number">80000</span>;</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[max];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; max; i++) &#123;</span><br><span class="line">            arr[i] = (<span class="keyword">int</span>)(Math.random() * <span class="number">8000000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> date1 = System.currentTimeMillis();</span><br><span class="line">        quickSort(arr, <span class="number">0</span>, arr.length - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">long</span> date2 = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">"快速排序"</span>+max+<span class="string">"数组的时间为："</span>+(date2-date1));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">quickSort</span><span class="params">(<span class="keyword">int</span>[] arr, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> l = left;</span><br><span class="line">        <span class="keyword">int</span> r = right;</span><br><span class="line">        <span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> pivot = arr[(left + right) / <span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line">            <span class="keyword">while</span> (arr[l] &lt; pivot) &#123;</span><br><span class="line">                l += <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> (arr[r] &gt; pivot) &#123;</span><br><span class="line">                r -= <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (l &gt;= r) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            temp = arr[l];</span><br><span class="line">            arr[l] = arr[r];</span><br><span class="line">            arr[r] = temp;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (arr[l] == pivot) &#123;</span><br><span class="line">                r -= <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (arr[r] == pivot) &#123;</span><br><span class="line">                l += <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">            l += <span class="number">1</span>;</span><br><span class="line">            r -= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//向左递归</span></span><br><span class="line">        <span class="keyword">if</span> (left &lt; r) &#123;</span><br><span class="line">            quickSort(arr, left, r);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//向右递归</span></span><br><span class="line">        <span class="keyword">if</span> (right &gt; l) &#123;</span><br><span class="line">            quickSort(arr, l, right);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200627133734166.png" alt="image-20200627133734166"></p><p><strong>感谢</strong></p><blockquote><p>尚硅谷</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>插入排序之希尔排序（Java）</title>
      <link href="/2020/06/27/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%E4%B9%8B%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F%EF%BC%88Java%EF%BC%89/"/>
      <url>/2020/06/27/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%E4%B9%8B%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F%EF%BC%88Java%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="插入排序之希尔排序（Java）"><a href="#插入排序之希尔排序（Java）" class="headerlink" title="插入排序之希尔排序（Java）"></a>插入排序之希尔排序（Java）</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="希尔排序法介绍"><a href="#希尔排序法介绍" class="headerlink" title="希尔排序法介绍"></a>希尔排序法介绍</h4><p>希尔排序是希尔（Donald Shell）于1959年提出的一种排序算法。希尔排序也是一种插入排序，它是简单插入排序经过改进之后的一个更高效的版本，也称为缩小增量排序。</p><h4 id="希尔排序法基本思想"><a href="#希尔排序法基本思想" class="headerlink" title="希尔排序法基本思想"></a>希尔排序法基本思想</h4><p>希尔排序是把记录按下标的一定增量分组，对每组使用直接插入排序算法排序；随着增量逐渐减少，每组包含的关键词越来越多，当增量减至1时，整个文件恰被分成一组，算法便终止</p><h4 id="代码（交换式）"><a href="#代码（交换式）" class="headerlink" title="代码（交换式）"></a>代码（交换式）</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.sort;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShellSort</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">8</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">0</span>&#125;;</span><br><span class="line">        System.out.println(<span class="string">"排序前"</span>);</span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line">        shellSort(arr);</span><br><span class="line">        System.out.println(<span class="string">"排序后"</span>);</span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">shellSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> gap = arr.length / <span class="number">2</span>; gap &gt; <span class="number">0</span>; gap /= <span class="number">2</span>) &#123;</span><br><span class="line">            count++;</span><br><span class="line">            <span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = gap; i &lt; arr.length; i++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = i - gap; j &gt;= <span class="number">0</span>; j -= gap) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (arr[j] &gt; arr[j + gap]) &#123;</span><br><span class="line">                        temp = arr[j];</span><br><span class="line">                        arr[j] = arr[j + gap];</span><br><span class="line">                        arr[j + gap] = temp;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">"第"</span>+count+<span class="string">"轮排序"</span>);</span><br><span class="line">            System.out.println(Arrays.toString(arr));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200627112239838.png" alt="image-20200627112239838"></p><h4 id="测试速度"><a href="#测试速度" class="headerlink" title="测试速度"></a>测试速度</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.sort;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShellSort</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> max = <span class="number">80000</span>;</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[max];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; max; i++) &#123;</span><br><span class="line">            arr[i] = (<span class="keyword">int</span>)(Math.random() * <span class="number">8000000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> date1 = System.currentTimeMillis();</span><br><span class="line">        shellSort(arr);</span><br><span class="line">        <span class="keyword">long</span> date2 = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">"交换式希尔排序"</span>+max+<span class="string">"数组的时间为："</span>+(date2-date1));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">shellSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> gap = arr.length / <span class="number">2</span>; gap &gt; <span class="number">0</span>; gap /= <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = gap; i &lt; arr.length; i++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = i - gap; j &gt;= <span class="number">0</span>; j -= gap) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (arr[j] &gt; arr[j + gap]) &#123;</span><br><span class="line">                        temp = arr[j];</span><br><span class="line">                        arr[j] = arr[j + gap];</span><br><span class="line">                        arr[j + gap] = temp;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200627112432454.png" alt="image-20200627112432454"></p><h4 id="代码（位移式）"><a href="#代码（位移式）" class="headerlink" title="代码（位移式）"></a>代码（位移式）</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.sort;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShellSort</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">8</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">7</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">0</span>&#125;;</span><br><span class="line">        System.out.println(<span class="string">"排序前"</span>);</span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line">        shellSort(arr);</span><br><span class="line">        System.out.println(<span class="string">"排序后"</span>);</span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">shellSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> gap = arr.length / <span class="number">2</span>; gap &gt; <span class="number">0</span>; gap /= <span class="number">2</span>) &#123;</span><br><span class="line">            count++;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = gap; i &lt; arr.length; i++) &#123;</span><br><span class="line">                <span class="keyword">int</span> j = i;</span><br><span class="line">                <span class="keyword">int</span> temp = arr[i];</span><br><span class="line">                <span class="keyword">if</span>(arr[j]&lt;arr[j-gap])&#123;</span><br><span class="line">                    <span class="keyword">while</span> (j-gap &gt;= <span class="number">0</span> &amp;&amp; temp &lt; arr[j-gap])&#123;</span><br><span class="line">                        arr[j] = arr[j-gap];</span><br><span class="line">                        j -= gap;</span><br><span class="line">                    &#125;</span><br><span class="line">                    arr[j] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">"第"</span>+count+<span class="string">"轮排序"</span>);</span><br><span class="line">            System.out.println(Arrays.toString(arr));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h5><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200627113534689.png" alt="image-20200627113534689"></p><h4 id="速度测试"><a href="#速度测试" class="headerlink" title="速度测试"></a>速度测试</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.sort;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShellSort</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> max = <span class="number">80000</span>;</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[max];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; max; i++) &#123;</span><br><span class="line">            arr[i] = (<span class="keyword">int</span>)(Math.random() * <span class="number">8000000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> date1 = System.currentTimeMillis();</span><br><span class="line">        shellSort(arr);</span><br><span class="line">        <span class="keyword">long</span> date2 = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">"位移式希尔排序"</span>+max+<span class="string">"数组的时间为："</span>+(date2-date1));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">shellSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> gap = arr.length / <span class="number">2</span>; gap &gt; <span class="number">0</span>; gap /= <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = gap; i &lt; arr.length; i++) &#123;</span><br><span class="line">                <span class="keyword">int</span> j = i;</span><br><span class="line">                <span class="keyword">int</span> temp = arr[i];</span><br><span class="line">                <span class="keyword">if</span>(arr[j]&lt;arr[j-gap])&#123;</span><br><span class="line">                    <span class="keyword">while</span> (j-gap &gt;= <span class="number">0</span> &amp;&amp; temp &lt; arr[j-gap])&#123;</span><br><span class="line">                        arr[j] = arr[j-gap];</span><br><span class="line">                        j -= gap;</span><br><span class="line">                    &#125;</span><br><span class="line">                    arr[j] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200627113830366.png" alt="image-20200627113830366"></p><p><strong>感谢</strong></p><blockquote><p>尚硅谷</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>插入排序之直接插入排序（Java）</title>
      <link href="/2020/06/26/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%E4%B9%8B%E7%9B%B4%E6%8E%A5%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%EF%BC%88Java%EF%BC%89/"/>
      <url>/2020/06/26/%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%E4%B9%8B%E7%9B%B4%E6%8E%A5%E6%8F%92%E5%85%A5%E6%8E%92%E5%BA%8F%EF%BC%88Java%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="插入排序之直接插入排序（Java）"><a href="#插入排序之直接插入排序（Java）" class="headerlink" title="插入排序之直接插入排序（Java）"></a>插入排序之直接插入排序（Java）</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="插入排序法思想"><a href="#插入排序法思想" class="headerlink" title="插入排序法思想"></a>插入排序法思想</h4><p>插入排序（Insertion Sorting）的基本思想是：<strong>把n个待排序的元素看成为一个有序表和一个无序表</strong>，开始时有序表中只包含一个元素，无序表中包含有n-1个元素，排序过程中每次从无序表中取出第一个元素，把它的排序码依次与有序表元素的排序码进行比较，将它插入到有序表中的适当位置，使之成为新的有序表。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.sort;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InsertSort</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">12</span>, <span class="number">28</span>, <span class="number">3</span>, <span class="number">109</span>, <span class="number">50</span>&#125;;</span><br><span class="line">        System.out.println(<span class="string">"插入前"</span>);</span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line">        insertSort(arr);</span><br><span class="line">        System.out.println(<span class="string">"插入后"</span>);</span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">insertSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> insertVal = arr[i];</span><br><span class="line">            <span class="keyword">int</span> insertIndex = i - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (insertIndex &gt;= <span class="number">0</span> &amp;&amp; insertVal &lt; arr[insertIndex]) &#123;</span><br><span class="line">                arr[insertIndex + <span class="number">1</span>] = arr[insertIndex];</span><br><span class="line">                insertIndex--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (insertIndex + <span class="number">1</span> != i) &#123;</span><br><span class="line">                arr[insertIndex + <span class="number">1</span>] = insertVal;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">"第"</span> + i + <span class="string">"轮插入"</span>);</span><br><span class="line">            System.out.println(Arrays.toString(arr));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200626224321592.png" alt="image-20200626224321592"></p><h4 id="测试速度"><a href="#测试速度" class="headerlink" title="测试速度"></a>测试速度</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.sort;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">InsertSort</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> max = <span class="number">80000</span>;</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[max];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; max; i++) &#123;</span><br><span class="line">            arr[i] = (<span class="keyword">int</span>)(Math.random() * <span class="number">8000000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> date1 = System.currentTimeMillis();</span><br><span class="line">        insertSort(arr);</span><br><span class="line">        <span class="keyword">long</span> date2 = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">"冒泡排序"</span>+max+<span class="string">"数组的时间为："</span>+(date2-date1));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">insertSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> insertVal = arr[i];</span><br><span class="line">            <span class="keyword">int</span> insertIndex = i - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (insertIndex &gt;= <span class="number">0</span> &amp;&amp; insertVal &lt; arr[insertIndex]) &#123;</span><br><span class="line">                arr[insertIndex + <span class="number">1</span>] = arr[insertIndex];</span><br><span class="line">                insertIndex--;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (insertIndex + <span class="number">1</span> != i) &#123;</span><br><span class="line">                arr[insertIndex + <span class="number">1</span>] = insertVal;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200626225255959.png" alt="image-20200626225255959"></p><p><strong>感谢</strong></p><blockquote><p>尚硅谷</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>选择排序之简单选择排序（Java）</title>
      <link href="/2020/06/26/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F%E4%B9%8B%E7%AE%80%E5%8D%95%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F%EF%BC%88Java%EF%BC%89/"/>
      <url>/2020/06/26/%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F%E4%B9%8B%E7%AE%80%E5%8D%95%E9%80%89%E6%8B%A9%E6%8E%92%E5%BA%8F%EF%BC%88Java%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="选择排序之简单选择排序（Java）"><a href="#选择排序之简单选择排序（Java）" class="headerlink" title="选择排序之简单选择排序（Java）"></a>选择排序之简单选择排序（Java）</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>选择排序（select sorting）也是一种简单的排序方法。它的基本思想是：第一次从arr[0]<del>arr[n-1]中选取最小值，与arr[0]交换，第二次从arr[1]</del>arr[n-1]中选取最小值，与arr[1]交换，第三次从arr[2]<del>arr[n-1]中选取最小值，与arr[2]交换，…，第i次从arr[i-1]</del>arr[n-1]中选取最小值，与arr[i-1]交换，…, 第n-1次从arr[n-2]~arr[n-1]中选取最小值，与arr[n-2]交换，总共通过n-1次，得到一个按排序码从小到大排列的有序序列。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.sort;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SelectSort</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span>[] arr = &#123;<span class="number">102</span>, <span class="number">34</span>, <span class="number">98</span>, <span class="number">6</span>&#125;;</span><br><span class="line">        System.out.println(<span class="string">"排序前"</span>);</span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line">        selectSort(arr);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">selectSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> minIndex = i;</span><br><span class="line">            <span class="keyword">int</span> min = arr[i];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (min &gt; arr[j]) &#123;</span><br><span class="line">                    min = arr[j];</span><br><span class="line">                    minIndex = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (minIndex != i) &#123;</span><br><span class="line">                arr[minIndex] = arr[i];</span><br><span class="line">                arr[i] = min;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">"第"</span> + (i + <span class="number">1</span>) + <span class="string">"轮后"</span>);</span><br><span class="line">            System.out.println(Arrays.toString(arr));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200626221002541.png" alt="image-20200626221002541"></p><h4 id="测试速度"><a href="#测试速度" class="headerlink" title="测试速度"></a>测试速度</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.sort;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SelectSort</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> max = <span class="number">80000</span>;</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[max];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; max; i++) &#123;</span><br><span class="line">            arr[i] = (<span class="keyword">int</span>)(Math.random() * <span class="number">8000000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> date1 = System.currentTimeMillis();</span><br><span class="line">        selectSort(arr);</span><br><span class="line">        <span class="keyword">long</span> date2 = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">"冒泡排序"</span>+max+<span class="string">"数组的时间为："</span>+(date2-date1));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">selectSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> minIndex = i;</span><br><span class="line">            <span class="keyword">int</span> min = arr[i];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; arr.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (min &gt; arr[j]) &#123;</span><br><span class="line">                    min = arr[j];</span><br><span class="line">                    minIndex = j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (minIndex != i) &#123;</span><br><span class="line">                arr[minIndex] = arr[i];</span><br><span class="line">                arr[i] = min;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200626225423008.png" alt="image-20200626225423008"></p><p>运行的时间与自身的电脑有关</p><p><strong>感谢</strong></p><blockquote><p>尚硅谷</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>交换排序之冒泡排序（java）</title>
      <link href="/2020/06/26/%E4%BA%A4%E6%8D%A2%E6%8E%92%E5%BA%8F%E4%B9%8B%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%EF%BC%88java%EF%BC%89/"/>
      <url>/2020/06/26/%E4%BA%A4%E6%8D%A2%E6%8E%92%E5%BA%8F%E4%B9%8B%E5%86%92%E6%B3%A1%E6%8E%92%E5%BA%8F%EF%BC%88java%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="交换排序之冒泡排序（java）"><a href="#交换排序之冒泡排序（java）" class="headerlink" title="交换排序之冒泡排序（java）"></a>交换排序之冒泡排序（java）</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>冒泡排序（Bubble Sorting）的基本思想是：通过对待排序序列从前向后（从下标较小的元素开始）,依次比较相邻元素的值，若发现逆序则交换，使值较大的元素逐渐从前移向后部，就象水底下的气泡一样逐渐向上冒。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.sort;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BubbleSort</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> arr[] = &#123;<span class="number">3</span>, <span class="number">9</span>, -<span class="number">1</span>, <span class="number">10</span>, -<span class="number">2</span>&#125;;</span><br><span class="line">        <span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arr.length - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                    temp = arr[j];</span><br><span class="line">                    arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                    arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(<span class="string">"第"</span>+(i+<span class="number">1</span>)+<span class="string">"躺排序后的数组"</span>);</span><br><span class="line">            System.out.println(Arrays.toString(arr));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200626211951798.png" alt="image-20200626211951798"></p><h4 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h4><p>减少未曾发生交换的次数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.sort;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BubbleSort</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> arr[] = &#123;<span class="number">3</span>, <span class="number">9</span>, -<span class="number">1</span>, <span class="number">10</span>, -<span class="number">2</span>&#125;;</span><br><span class="line">        System.out.println(<span class="string">"排序前"</span>);</span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line">        bubbledSort(arr);</span><br><span class="line">        System.out.println(<span class="string">"排序后"</span>);</span><br><span class="line">        System.out.println(Arrays.toString(arr));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bubbledSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>; <span class="comment">//标识，是否发生交换</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arr.length - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                    flag = <span class="keyword">true</span>;</span><br><span class="line">                    temp = arr[j];</span><br><span class="line">                    arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                    arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!flag)&#123; <span class="comment">//没有发生交换</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//进行下次交换</span></span><br><span class="line">                flag = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="测试-1"><a href="#测试-1" class="headerlink" title="测试"></a>测试</h5><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200626212910608.png" alt="image-20200626212910608"></p><h4 id="测试速度"><a href="#测试速度" class="headerlink" title="测试速度"></a>测试速度</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.sort;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BubbleSort</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> max = <span class="number">80000</span>;</span><br><span class="line">        <span class="keyword">int</span>[] arr = <span class="keyword">new</span> <span class="keyword">int</span>[max];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; max; i++) &#123;</span><br><span class="line">            arr[i] = (<span class="keyword">int</span>)(Math.random() * <span class="number">8000000</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">long</span> date1 = System.currentTimeMillis();</span><br><span class="line">        bubbledSort(arr);</span><br><span class="line">        <span class="keyword">long</span> date2 = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">"冒泡排序"</span>+max+<span class="string">"数组的时间为："</span>+(date2-date1));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">bubbledSort</span><span class="params">(<span class="keyword">int</span>[] arr)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>; <span class="comment">//标识，是否发生交换</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; arr.length - <span class="number">1</span> - i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arr[j] &gt; arr[j + <span class="number">1</span>]) &#123;</span><br><span class="line">                    flag = <span class="keyword">true</span>;</span><br><span class="line">                    temp = arr[j];</span><br><span class="line">                    arr[j] = arr[j + <span class="number">1</span>];</span><br><span class="line">                    arr[j + <span class="number">1</span>] = temp;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(!flag)&#123; <span class="comment">//没有发生交换</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">//进行下次交换</span></span><br><span class="line">                flag = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200626214021562.png" alt="image-20200626214021562"></p><p>运行的时间与自身的电脑有关</p><p><strong>感谢</strong></p><blockquote><p>尚硅谷</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>算法的时间复杂度和空间复杂度</title>
      <link href="/2020/06/26/%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%92%8C%E7%A9%BA%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6/"/>
      <url>/2020/06/26/%E7%AE%97%E6%B3%95%E7%9A%84%E6%97%B6%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6%E5%92%8C%E7%A9%BA%E9%97%B4%E5%A4%8D%E6%9D%82%E5%BA%A6/</url>
      
        <content type="html"><![CDATA[<h2 id="算法的时间复杂度和空间复杂度"><a href="#算法的时间复杂度和空间复杂度" class="headerlink" title="算法的时间复杂度和空间复杂度"></a>算法的时间复杂度和空间复杂度</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h3 id="算法的时间复杂度"><a href="#算法的时间复杂度" class="headerlink" title="算法的时间复杂度"></a>算法的时间复杂度</h3><h4 id="时间频度"><a href="#时间频度" class="headerlink" title="时间频度"></a>时间频度</h4><p>一个算法花费的时间与算法中语句的执行次数成正比例，哪个算法中语句执行次数多，它花费时间就多。一个算法中的<strong>语句执行次数</strong>称为<strong>语句频度</strong>或<strong>时间频度</strong>。</p><h4 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h4><p>一般情况下，算法中的基本操作语句的重复执行次数是问题规模n的某个函数，用T(n)表示，若有某个辅助函数f(n)，使得当n趋近于无穷大时，T(n) / f(n) 的极限值为不等于零的常数，则称f(n)是T(n)的同数量级函数。记作 T(n)=Ｏ( f(n) )，称Ｏ( f(n) )  为算法的<strong>渐进时间复杂度</strong>，简称<strong>时间复杂度</strong>。</p><h4 id="计算时间复杂度的方法"><a href="#计算时间复杂度的方法" class="headerlink" title="计算时间复杂度的方法"></a>计算时间复杂度的方法</h4><ul><li>用常数1代替运行时间中的所有加法常数  </li><li>修改后的运行次数函数中，只保留最高阶项 </li><li>去除最高阶项的系数</li></ul><h4 id="常见的时间复杂度"><a href="#常见的时间复杂度" class="headerlink" title="常见的时间复杂度"></a>常见的时间复杂度</h4><h5 id="常数阶O-1"><a href="#常数阶O-1" class="headerlink" title="常数阶O(1)"></a>常数阶O(1)</h5><p>无论代码执行了多少行，只要是没有循环等复杂结构，那这个代码的时间复杂度就都是O(1)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">2</span>;</span><br><span class="line">i++;</span><br><span class="line">j++;</span><br></pre></td></tr></table></figure><p>上述代码在执行的时候，它消耗的时候并不随着某个变量的增长而增长，那么无论这类代码有多长，即使有几万几十万行，都可以用O(1)来表示它的时间复杂度。</p><h5 id="对数阶O-log2n"><a href="#对数阶O-log2n" class="headerlink" title="对数阶O(log2n)"></a>对数阶O(log2n)</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(i&lt;n)&#123;</span><br><span class="line">i = i * <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在while循环里面，每次都将 i 乘以 2，乘完之后，i 距离 n 就越来越近了。假设循环x次之后，i 就大于 2 了，此时这个循环就退出了，也就是说 2 的 x 次方等于 n，那么 x = log2n也就是说当循环 log2n 次以后，这个代码就结束了。因此这个代码的时间复杂度为：O(log2n)  。 O(log2n) 的这个2 时间上是根据代码变化的，i = i * 3 ，则是 O(log3n) </p><h5 id="线性阶O-n"><a href="#线性阶O-n" class="headerlink" title="线性阶O(n)"></a>线性阶O(n)</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(i = <span class="number">1</span>; i &lt;= n; i++)&#123;</span><br><span class="line">j = i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码，for循环里面的代码会执行n遍，因此它消耗的时间是随着n的变化而变化的，因此这类代码都可以用O(n)来表示它的时间复杂度</p><h5 id="线性对数阶O-nlog2n"><a href="#线性对数阶O-nlog2n" class="headerlink" title="线性对数阶O(nlog2n)"></a>线性对数阶O(nlog2n)</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(m =<span class="number">1</span>;m&lt;n;m++)&#123;</span><br><span class="line"> i = <span class="number">1</span>;</span><br><span class="line"> <span class="keyword">while</span>(i&lt;n)&#123;</span><br><span class="line"> i = i * <span class="number">2</span>;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>线性对数阶O(nlogN) 其实非常容易理解，将时间复杂度为O(logn)的代码循环N遍的话，那么它的时间复杂度就是 n * O(logN)，也就是了O(nlogN)</p><h5 id="平方阶O-n-2"><a href="#平方阶O-n-2" class="headerlink" title="平方阶O(n^2)"></a>平方阶O(n^2)</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(j=<span class="number">1</span>;j&lt;n;j++)&#123;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;n;i++)&#123;</span><br><span class="line">    m = j+i;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>平方阶O(n²) 就更容易理解了，如果把 O(n) 的代码再嵌套循环一遍，它的时间复杂度就是 O(n²)，这段代码其实就是嵌套了2层n循环，它的时间复杂度就是 O(n<em>n)，即  O(n²) 如果将其中一层循环的n改成m，那它的时间复杂度就变成了 O(m</em>n)</p><h5 id="立方阶O-n-3"><a href="#立方阶O-n-3" class="headerlink" title="立方阶O(n^3)"></a>立方阶O(n^3)</h5><p>三层循环</p><h5 id="k次方阶O-n-k"><a href="#k次方阶O-n-k" class="headerlink" title="k次方阶O(n^k)"></a>k次方阶O(n^k)</h5><p>k层循环</p><h5 id="指数阶O-2-n"><a href="#指数阶O-2-n" class="headerlink" title="指数阶O(2^n)"></a>指数阶O(2^n)</h5><h4 id="常见的算法时间复杂度大小"><a href="#常见的算法时间复杂度大小" class="headerlink" title="常见的算法时间复杂度大小"></a>常见的算法时间复杂度大小</h4><p>由小到大依次为：Ο(1)＜Ο(log2n)＜Ο(n)＜Ο(nlog2n)＜Ο(n2)＜Ο(n3)＜ Ο(nk) ＜Ο(2n) ，随着问题规模n的不断增大，上述时间复杂度不断增大，算法的执行效率越低<br>从图中可见，</p><h4 id="建议"><a href="#建议" class="headerlink" title="建议"></a>建议</h4><p>尽可能避免使用指数阶的算法</p><h4 id="平均时间复杂度和最坏时间复杂度"><a href="#平均时间复杂度和最坏时间复杂度" class="headerlink" title="平均时间复杂度和最坏时间复杂度"></a>平均时间复杂度和最坏时间复杂度</h4><ul><li>平均时间复杂度是指所有可能的输入实例均以等概率出现的情况下，该算法的运行时间。</li><li>最坏情况下的时间复杂度称最坏时间复杂度。一般讨论的时间复杂度均是最坏情况下的时间复杂度。 这样做的原因是：最坏情况下的时间复杂度是算法在任何输入实例上运行时间的界限，这就保证了算法的运行时间不会比最坏情况更长。</li><li>平均时间复杂度和最坏时间复杂度是否一致，和算法有关</li></ul><h3 id="算法的空间复杂度"><a href="#算法的空间复杂度" class="headerlink" title="算法的空间复杂度"></a>算法的空间复杂度</h3><ul><li>类似于时间复杂度的讨论，一个算法的空间复杂度(Space Complexity)定义为该算法所耗费的存储空间，它也是问题规模n的函数。</li><li>空间复杂度(Space Complexity)是对一个算法在运行过程中临时占用存储空间大小的量度。有的算法需要占用的临时工作单元数与解决问题的规模n有关，它随着n的增大而增大，当n较大时，将占用较多的存储单元，例如快速排序和归并排序算法就属于这种情况</li><li>在做算法分析时，主要讨论的是时间复杂度。从用户使用体验上看，更看重的程序执行的速度。一些缓存产品(redis, memcache)和算法(基数排序)本质就是用空间换时间.</li></ul><p><strong>感谢</strong></p><blockquote><p>尚硅谷</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Session--验证码案例（Java）</title>
      <link href="/2020/06/26/Session--%E9%AA%8C%E8%AF%81%E7%A0%81%E6%A1%88%E4%BE%8B%EF%BC%88Java%EF%BC%89/"/>
      <url>/2020/06/26/Session--%E9%AA%8C%E8%AF%81%E7%A0%81%E6%A1%88%E4%BE%8B%EF%BC%88Java%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="Session–验证码案例（Java）"><a href="#Session–验证码案例（Java）" class="headerlink" title="Session–验证码案例（Java）"></a>Session–验证码案例（Java）</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h4><p>用户输入用户名，密码以及验证码。</p><ul><li>如果用户名和密码输入有误，跳转登录页面，提示:用户名或密码错误</li><li>如果验证码输入有误，跳转登录页面，提示：验证码错误</li><li>如果全部输入正确，则跳转到主页success.jsp，显示：用户名,欢迎您</li></ul><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>在生成验证码的时候将它的值存入到session中，在比对的时候再取出来进行对比</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><h5 id="index-jsp"><a href="#index-jsp" class="headerlink" title="index.jsp"></a>index.jsp</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: tanglei</span><br><span class="line">  Date: <span class="number">2020</span>/<span class="number">6</span>/<span class="number">26</span></span><br><span class="line">  Time: 下午<span class="number">12</span>:<span class="number">48</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;login&lt;/title&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;script&gt;</span><br><span class="line">        window.onload = function()&#123;</span><br><span class="line">            document.getElementById(<span class="string">"img"</span>).onclick = function()&#123;</span><br><span class="line">                <span class="keyword">this</span>.src=<span class="string">"/login_time_war_exploded/checkCode?time="</span>+<span class="keyword">new</span> Date().getTime();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        div&#123;</span><br><span class="line">            color: red;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"></span><br><span class="line">&lt;form action=<span class="string">"/login_time_war_exploded/login"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    &lt;table&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;用户名&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;input type="text" name="username"&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;密码&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;input type="password" name="password"&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td&gt;验证码&lt;/td&gt;</span><br><span class="line">            &lt;td&gt;&lt;input type="text" name="checkCode"&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td colspan="2"&gt;&lt;img id="img" src="/login_time_war_exploded/checkCode"&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">            &lt;td colspan="2"&gt;&lt;input type="submit" value="登录"&gt;&lt;/td&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/form&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;div&gt;&lt;%=request.getAttribute("cc_error") == null ? "" : request.getAttribute("cc_error")%&gt;&lt;/div&gt;</span><br><span class="line">&lt;div&gt;&lt;%=request.getAttribute("login_error") == null ? "" : request.getAttribute("login_error") %&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="success-jsp"><a href="#success-jsp" class="headerlink" title="success.jsp"></a>success.jsp</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: tanglei</span><br><span class="line">  Date: <span class="number">2020</span>/<span class="number">6</span>/<span class="number">26</span></span><br><span class="line">  Time: 下午<span class="number">6</span>:<span class="number">27</span></span><br><span class="line">  To change <span class="keyword">this</span> template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1&gt;&lt;%=request.getSession().getAttribute("user")%&gt;,欢迎您&lt;/h1&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h5 id="验证码checkCode-java"><a href="#验证码checkCode-java" class="headerlink" title="验证码checkCode.java"></a>验证码checkCode.java</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/checkCode"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CheckCode</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> width = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">int</span> height = <span class="number">50</span>;</span><br><span class="line">        <span class="comment">//创建图片对象</span></span><br><span class="line">        BufferedImage image = <span class="keyword">new</span> BufferedImage(width, height, BufferedImage.TYPE_INT_BGR);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//美化</span></span><br><span class="line">        Graphics g = image.getGraphics();</span><br><span class="line">        <span class="comment">//背景</span></span><br><span class="line">        g.setColor(Color.PINK);</span><br><span class="line">        g.fillRect(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line">        <span class="comment">//边框</span></span><br><span class="line">        g.setColor(Color.BLUE);</span><br><span class="line">        g.drawRect(<span class="number">0</span>, <span class="number">0</span>, width - <span class="number">1</span>, height - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        String str = <span class="string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"</span>;</span><br><span class="line">        Random ran = <span class="keyword">new</span> Random();</span><br><span class="line">        StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> index = ran.nextInt(str.length());</span><br><span class="line">            <span class="keyword">char</span> ch = str.charAt(index);</span><br><span class="line">            sb.append(ch);</span><br><span class="line">            g.drawString(ch+<span class="string">""</span>,width/<span class="number">5</span>*i,height/<span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        String checkCode_session = sb.toString();</span><br><span class="line">        <span class="comment">//将验证码存入session</span></span><br><span class="line">        req.getSession().setAttribute(<span class="string">"checkCode_session"</span>,checkCode_session);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//干扰线</span></span><br><span class="line">        g.setColor(Color.GREEN);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x1 = ran.nextInt(width);</span><br><span class="line">            <span class="keyword">int</span> x2= ran.nextInt(width);</span><br><span class="line">            <span class="keyword">int</span> y1 = ran.nextInt(height);</span><br><span class="line">            <span class="keyword">int</span> y2 = ran.nextInt(height);</span><br><span class="line">            g.drawLine(x1,y1,x2,y2);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="comment">//输出图片到浏览器</span></span><br><span class="line">        ImageIO.write(image, <span class="string">"jpg"</span>, resp.getOutputStream());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="login-java"><a href="#login-java" class="headerlink" title="login.java"></a>login.java</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/login"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Login</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1.设置request编码</span></span><br><span class="line">        req.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        <span class="comment">//2.获取参数</span></span><br><span class="line">        String username = req.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        String password = req.getParameter(<span class="string">"password"</span>);</span><br><span class="line">        String checkCode = req.getParameter(<span class="string">"checkCode"</span>);</span><br><span class="line">        <span class="comment">//3.先获取生成的验证码</span></span><br><span class="line">        HttpSession session = req.getSession();</span><br><span class="line">        String checkCode_session = (String) session.getAttribute(<span class="string">"checkCode_session"</span>);</span><br><span class="line">        <span class="comment">//删除session中存储的验证码</span></span><br><span class="line">        <span class="comment">//session.removeAttribute("checkCode_session");</span></span><br><span class="line">        <span class="comment">//3.先判断验证码是否正确</span></span><br><span class="line">        <span class="keyword">if</span>(checkCode_session!= <span class="keyword">null</span> &amp;&amp; checkCode_session.equalsIgnoreCase(checkCode))&#123;</span><br><span class="line">            <span class="comment">//忽略大小写比较</span></span><br><span class="line">            <span class="comment">//验证码正确</span></span><br><span class="line">            <span class="comment">//判断用户名和密码是否一致</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="string">"zhangsan"</span>.equals(username) &amp;&amp; <span class="string">"123"</span>.equals(password))&#123;<span class="comment">//需要调用UserDao查询数据库</span></span><br><span class="line">                <span class="comment">//登录成功</span></span><br><span class="line">                <span class="comment">//存储信息，用户信息</span></span><br><span class="line">                session.setAttribute(<span class="string">"user"</span>,username);</span><br><span class="line">                <span class="comment">//重定向到success.jsp</span></span><br><span class="line">                resp.sendRedirect(req.getContextPath()+<span class="string">"/success.jsp"</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//登录失败</span></span><br><span class="line">                <span class="comment">//存储提示信息到request</span></span><br><span class="line">                req.setAttribute(<span class="string">"login_error"</span>,<span class="string">"用户名或密码错误"</span>);</span><br><span class="line">                <span class="comment">//转发到登录页面</span></span><br><span class="line">                req.getRequestDispatcher(<span class="string">"/login.jsp"</span>).forward(req,resp);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//验证码不一致</span></span><br><span class="line">            <span class="comment">//存储提示信息到request</span></span><br><span class="line">            req.setAttribute(<span class="string">"cc_error"</span>,<span class="string">"验证码错误"</span>);</span><br><span class="line">            <span class="comment">//转发到登录页面</span></span><br><span class="line">            req.getRequestDispatcher(<span class="string">"/login.jsp"</span>).forward(req,resp);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><h5 id="登录界面"><a href="#登录界面" class="headerlink" title="登录界面"></a>登录界面</h5><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200626181430294.png" alt="image-20200626181430294"></p><h5 id="验证码错误"><a href="#验证码错误" class="headerlink" title="验证码错误"></a>验证码错误</h5><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200626181632252.png" alt="image-20200626181632252"></p><h5 id="用户名密码错误"><a href="#用户名密码错误" class="headerlink" title="用户名密码错误"></a>用户名密码错误</h5><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200626182552928.png" alt="image-20200626182552928"></p><h5 id="登录成功"><a href="#登录成功" class="headerlink" title="登录成功"></a>登录成功</h5><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200626182919028.png" alt="image-20200626182919028"></p><p><strong>感谢</strong></p><blockquote><p>黑马程序员</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>服务端会话技术--Session</title>
      <link href="/2020/06/26/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E4%BC%9A%E8%AF%9D%E6%8A%80%E6%9C%AF--Session/"/>
      <url>/2020/06/26/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E4%BC%9A%E8%AF%9D%E6%8A%80%E6%9C%AF--Session/</url>
      
        <content type="html"><![CDATA[<h2 id="服务端会话技术–Session"><a href="#服务端会话技术–Session" class="headerlink" title="服务端会话技术–Session"></a>服务端会话技术–Session</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>服务器端会话技术，在一次会话的多次请求间共享数据，将数据保存在服务器端的对象中。HttpSession</p><h4 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h4><ol><li><p>获取HttpSession对象：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">HttpSession session = request.getSession();</span><br></pre></td></tr></table></figure></li><li><p>使用HttpSession对象：</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Object <span class="title">getAttribute</span><span class="params">(String name)</span>  </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setAttribute</span><span class="params">(String name, Object value)</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">removeAttribute</span><span class="params">(String name)</span></span></span><br></pre></td></tr></table></figure></li></ol><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>Session的实现是依赖于Cookie的。</p><h4 id="细节"><a href="#细节" class="headerlink" title="细节"></a>细节</h4><ol><li><p>当客户端关闭后，服务器不关闭，两次获取Session是否为同一个？</p><ul><li><p>默认情况下。不是。</p></li><li><p>如果需要相同，则可以创建Cookie,键为JSESSIONID，设置最大存活时间，让cookie持久化保存。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Cookie c = <span class="keyword">new</span> Cookie(<span class="string">"JSESSIONID"</span>,session.getId());</span><br><span class="line">    c.setMaxAge(<span class="number">60</span>*<span class="number">60</span>);</span><br><span class="line">    response.addCookie(c);</span><br></pre></td></tr></table></figure></li></ul></li><li><p>客户端不关闭，服务器关闭后，两次获取的Session是同一个吗？</p><ul><li>不是同一个，但是要确保数据不丢失。tomcat自动完成以下工作<ul><li>Session的钝化：<ul><li>在服务器正常关闭之前，将Session对象系列化到硬盘上</li></ul></li><li>Session的活化：<ul><li>在服务器启动后，将Session文件转化为内存中的Session对象即可。</li></ul></li></ul></li></ul></li><li><p>Session什么时候被销毁？</p><ol><li><p>服务器关闭</p></li><li><p>Session对象调用invalidate() 。</p></li><li><p>Session默认失效时间 30分钟</p><p> 选择性配置修改    </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">session-config</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">session-timeout</span>&gt;</span>30<span class="tag">&lt;/<span class="name">session-timeout</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">session-config</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol></li></ol><h4 id="Session的特点"><a href="#Session的特点" class="headerlink" title="Session的特点"></a>Session的特点</h4><ol><li>session用于存储一次会话的多次请求的数据，存在服务器端<ol start="2"><li>session可以存储任意类型，任意大小的数据</li><li>session与Cookie的区别：<ul><li>session存储数据在服务器端，Cookie在客户端</li><li>session没有数据大小限制，Cookie有</li><li>session数据安全，Cookie相对于不安全</li></ul></li></ol></li></ol><p><strong>感谢</strong></p><blockquote><p>黑马程序员</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java--JSP简介</title>
      <link href="/2020/06/26/Java--JSP%E7%AE%80%E4%BB%8B/"/>
      <url>/2020/06/26/Java--JSP%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="Java–JSP简介"><a href="#Java–JSP简介" class="headerlink" title="Java–JSP简介"></a>Java–JSP简介</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p><strong>JSP</strong>（全称<strong>J</strong>ava<strong>S</strong>erver <strong>P</strong>ages）是由Su 公司主导创建的一种动态网页技术标准。JSP部署于网络服务器上，可以响应客户端发送的请求，并根据请求内容动态地生成HTML、XML或其他格式文档的Web网页，然后返回给请求者。JSP技术以Java语言作为脚本语言，为用户的HTTP请求提供服务，并能与服务器上的其它Java程序共同处理复杂的业务需求。</p><p>可以理解为：一个特殊的页面，其中既可以指定定义html标签，又可以定义java代码</p><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>JSP本质上就是一个Servlet</p><h4 id="JSP的脚本"><a href="#JSP的脚本" class="headerlink" title="JSP的脚本"></a>JSP的脚本</h4><p>JSP定义Java代码的方式</p><ol><li>&lt;%  代码 %&gt;：定义的java代码，在service方法中。service方法中可以定义什么，该脚本中就可以定义什么。</li><li>&lt;%! 代码 %&gt;：定义的java代码，在jsp转换后的java类的成员位置。</li><li>&lt;%= 代码 %&gt;：定义的java代码，会输出到页面上。输出语句中可以定义什么，该脚本中就可以定义什么。</li></ol><h4 id="JSP的内置对象"><a href="#JSP的内置对象" class="headerlink" title="JSP的内置对象"></a>JSP的内置对象</h4><ul><li>在jsp页面中不需要获取和创建，可以直接使用的对象<ul><li>out：JSPWriter，用来写入响应流的数据</li><li>page：servlet自身</li><li>pageContext：一个PageContext实例包括和整个页面相联系的数据，一个给定的HTML页面可以在多个JSP之间传递。</li><li>request：HTTP request（请求）对象</li><li>response：HTTP response（响应）对象</li><li>session：HTTP session（服务端会话）对象</li></ul></li></ul><h4 id="JSP动作"><a href="#JSP动作" class="headerlink" title="JSP动作"></a>JSP动作</h4><p>JSP动作是一系列可以调用内建于网络服务器中的功能的XML标签。JSP提供了以下动作：</p><table><thead><tr><th><strong>jsp:include</strong></th><th>和子过程类似，JAVA SERVLET暂时接管对其它指定的JSP页的请求和响应。当处理完该JSP页后就马上把控制权交还当前JSP页。这样JSP代码就可以在多个JSP页中共享而不用复制。</th></tr></thead><tbody><tr><td><strong>jsp:param</strong></td><td>可以在jsp:include, jsp:forward或jsp:params块之间使用。指定一个将加入请求的当前参数组中的参数。</td></tr><tr><td><strong>jsp:forward</strong></td><td>用于处理对另一个JSP或SERVLET的请求和响应。控制权永远不会交还给当前JSP页。</td></tr><tr><td><strong>jsp:plugin</strong></td><td>Netscape Navigator使用不同的标签以嵌入一个applet。这个动作产生为嵌入一个APPLET所需要的指定浏览器标签。</td></tr><tr><td><strong>jsp:fallback</strong></td><td>如果浏览器不支持APPLETS则会显示的内容。</td></tr><tr><td><strong>jsp:getProperty</strong></td><td>从指定的JavaBean中获取一个属性值。</td></tr><tr><td><strong>jsp:setProperty</strong></td><td>在指定的JavaBean中设置一个属性值。</td></tr><tr><td><strong>jsp:useBean</strong></td><td>创建或者复用一个JavaBean变量到JSP页。</td></tr></tbody></table><h4 id="为什么使用JSP"><a href="#为什么使用JSP" class="headerlink" title="为什么使用JSP"></a>为什么使用JSP</h4><p>JSP程序与CGI程序有着相似的功能，但和CGI程序相比，JSP程序有如下优势：</p><ul><li>性能更加优越，因为JSP可以直接在HTML网页中动态嵌入元素而不需要单独引用CGI文件。</li><li>服务器调用的是已经编译好的JSP文件，而不像CGI/Perl那样必须先载入解释器和目标脚本。</li><li>JSP 基于Java Servlet API，因此，JSP拥有各种强大的企业级Java API，包括JDBC，JNDI，EJB，JAXP等等。</li><li>JSP页面可以与处理业务逻辑的 Servlet 一起使用，这种模式被Java servlet 模板引擎所支持。</li></ul><p>最后，JSP是Java EE不可或缺的一部分，是一个完整的企业级应用平台。这意味着JSP可以用最简单的方式来实现最复杂的应用。</p><p><strong>感谢</strong></p><blockquote><p>百度百科</p><p>菜鸟教程</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Cookie--记住上一次访问时间案例（Java）</title>
      <link href="/2020/06/26/Cookie--%E8%AE%B0%E4%BD%8F%E4%B8%8A%E4%B8%80%E6%AC%A1%E8%AE%BF%E9%97%AE%E6%97%B6%E9%97%B4%E6%A1%88%E4%BE%8B%EF%BC%88Java%EF%BC%89/"/>
      <url>/2020/06/26/Cookie--%E8%AE%B0%E4%BD%8F%E4%B8%8A%E4%B8%80%E6%AC%A1%E8%AE%BF%E9%97%AE%E6%97%B6%E9%97%B4%E6%A1%88%E4%BE%8B%EF%BC%88Java%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="Cookie–记住上一次访问时间案例（Java）"><a href="#Cookie–记住上一次访问时间案例（Java）" class="headerlink" title="Cookie–记住上一次访问时间案例（Java）"></a>Cookie–记住上一次访问时间案例（Java）</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h4><ol><li>访问一个Servlet，如果是第一次访问，则提示：您好，欢迎您首次访问。</li><li>如果不是第一次访问，则提示：欢迎回来，您上次访问时间为:显示时间字符串</li></ol><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><ol><li>可以采用Cookie来完成</li><li>在服务器中的Servlet判断是否有一个名为lastTime的cookie<ol><li>有：不是第一次访问<ol><li>响应数据：欢迎回来，您上次访问时间为:2020年06月26日 10:52:29</li><li>写回Cookie：lastTime=2020年06月26日 10:52:29</li></ol></li><li>没有：是第一次访问<ol><li>响应数据：您好，欢迎您首次访问</li><li>写回Cookie：lastTime=2020年06月26日 10:52:29</li></ol></li></ol></li></ol><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.cookie;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.Cookie;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.URLDecoder;</span><br><span class="line"><span class="keyword">import</span> java.net.URLEncoder;</span><br><span class="line"><span class="keyword">import</span> java.text.SimpleDateFormat;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/cookieTest"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CookieTest</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//设置响应的编码</span></span><br><span class="line">        resp.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取所有的cookie</span></span><br><span class="line">        Cookie[] cookies = req.getCookies();</span><br><span class="line">        <span class="keyword">if</span> (cookies != <span class="keyword">null</span> &amp;&amp; cookies.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (Cookie cookie : cookies) &#123;</span><br><span class="line">                String name = cookie.getName();</span><br><span class="line">                <span class="comment">//判断是否第一次登录</span></span><br><span class="line">                <span class="keyword">if</span> (<span class="string">"lastTime"</span>.equals(name)) &#123;</span><br><span class="line">                    <span class="comment">//获取当前时间，重新发送cookie</span></span><br><span class="line">                    Date date = <span class="keyword">new</span> Date();</span><br><span class="line">                    SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy年MM月dd日 HH:mm:ss"</span>);</span><br><span class="line">                    String str_date = sdf.format(date);</span><br><span class="line">                    <span class="comment">//编码</span></span><br><span class="line">                    str_date = URLEncoder.encode(str_date, <span class="string">"utf-8"</span>);</span><br><span class="line">                    cookie.setValue(str_date);</span><br><span class="line">                    <span class="comment">//设置存活时间，一个月</span></span><br><span class="line">                    cookie.setMaxAge(<span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">30</span>);</span><br><span class="line">                    resp.addCookie(cookie);</span><br><span class="line"></span><br><span class="line">                    <span class="comment">//响应数据</span></span><br><span class="line">                    String value = cookie.getValue();</span><br><span class="line">                    <span class="comment">//解码</span></span><br><span class="line">                    value = URLDecoder.decode(value, <span class="string">"utf-8"</span>);</span><br><span class="line">                    resp.getWriter().write(<span class="string">"&lt;h1&gt;欢迎回来，您上次的登录时间为："</span> + value + <span class="string">"&lt;/h1&gt;"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (cookies == <span class="keyword">null</span> || cookies.length == <span class="number">0</span> || flag == <span class="keyword">false</span>) &#123;</span><br><span class="line">            <span class="comment">//获取当前时间，重新发送cookie</span></span><br><span class="line">            Date date = <span class="keyword">new</span> Date();</span><br><span class="line">            SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy年MM月dd日 HH:mm:ss"</span>);</span><br><span class="line">            String str_date = sdf.format(date);</span><br><span class="line">            <span class="comment">//编码</span></span><br><span class="line">            str_date = URLEncoder.encode(str_date, <span class="string">"utf-8"</span>);</span><br><span class="line">            Cookie cookie = <span class="keyword">new</span> Cookie(<span class="string">"lastTime"</span>, str_date);</span><br><span class="line">            <span class="comment">//设置存活时间，一个月</span></span><br><span class="line">            cookie.setMaxAge(<span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span> * <span class="number">30</span>);</span><br><span class="line">            resp.addCookie(cookie);</span><br><span class="line"></span><br><span class="line">            resp.getWriter().write(<span class="string">"&lt;h1&gt;欢迎首次访问&lt;/h1&gt;"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>第一次访问</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200626104320981.png" alt="image-20200626104320981"></p><p>再次访问</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200626105311004.png" alt="image-20200626105311004"></p><p><strong>感谢</strong></p><blockquote><p>黑马程序员</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>客户端会话技术--Cookie</title>
      <link href="/2020/06/26/%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BC%9A%E8%AF%9D%E6%8A%80%E6%9C%AF--Cookie/"/>
      <url>/2020/06/26/%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%BC%9A%E8%AF%9D%E6%8A%80%E6%9C%AF--Cookie/</url>
      
        <content type="html"><![CDATA[<h2 id="客户端会话技术–Cookie"><a href="#客户端会话技术–Cookie" class="headerlink" title="客户端会话技术–Cookie"></a>客户端会话技术–Cookie</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>客户端会话技术，将数据保存到客户端</p><h4 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h4><ol><li>创建Cookie对象，绑定数据<ul><li>new Cookie(String name, String value) </li></ul></li><li>发送Cookie对象<ul><li>response.addCookie(Cookie cookie) </li></ul></li><li>获取Cookie，拿到数据<ul><li>Cookie[]  request.getCookies()  </li></ul></li></ol><h4 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h4><p>基于响应头set-cookie和请求头cookie实现</p><h4 id="cookie的细节处理"><a href="#cookie的细节处理" class="headerlink" title="cookie的细节处理"></a>cookie的细节处理</h4><ol><li><p>一次可不可以发送多个cookie?</p><ul><li>可以</li><li>可以创建多个Cookie对象，使用response调用多次addCookie方法发送cookie即可。</li></ul></li><li><p>cookie在浏览器中保存多长时间？</p><ol><li>默认情况下，当浏览器关闭后，Cookie数据被销毁</li><li>持久化存储：<ul><li>setMaxAge(int seconds)<ol><li>正数：将Cookie数据写到硬盘的文件中。持久化存储。并指定cookie存活时间，时间到后，cookie文件自动失效</li><li>负数：默认值</li><li>零：删除cookie信息</li></ol></li></ul></li></ol></li><li><p>cookie能不能存中文？</p><ul><li>在tomcat 8 之前 cookie中不能直接存储中文数据。<ul><li>需要将中文数据转码—一般采用URL编码(%E3)</li></ul></li><li>在tomcat 8 之后，cookie支持中文数据。特殊字符还是不支持，建议使用URL编码存储，URL解码解析</li></ul></li><li><p>cookie共享问题？</p><ol><li><p>假设在一个tomcat服务器中，部署了多个web项目，那么在这些web项目中cookie能不能共享？</p><ul><li>默认情况下cookie不能共享</li><li>setPath(String path):设置cookie的获取范围。默认情况下，设置当前的虚拟目录</li><li>如果要共享，则可以将path设置为”/“</li></ul></li><li><p>不同的tomcat服务器间cookie共享问题？</p><ul><li>setDomain(String path):如果设置一级域名相同，那么多个服务器之间cookie可以共享</li><li>setDomain(“.baidu.com”),那么tieba.baidu.com和news.baidu.com中cookie可以共享</li></ul></li></ol></li></ol><h4 id="Cookie的特点和作用"><a href="#Cookie的特点和作用" class="headerlink" title="Cookie的特点和作用"></a>Cookie的特点和作用</h4><ol><li>cookie存储数据在客户端浏览器</li><li>浏览器对于单个cookie 的大小有限制(4kb) 以及 对同一个域名下的总cookie数量也有限制(20个)</li></ol><ul><li>作用：<ol><li>cookie一般用于存出少量的不太敏感的数据</li><li>在不登录的情况下，完成服务器对客户端的身份识别</li></ol></li></ul><p><strong>感谢</strong></p><blockquote><p>黑马程序员</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java--ServletContext对象</title>
      <link href="/2020/06/25/Java--ServletContext%E5%AF%B9%E8%B1%A1/"/>
      <url>/2020/06/25/Java--ServletContext%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<h2 id="Java–ServletContext对象"><a href="#Java–ServletContext对象" class="headerlink" title="Java–ServletContext对象"></a>Java–ServletContext对象</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>代表整个web应用，可以和程序的容器(服务器)来通信</p><h4 id="获取"><a href="#获取" class="headerlink" title="获取"></a>获取</h4><ol><li><p>通过request对象获取</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">request.getServletContext();</span><br></pre></td></tr></table></figure></li><li><p>通过HttpServlet获取</p> <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">this</span>.getServletContext();</span><br></pre></td></tr></table></figure></li></ol><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><ol><li>获取MIME类型：<ul><li>MIME类型:</li></ul></li></ol><p>在互联网通信过程中定义的一种文件数据类型</p><pre><code>    * 格式： 大类型/小类型   text/html        image/jpeg* 获取：  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">String <span class="title">getMimeType</span><span class="params">(String file)</span></span></span><br></pre></td></tr></table></figure></code></pre><ol start="2"><li><p>域对象：共享数据</p><p>ServletContext对象范围：所有用户所有请求的数据</p><p><strong>常用方法</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setAttribute(String name,Object value)</span><br><span class="line">getAttribute(String name)</span><br><span class="line">removeAttribute(String name)</span><br></pre></td></tr></table></figure></li><li><p>获取文件的真实(服务器)路径</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">String <span class="title">getRealPath</span><span class="params">(String path)</span>  </span></span><br><span class="line"><span class="function">String b </span>= context.getRealPath(<span class="string">"/b.txt"</span>);<span class="comment">//web目录下资源访问</span></span><br><span class="line">System.out.println(b);</span><br><span class="line"></span><br><span class="line">String c = context.getRealPath(<span class="string">"/WEB-INF/c.txt"</span>);<span class="comment">//WEB-INF目录下的资源访问</span></span><br><span class="line">System.out.println(c);</span><br><span class="line"></span><br><span class="line">String a = context.getRealPath(<span class="string">"/WEB-INF/classes/a.txt"</span>);<span class="comment">//src目录下的资源访问</span></span><br><span class="line">System.out.println(a);</span><br></pre></td></tr></table></figure><p><strong>感谢</strong></p><blockquote><p>黑马程序员</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>动态生成验证码案例（Java）</title>
      <link href="/2020/06/25/%E5%8A%A8%E6%80%81%E7%94%9F%E6%88%90%E9%AA%8C%E8%AF%81%E7%A0%81%E6%A1%88%E4%BE%8B%EF%BC%88Java%EF%BC%89/"/>
      <url>/2020/06/25/%E5%8A%A8%E6%80%81%E7%94%9F%E6%88%90%E9%AA%8C%E8%AF%81%E7%A0%81%E6%A1%88%E4%BE%8B%EF%BC%88Java%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="动态生成验证码案例（Java）"><a href="#动态生成验证码案例（Java）" class="headerlink" title="动态生成验证码案例（Java）"></a>动态生成验证码案例（Java）</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="servlet代码"><a href="#servlet代码" class="headerlink" title="servlet代码"></a>servlet代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.awt.*;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/checkCode"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CheckCode</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> width = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">int</span> height = <span class="number">50</span>;</span><br><span class="line">        <span class="comment">//创建图片对象</span></span><br><span class="line">        BufferedImage image = <span class="keyword">new</span> BufferedImage(width, height, BufferedImage.TYPE_INT_BGR);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//美化</span></span><br><span class="line">        Graphics g = image.getGraphics();</span><br><span class="line">        <span class="comment">//背景</span></span><br><span class="line">        g.setColor(Color.PINK);</span><br><span class="line">        g.fillRect(<span class="number">0</span>, <span class="number">0</span>, width, height);</span><br><span class="line">        <span class="comment">//边框</span></span><br><span class="line">        g.setColor(Color.BLUE);</span><br><span class="line">        g.drawRect(<span class="number">0</span>, <span class="number">0</span>, width - <span class="number">1</span>, height - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        String str = <span class="string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789"</span>;</span><br><span class="line">        Random ran = <span class="keyword">new</span> Random();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">4</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> index = ran.nextInt(str.length());</span><br><span class="line">            <span class="keyword">char</span> ch = str.charAt(index);</span><br><span class="line">            g.drawString(ch+<span class="string">""</span>,width/<span class="number">5</span>*i,height/<span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//干扰线</span></span><br><span class="line">        g.setColor(Color.GREEN);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> x1 = ran.nextInt(width);</span><br><span class="line">            <span class="keyword">int</span> x2= ran.nextInt(width);</span><br><span class="line">            <span class="keyword">int</span> y1 = ran.nextInt(height);</span><br><span class="line">            <span class="keyword">int</span> y2 = ran.nextInt(height);</span><br><span class="line">            g.drawLine(x1,y1,x2,y2);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="comment">//输出图片到浏览器</span></span><br><span class="line">        ImageIO.write(image, <span class="string">"jpg"</span>, resp.getOutputStream());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="html"><a href="#html" class="headerlink" title="html"></a>html</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="javascript">        <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">            <span class="keyword">var</span> img = <span class="built_in">document</span>.getElementById(<span class="string">"checkCode"</span>);</span></span><br><span class="line"><span class="actionscript">            img.onclick = <span class="function"><span class="keyword">function</span> <span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> data = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime();</span></span><br><span class="line"><span class="actionscript">                img.src = <span class="string">"/tomcat_test_war_exploded/checkCode?"</span> + data;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">id</span>=<span class="string">"checkCode"</span> <span class="attr">src</span>=<span class="string">"/tomcat_test_war_exploded/checkCode"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h4><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200625214010650.png" alt="image-20200625214010650"></p><p>点击图片可以切换验证码</p><p><strong>感谢</strong></p><blockquote><p>黑马程序员</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HTTP–Response详解</title>
      <link href="/2020/06/25/HTTP%E2%80%93Response%E8%AF%A6%E8%A7%A3/"/>
      <url>/2020/06/25/HTTP%E2%80%93Response%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="HTTP–Response详解"><a href="#HTTP–Response详解" class="headerlink" title="HTTP–Response详解"></a>HTTP–Response详解</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="响应消息数据格式"><a href="#响应消息数据格式" class="headerlink" title="响应消息数据格式"></a>响应消息数据格式</h4><h5 id="响应行"><a href="#响应行" class="headerlink" title="响应行"></a>响应行</h5><ol><li>组成：协议/版本 响应状态码 状态码描述</li><li>响应状态码：服务器告诉客户端浏览器本次请求和响应的一个状态<ol><li>态码都是3位数字 </li><li>分类：<ol><li>1xx：服务器就收客户端消息，但没有接受完成，等待一段时间后，发送1xx多状态码</li><li>2xx：成功。代表：200</li><li>3xx：重定向。代表：302(重定向)，304(访问缓存)</li><li>4xx：客户端错误<ul><li>404（请求路径没有对应的资源） </li><li>405：请求方式没有对应的doXxx方法</li></ul></li><li>5xx：服务器端错误。代表：500(服务器内部出现异常)</li></ol></li></ol></li></ol><h5 id="响应头"><a href="#响应头" class="headerlink" title="响应头"></a>响应头</h5><ol><li>格式：头名称： 值</li><li>常见的响应头：<ol><li>Content-Type：服务器告诉客户端本次响应体数据格式以及编码格式</li><li>Content-disposition：服务器告诉客户端以什么格式打开响应体数据<ul><li>in-line:默认值,在当前页面内打开</li><li>attachment;filename=xxx：以附件形式打开响应体。文件下载</li></ul></li></ol></li></ol><h5 id="响应空行"><a href="#响应空行" class="headerlink" title="响应空行"></a>响应空行</h5><h5 id="响应体-传输的数据"><a href="#响应体-传输的数据" class="headerlink" title="响应体:传输的数据"></a>响应体:传输的数据</h5><p>响应字符串格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">HTTP&#x2F;1.1 200 OK</span><br><span class="line">Content-Type: text&#x2F;html;charset&#x3D;UTF-8</span><br><span class="line">Content-Length: 101</span><br><span class="line">Date: Wed, 06 Jun 2018 07:08:42 GMT</span><br><span class="line"></span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;$Title$&lt;&#x2F;title&gt;</span><br><span class="line">  &lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">  &lt;body&gt;</span><br><span class="line">  hello , response</span><br><span class="line">  &lt;&#x2F;body&gt;</span><br><span class="line">&lt;&#x2F;html&gt;</span><br></pre></td></tr></table></figure><h4 id="Response对象"><a href="#Response对象" class="headerlink" title="Response对象"></a>Response对象</h4><h5 id="设置响应消息"><a href="#设置响应消息" class="headerlink" title="设置响应消息"></a>设置响应消息</h5><ol><li><p>设置响应行</p><ol><li>格式：HTTP/1.1 200 ok</li><li>设置状态码：setStatus(int sc) </li></ol></li><li><p>设置响应头：setHeader(String name, String value) </p></li><li><p>设置响应体：</p><ul><li><p>使用步骤：</p><ol><li><p>获取输出流</p><ul><li><p>字符输出流：PrintWriter getWriter()</p></li><li><p>字节输出流：ServletOutputStream getOutputStream()</p></li></ul></li><li><p>使用输出流，将数据输出到客户端浏览器</p></li></ol></li></ul></li></ol><p><strong>感谢</strong></p><blockquote><p>黑马程序员</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>完整逆波兰计算器（Java）</title>
      <link href="/2020/06/25/%E5%AE%8C%E6%95%B4%E9%80%86%E6%B3%A2%E5%85%B0%E8%AE%A1%E7%AE%97%E5%99%A8%EF%BC%88Java%EF%BC%89/"/>
      <url>/2020/06/25/%E5%AE%8C%E6%95%B4%E9%80%86%E6%B3%A2%E5%85%B0%E8%AE%A1%E7%AE%97%E5%99%A8%EF%BC%88Java%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="完整逆波兰计算器（Java）"><a href="#完整逆波兰计算器（Java）" class="headerlink" title="完整逆波兰计算器（Java）"></a>完整逆波兰计算器（Java）</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h4><p>支持 + - * / ( )<br>多位数，支持小数,<br>兼容处理, 过滤任何空白字符，包括空格、制表符、换页符</p><h4 id="基本思路"><a href="#基本思路" class="headerlink" title="基本思路"></a>基本思路</h4><p>中缀表达式转后缀表达式</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> stack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReversePolishMultiCalc</span> </span>&#123;</span><br><span class="line">    <span class="comment">//匹配运算符</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> String SYMBOL = <span class="string">"\\+|-|\\*|/|\\(|\\)"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> String LEFT = <span class="string">"("</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> String RIGHT = <span class="string">")"</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> String ADD = <span class="string">"+"</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> String MINUS = <span class="string">"-"</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> String TIMES = <span class="string">"*"</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> String DIVISION = <span class="string">"/"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//优先级</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> LEVEL_01 = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> LEVEL_02 = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> LEVEL_HIGH = Integer.MAX_VALUE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> Stack&lt;String&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">    <span class="keyword">static</span> List&lt;String&gt; data = Collections.synchronizedList(<span class="keyword">new</span> ArrayList&lt;String&gt;());</span><br><span class="line"></span><br><span class="line">    <span class="comment">//去除所有空白符号</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">replaceAllBlank</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> s.replaceAll(<span class="string">"\\s+"</span>, <span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断是否为数字</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isNumber</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        Pattern pattern = Pattern.compile(<span class="string">"^[-\\+]?[.\\d]*$"</span>);</span><br><span class="line">        <span class="keyword">return</span> pattern.matcher(s).matches();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//判断是否是运算符</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isSymbol</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> s.matches(SYMBOL);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//匹配运算优先级</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">calcLevel</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"+"</span>.equals(s) || <span class="string">"-"</span>.equals(s)) &#123;</span><br><span class="line">            <span class="keyword">return</span> LEVEL_01;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">"*"</span>.equals(s) || <span class="string">"/"</span>.equals(s)) &#123;</span><br><span class="line">            <span class="keyword">return</span> LEVEL_02;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> LEVEL_HIGH;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//匹配</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title">doMatch</span><span class="params">(String s)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (s == <span class="keyword">null</span> || <span class="string">""</span>.equals(s.trim())) <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"data is empty"</span>);</span><br><span class="line">        <span class="keyword">if</span> (!isNumber(s.charAt(<span class="number">0</span>) + <span class="string">""</span>)) <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"data illeagle,start not with a number"</span>);</span><br><span class="line">        s = replaceAllBlank(s);</span><br><span class="line"></span><br><span class="line">        String each;</span><br><span class="line">        <span class="keyword">int</span> start = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (isSymbol(s.charAt(i) + <span class="string">""</span>)) &#123;</span><br><span class="line">                each = s.charAt(i) + <span class="string">""</span>;</span><br><span class="line">                <span class="keyword">if</span> (stack.isEmpty() || LEFT.equals(each) || ((calcLevel(each) &gt; calcLevel(stack.peek())) &amp;&amp; calcLevel(each) &lt; LEVEL_HIGH)) &#123;</span><br><span class="line">                    stack.push(each);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!stack.isEmpty() &amp;&amp; calcLevel(each) &lt;= calcLevel(stack.peek())) &#123;</span><br><span class="line">                    <span class="keyword">while</span> (!stack.isEmpty() &amp;&amp; calcLevel(each) &lt;= calcLevel(stack.peek())) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (calcLevel(stack.peek()) == LEVEL_HIGH) &#123;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        data.add(stack.pop());</span><br><span class="line">                    &#125;</span><br><span class="line">                    stack.push(each);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (RIGHT.equals(each)) &#123;</span><br><span class="line">                    <span class="keyword">while</span> (!stack.isEmpty() &amp;&amp; LEVEL_HIGH &gt;= calcLevel(stack.peek())) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (LEVEL_HIGH == calcLevel(stack.peek())) &#123;</span><br><span class="line">                            stack.pop();</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                        data.add(stack.pop());</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                start = i;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (i == s.length() - <span class="number">1</span> || isSymbol(s.charAt(i + <span class="number">1</span>) + <span class="string">""</span>)) &#123;</span><br><span class="line">                each = start == <span class="number">0</span> ? s.substring(start, i + <span class="number">1</span>) : s.substring(start + <span class="number">1</span>, i + <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">if</span> (isNumber(each)) &#123;</span><br><span class="line">                    data.add(each);</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"data not match number"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        Collections.reverse(stack);</span><br><span class="line">        data.addAll(<span class="keyword">new</span> ArrayList&lt;&gt;(stack));</span><br><span class="line">        System.out.println(data);</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//计算结果</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Double <span class="title">doCalc</span><span class="params">(List&lt;String&gt; list)</span></span>&#123;</span><br><span class="line">        Double d = <span class="number">0</span>d;</span><br><span class="line">        <span class="keyword">if</span>(list == <span class="keyword">null</span> || list.isEmpty())&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(list.size() == <span class="number">1</span>)&#123;</span><br><span class="line">            System.out.println(list);</span><br><span class="line">            d = Double.valueOf(list.get(<span class="number">0</span>));</span><br><span class="line">            <span class="keyword">return</span> d;</span><br><span class="line">        &#125;</span><br><span class="line">        ArrayList&lt;String&gt; list1 = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            list1.add(list.get(i));</span><br><span class="line">            <span class="keyword">if</span>(isSymbol(list.get(i)))&#123;</span><br><span class="line">                Double d1 = doTheMath(list.get(i-<span class="number">2</span>),list.get(i-<span class="number">1</span>),list.get(i));</span><br><span class="line">                list1.remove(i);</span><br><span class="line">                list1.remove(i-<span class="number">1</span>);</span><br><span class="line">                list1.set(i-<span class="number">2</span>,d1+<span class="string">""</span>);</span><br><span class="line">                list1.addAll(list.subList(i+<span class="number">1</span>,list.size()));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        doCalc(list1);</span><br><span class="line">        <span class="keyword">return</span> d;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//运算</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Double <span class="title">doTheMath</span><span class="params">(String s1,String s2,String symbol)</span></span>&#123;</span><br><span class="line">        Double result;</span><br><span class="line">        <span class="keyword">switch</span> (symbol)&#123;</span><br><span class="line">            <span class="keyword">case</span> ADD:</span><br><span class="line">                result = Double.valueOf(s1) + Double.valueOf(s2);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> MINUS:</span><br><span class="line">                result = Double.valueOf(s1) - Double.valueOf(s2);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> TIMES:</span><br><span class="line">                result = Double.valueOf(s1) * Double.valueOf(s2);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> DIVISION:</span><br><span class="line">                result = Double.valueOf(s1) / Double.valueOf(s2);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                result = <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        String math = <span class="string">"12.8 + (2-3.55)*4+10/5.0"</span>;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            doCalc(doMatch(math));</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200625174138211.png" alt="image-20200625174138211"></p><p><strong>感谢</strong></p><blockquote><p>尚硅谷</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>中缀表达式转换为后缀表达式（Java）</title>
      <link href="/2020/06/25/%E4%B8%AD%E7%BC%80%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%90%8E%E7%BC%80%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%88Java%EF%BC%89/"/>
      <url>/2020/06/25/%E4%B8%AD%E7%BC%80%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%BD%AC%E6%8D%A2%E4%B8%BA%E5%90%8E%E7%BC%80%E8%A1%A8%E8%BE%BE%E5%BC%8F%EF%BC%88Java%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="中缀表达式转换为后缀表达式（Java）"><a href="#中缀表达式转换为后缀表达式（Java）" class="headerlink" title="中缀表达式转换为后缀表达式（Java）"></a>中缀表达式转换为后缀表达式（Java）</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h4><ol><li><p>初始化两个栈:运算符栈 s1 和储存中间结果的栈 s2</p></li><li><p>从左至右扫描中缀表达式</p></li><li><p>遇到操作数时，将其压 s2</p></li><li><p>遇到运算符时，比较其与 s1 栈顶运算符的优先级:</p><ul><li>如果 s1 为空，或栈顶运算符为左括号“(”，则直接将此运算符入栈</li><li>否则，若优先级比栈顶运算符的高，也将运算符压入 s1;</li><li>否则，将 s1 栈顶的运算符弹出并压入到 s2 中，再次转到(4-1)与 s1 中新的栈顶运算符相比较;</li></ul></li><li><p>遇到括号时:</p><ul><li>如果是左括号“(”，则直接压入 s1</li><li>如果是右括号“)”，则依次弹出 s1 栈顶的运算符，并压入 s2，直到遇到左括号为止，此时将这一对括号丢弃</li></ul></li><li><p>重复步骤 2 至 5，直到表达式的最右边</p></li><li><p>将 s1 中剩余的运算符依次弹出并压入 s2</p></li><li><p>依次弹出 s2 中的元素并输出，结果的逆序即为中缀表达式对应的后缀表达式</p></li></ol><h4 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h4><p>将中缀表达式“1+((2+3)×4)-5”转换为后缀表达式的过程如下</p><p>因此结果为 :”123+4 × +5 –”</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200622181152378.png" alt="image-20200622181152378"></p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> stack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> guizimo</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/4/6 12:25 下午</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PolandNotation</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//表达式</span></span><br><span class="line">        String suffixExpression = <span class="string">"1+((2+3)*4)-5"</span>;</span><br><span class="line">        <span class="comment">//中缀表达式对应的List</span></span><br><span class="line">        System.out.println(<span class="string">"中缀表达式对应的List"</span>);</span><br><span class="line">        List&lt;String&gt; infixExpressionList = toInfixExpressionList(suffixExpression);</span><br><span class="line">        System.out.println(infixExpressionList);</span><br><span class="line">        <span class="comment">//后缀表达式对应的List</span></span><br><span class="line">        System.out.println(<span class="string">"后缀表达式对应的List"</span>);</span><br><span class="line">        List&lt;String&gt; suffixExpressionList = parseSuffixExpressionList(infixExpressionList);</span><br><span class="line">        System.out.println(suffixExpressionList);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//计算逆波兰表达式</span></span><br><span class="line">        System.out.printf(<span class="string">"suffixExpression=%d"</span>, calculate(suffixExpressionList));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title">parseSuffixExpressionList</span><span class="params">(List&lt;String&gt; ls)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//定义两个栈</span></span><br><span class="line">        Stack&lt;String&gt; s1 = <span class="keyword">new</span> Stack&lt;String&gt;();  <span class="comment">//符号栈</span></span><br><span class="line">        List&lt;String&gt; s2 = <span class="keyword">new</span> ArrayList&lt;String&gt;();  <span class="comment">//结果</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (String item : ls) &#123;</span><br><span class="line">            <span class="comment">//如果是一个数</span></span><br><span class="line">            <span class="keyword">if</span> (item.matches(<span class="string">"\\d+"</span>)) &#123;</span><br><span class="line">                s2.add(item);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (item.equals(<span class="string">"("</span>)) &#123;</span><br><span class="line">                s1.push(item);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (item.equals(<span class="string">")"</span>)) &#123;</span><br><span class="line">                <span class="keyword">while</span> (!s1.peek().equals(<span class="string">"("</span>)) &#123;</span><br><span class="line">                    s2.add(s1.pop());</span><br><span class="line">                &#125;</span><br><span class="line">                s1.pop();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">while</span> (s1.size() != <span class="number">0</span> &amp;&amp; Operation.getValue(s1.peek()) &gt;= Operation.getValue(item)) &#123;</span><br><span class="line">                    s2.add(s1.pop());</span><br><span class="line">                &#125;</span><br><span class="line">                s1.push(item);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (s1.size() != <span class="number">0</span>) &#123;</span><br><span class="line">            s2.add(s1.pop());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> s2;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//将中缀表达式转换成list</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title">toInfixExpressionList</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        List&lt;String&gt; ls = <span class="keyword">new</span> ArrayList&lt;String&gt;();</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        String str;  <span class="comment">//多位数</span></span><br><span class="line">        <span class="keyword">char</span> c;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="comment">//非数字</span></span><br><span class="line">            <span class="keyword">if</span> ((c = s.charAt(i)) &lt; <span class="number">48</span> || (c = s.charAt(i)) &gt; <span class="number">57</span>) &#123;</span><br><span class="line">                ls.add(<span class="string">""</span> + c);</span><br><span class="line">                i++;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123; <span class="comment">//数字，但是考虑到多位数</span></span><br><span class="line">                str = <span class="string">""</span>;</span><br><span class="line">                <span class="keyword">while</span> (i &lt; s.length() &amp;&amp; (c = s.charAt(i)) &gt;= <span class="number">48</span> &amp;&amp; (c = s.charAt(i)) &lt;= <span class="number">57</span>) &#123;</span><br><span class="line">                    str += c;</span><br><span class="line">                    i++;</span><br><span class="line">                &#125;</span><br><span class="line">                ls.add(str);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">while</span> (i &lt; s.length());</span><br><span class="line">        <span class="keyword">return</span> ls;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//完成对逆波兰表达式的计算</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">calculate</span><span class="params">(List&lt;String&gt; ls)</span> </span>&#123;</span><br><span class="line">        Stack&lt;String&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (String item : ls) &#123;</span><br><span class="line">            <span class="comment">//使用正则表达式</span></span><br><span class="line">            <span class="keyword">if</span> (item.matches(<span class="string">"\\d+"</span>)) &#123;  <span class="comment">//匹配多位数</span></span><br><span class="line">                <span class="comment">//入栈</span></span><br><span class="line">                stack.push(item);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">int</span> num2 = Integer.parseInt(stack.pop());</span><br><span class="line">                <span class="keyword">int</span> num1 = Integer.parseInt(stack.pop());</span><br><span class="line">                <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span> (item.equals(<span class="string">"+"</span>)) &#123;</span><br><span class="line">                    res = num1 + num2;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (item.equals(<span class="string">"-"</span>)) &#123;</span><br><span class="line">                    res = num1 - num2;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (item.equals(<span class="string">"*"</span>)) &#123;</span><br><span class="line">                    res = num1 * num2;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (item.equals(<span class="string">"/"</span>)) &#123;</span><br><span class="line">                    res = num1 / num2;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"运算符有问题"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//把结果入栈</span></span><br><span class="line">                stack.push(<span class="string">""</span> + res);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Integer.parseInt(stack.pop());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Operation</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> ADD = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> SUB = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> MUL = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> DIV = <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getValue</span><span class="params">(String operation)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">switch</span> (operation) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"+"</span>:</span><br><span class="line">                result = ADD;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"-"</span>:</span><br><span class="line">                result = SUB;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"*"</span>:</span><br><span class="line">                result = MUL;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">"/"</span>:</span><br><span class="line">                result = DIV;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">"不存在"</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>感谢</strong></p><blockquote><p>尚硅谷</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>递归--迷宫问题（Java）</title>
      <link href="/2020/06/25/%E9%80%92%E5%BD%92--%E8%BF%B7%E5%AE%AB%E9%97%AE%E9%A2%98%EF%BC%88Java%EF%BC%89/"/>
      <url>/2020/06/25/%E9%80%92%E5%BD%92--%E8%BF%B7%E5%AE%AB%E9%97%AE%E9%A2%98%EF%BC%88Java%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="递归–迷宫问题（Java）"><a href="#递归–迷宫问题（Java）" class="headerlink" title="递归–迷宫问题（Java）"></a>递归–迷宫问题（Java）</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="问题说明"><a href="#问题说明" class="headerlink" title="问题说明"></a>问题说明</h4><p>制定好小球的移动路线，让它在迷宫里面找到终点的位置</p><h4 id="问题思路"><a href="#问题思路" class="headerlink" title="问题思路"></a>问题思路</h4><ol><li>创建一个二维数组作为迷宫的地图</li><li>制定好小球的起点和终点位置</li><li>确定小球的运动规则，如下右上左</li><li>使用递归判断小球是否到达终点</li></ol><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> question;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Migong</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//创建一个地图</span></span><br><span class="line">        <span class="keyword">int</span>[][] map = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">8</span>][<span class="number">7</span>];</span><br><span class="line">        <span class="comment">//1表示墙，0表示可以移动，2代表已经走过，3代表失败</span></span><br><span class="line">        <span class="comment">//上下为墙</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">7</span>; i++) &#123;</span><br><span class="line">            map[<span class="number">0</span>][i] = <span class="number">1</span>;</span><br><span class="line">            map[<span class="number">7</span>][i] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//左右为墙</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">            map[i][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">            map[i][<span class="number">6</span>] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//设置障碍物</span></span><br><span class="line">        map[<span class="number">3</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        map[<span class="number">3</span>][<span class="number">2</span>] = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出地图</span></span><br><span class="line">        System.out.println(<span class="string">"地图"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">7</span>; j++) &#123;</span><br><span class="line">                System.out.print(map[i][j] + <span class="string">" "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//递归</span></span><br><span class="line">        setWay(map,<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//输出新的地图</span></span><br><span class="line">        System.out.println(<span class="string">"到达终点地图"</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">7</span>; j++) &#123;</span><br><span class="line">                System.out.print(map[i][j] + <span class="string">" "</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">setWay</span><span class="params">(<span class="keyword">int</span>[][] map,<span class="keyword">int</span> i,<span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(map[<span class="number">6</span>][<span class="number">5</span>] == <span class="number">2</span>)&#123;  <span class="comment">//到达终点</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(map[i][j] == <span class="number">0</span>)&#123;  <span class="comment">//继续</span></span><br><span class="line">                <span class="comment">//制定策略，下右上左</span></span><br><span class="line">                map[i][j] = <span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span>(setWay(map,i+<span class="number">1</span>,j))&#123; <span class="comment">//向下走</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(setWay(map,i,j+<span class="number">1</span>))&#123; <span class="comment">//向右走</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(setWay(map,i-<span class="number">1</span>,j))&#123; <span class="comment">//向上走</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> <span class="keyword">if</span>(setWay(map,i,j-<span class="number">1</span>))&#123; <span class="comment">//向左走</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">//走不通</span></span><br><span class="line">                    map[i][j] = <span class="number">3</span>;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200625160254154.png" alt="image-20200625160254154"></p><p><strong>感谢</strong></p><blockquote><p>尚硅谷</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>递归--八皇后问题（Java）</title>
      <link href="/2020/06/25/%E9%80%92%E5%BD%92--%E5%85%AB%E7%9A%87%E5%90%8E%E9%97%AE%E9%A2%98%EF%BC%88Java%EF%BC%89/"/>
      <url>/2020/06/25/%E9%80%92%E5%BD%92--%E5%85%AB%E7%9A%87%E5%90%8E%E9%97%AE%E9%A2%98%EF%BC%88Java%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="递归–八皇后问题（Java）"><a href="#递归–八皇后问题（Java）" class="headerlink" title="递归–八皇后问题（Java）"></a>递归–八皇后问题（Java）</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="问题介绍"><a href="#问题介绍" class="headerlink" title="问题介绍"></a>问题介绍</h4><p>八皇后问题，是一个古老而著名的问题，是回溯算法的典型案例。该问题是国际西洋棋棋手马克斯·贝瑟尔于1848年提出：在8×8格的国际象棋上摆放八个皇后，使其不能互相攻击，即：<strong>任意两个皇后都不能处于同一行、同一列或同一斜线上，问有多少种摆法</strong></p><h4 id="问题思路"><a href="#问题思路" class="headerlink" title="问题思路"></a>问题思路</h4><ol><li>第一个皇后先放第一行第一列</li><li>第二个皇后放在第二行第一列、然后判断是否OK， 如果不OK，继续放在第二列、第三列、依次把所有列都放完，找到一个合适</li><li>继续第三个皇后，还是第一列、第二列……直到第8个皇后也能放在一个不冲突的位置，算是找到了一个正确解</li><li>当得到一个正确解时，在栈回退到上一个栈时，就会开始回溯，即将第一个皇后，放到第一列的所有正确解，全部得到.</li><li>然后回头继续第一个皇后放第二列，后面继续循环执行 1,2,3,4的步骤</li></ol><h4 id="代码思路"><a href="#代码思路" class="headerlink" title="代码思路"></a>代码思路</h4><p>创建一个一维数组代替原本的二维数组，只针对列和斜线的判断</p><p>采用循环来判断在第n个皇后的不同列（i）是否冲突</p><p>使用递归来判断不同的皇后的情况</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> question;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Queen</span> </span>&#123;</span><br><span class="line">    <span class="comment">//定义最大的行</span></span><br><span class="line">    <span class="keyword">int</span> max = <span class="number">8</span>;</span><br><span class="line">    <span class="comment">//创建一维数组存储每行的列的位置</span></span><br><span class="line">    <span class="keyword">int</span>[] array = <span class="keyword">new</span> <span class="keyword">int</span>[max];</span><br><span class="line">    <span class="comment">//结果数</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">//检查是否冲突的次数</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> judgecount = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Queen queen = <span class="keyword">new</span> Queen();</span><br><span class="line">        queen.check(<span class="number">0</span>);</span><br><span class="line">        System.out.printf(<span class="string">"一共有%d总解法"</span>, count);</span><br><span class="line">        System.out.println();</span><br><span class="line">        System.out.printf(<span class="string">"一共有%d次判断冲突"</span>, judgecount);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//放置皇后</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (n == max) &#123;  <span class="comment">//已经放置好</span></span><br><span class="line">            <span class="comment">//打印函数</span></span><br><span class="line">            print();</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//依次放置皇后的列数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; max; i++) &#123;</span><br><span class="line">            <span class="comment">//把皇后放置到该行的第一列</span></span><br><span class="line">            array[n] = i;</span><br><span class="line">            <span class="comment">//判断当前皇后在i列时是否冲突</span></span><br><span class="line">            <span class="keyword">if</span> (judge(n)) &#123; <span class="comment">//不冲突</span></span><br><span class="line">                <span class="comment">//接着放n+1个皇后（递归）</span></span><br><span class="line">                check(n + <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line"><span class="comment">//判断是否冲突</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">judge</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        judgecount++;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="comment">//由于n代表行，所以不会出现在同一行的情况，判断是否在同一列，判断是否在同一斜线上</span></span><br><span class="line">            <span class="keyword">if</span> (array[i] == array[n] || Math.abs(n - i) == Math.abs(array[n] - array[i])) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//打印结果</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">print</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        count++;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">            System.out.print(array[i] + <span class="string">" "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="结果"><a href="#结果" class="headerlink" title="结果"></a>结果</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">0 4 7 5 2 6 1 3 </span><br><span class="line">0 5 7 2 6 3 1 4 </span><br><span class="line">0 6 3 5 7 1 4 2 </span><br><span class="line">0 6 4 7 1 3 5 2 </span><br><span class="line">1 3 5 7 2 0 6 4 </span><br><span class="line">1 4 6 0 2 7 5 3 </span><br><span class="line">1 4 6 3 0 7 5 2 </span><br><span class="line">1 5 0 6 3 7 2 4 </span><br><span class="line">1 5 7 2 0 3 6 4 </span><br><span class="line">1 6 2 5 7 4 0 3 </span><br><span class="line">1 6 4 7 0 3 5 2 </span><br><span class="line">1 7 5 0 2 4 6 3 </span><br><span class="line">2 0 6 4 7 1 3 5 </span><br><span class="line">2 4 1 7 0 6 3 5 </span><br><span class="line">2 4 1 7 5 3 6 0 </span><br><span class="line">2 4 6 0 3 1 7 5 </span><br><span class="line">2 4 7 3 0 6 1 5 </span><br><span class="line">2 5 1 4 7 0 6 3 </span><br><span class="line">2 5 1 6 0 3 7 4 </span><br><span class="line">2 5 1 6 4 0 7 3 </span><br><span class="line">2 5 3 0 7 4 6 1 </span><br><span class="line">2 5 3 1 7 4 6 0 </span><br><span class="line">2 5 7 0 3 6 4 1 </span><br><span class="line">2 5 7 0 4 6 1 3 </span><br><span class="line">2 5 7 1 3 0 6 4 </span><br><span class="line">2 6 1 7 4 0 3 5 </span><br><span class="line">2 6 1 7 5 3 0 4 </span><br><span class="line">2 7 3 6 0 5 1 4 </span><br><span class="line">3 0 4 7 1 6 2 5 </span><br><span class="line">3 0 4 7 5 2 6 1 </span><br><span class="line">3 1 4 7 5 0 2 6 </span><br><span class="line">3 1 6 2 5 7 0 4 </span><br><span class="line">3 1 6 2 5 7 4 0 </span><br><span class="line">3 1 6 4 0 7 5 2 </span><br><span class="line">3 1 7 4 6 0 2 5 </span><br><span class="line">3 1 7 5 0 2 4 6 </span><br><span class="line">3 5 0 4 1 7 2 6 </span><br><span class="line">3 5 7 1 6 0 2 4 </span><br><span class="line">3 5 7 2 0 6 4 1 </span><br><span class="line">3 6 0 7 4 1 5 2 </span><br><span class="line">3 6 2 7 1 4 0 5 </span><br><span class="line">3 6 4 1 5 0 2 7 </span><br><span class="line">3 6 4 2 0 5 7 1 </span><br><span class="line">3 7 0 2 5 1 6 4 </span><br><span class="line">3 7 0 4 6 1 5 2 </span><br><span class="line">3 7 4 2 0 6 1 5 </span><br><span class="line">4 0 3 5 7 1 6 2 </span><br><span class="line">4 0 7 3 1 6 2 5 </span><br><span class="line">4 0 7 5 2 6 1 3 </span><br><span class="line">4 1 3 5 7 2 0 6 </span><br><span class="line">4 1 3 6 2 7 5 0 </span><br><span class="line">4 1 5 0 6 3 7 2 </span><br><span class="line">4 1 7 0 3 6 2 5 </span><br><span class="line">4 2 0 5 7 1 3 6 </span><br><span class="line">4 2 0 6 1 7 5 3 </span><br><span class="line">4 2 7 3 6 0 5 1 </span><br><span class="line">4 6 0 2 7 5 3 1 </span><br><span class="line">4 6 0 3 1 7 5 2 </span><br><span class="line">4 6 1 3 7 0 2 5 </span><br><span class="line">4 6 1 5 2 0 3 7 </span><br><span class="line">4 6 1 5 2 0 7 3 </span><br><span class="line">4 6 3 0 2 7 5 1 </span><br><span class="line">4 7 3 0 2 5 1 6 </span><br><span class="line">4 7 3 0 6 1 5 2 </span><br><span class="line">5 0 4 1 7 2 6 3 </span><br><span class="line">5 1 6 0 2 4 7 3 </span><br><span class="line">5 1 6 0 3 7 4 2 </span><br><span class="line">5 2 0 6 4 7 1 3 </span><br><span class="line">5 2 0 7 3 1 6 4 </span><br><span class="line">5 2 0 7 4 1 3 6 </span><br><span class="line">5 2 4 6 0 3 1 7 </span><br><span class="line">5 2 4 7 0 3 1 6 </span><br><span class="line">5 2 6 1 3 7 0 4 </span><br><span class="line">5 2 6 1 7 4 0 3 </span><br><span class="line">5 2 6 3 0 7 1 4 </span><br><span class="line">5 3 0 4 7 1 6 2 </span><br><span class="line">5 3 1 7 4 6 0 2 </span><br><span class="line">5 3 6 0 2 4 1 7 </span><br><span class="line">5 3 6 0 7 1 4 2 </span><br><span class="line">5 7 1 3 0 6 4 2 </span><br><span class="line">6 0 2 7 5 3 1 4 </span><br><span class="line">6 1 3 0 7 4 2 5 </span><br><span class="line">6 1 5 2 0 3 7 4 </span><br><span class="line">6 2 0 5 7 4 1 3 </span><br><span class="line">6 2 7 1 4 0 5 3 </span><br><span class="line">6 3 1 4 7 0 2 5 </span><br><span class="line">6 3 1 7 5 0 2 4 </span><br><span class="line">6 4 2 0 5 7 1 3 </span><br><span class="line">7 1 3 0 6 4 2 5 </span><br><span class="line">7 1 4 2 0 6 3 5 </span><br><span class="line">7 2 0 5 1 4 6 3 </span><br><span class="line">7 3 0 2 5 1 6 4 </span><br><span class="line">一共有92总解法</span><br><span class="line">一共有15720次判断冲突</span><br></pre></td></tr></table></figure><p><strong>感谢</strong></p><blockquote><p>尚硅谷</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java--用户登录（JDBC，MYSQL，Servlet）</title>
      <link href="/2020/06/22/Java--%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%EF%BC%88JDBC%EF%BC%8CMYSQL%EF%BC%8CServlet%EF%BC%89/"/>
      <url>/2020/06/22/Java--%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%EF%BC%88JDBC%EF%BC%8CMYSQL%EF%BC%8CServlet%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="Java–用户登录（JDBC，MYSQL，Servlet）"><a href="#Java–用户登录（JDBC，MYSQL，Servlet）" class="headerlink" title="Java–用户登录（JDBC，MYSQL，Servlet）"></a>Java–用户登录（JDBC，MYSQL，Servlet）</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="用户登录案例需求"><a href="#用户登录案例需求" class="headerlink" title="用户登录案例需求"></a>用户登录案例需求</h4><ol><li>编写login.html登录页面<pre><code>username &amp; password 两个输入框</code></pre></li><li>使用Druid数据库连接池技术,操作mysql，day14数据库中user表</li><li>使用JdbcTemplate技术封装JDBC</li><li>登录成功跳转到SuccessServlet展示：登录成功！用户名,欢迎您</li><li>登录失败跳转到FailServlet展示：登录失败，用户名或密码错误</li></ol><h4 id="登录页面"><a href="#登录页面" class="headerlink" title="登录页面"></a>登录页面</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/login_test/loginServlet"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">        用户名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        密码:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"登录"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">CREATE DATABASE login;</span><br><span class="line"></span><br><span class="line">USE login;</span><br><span class="line"></span><br><span class="line">CREATE TABLE user(</span><br><span class="line">id INT PRIMARY KEY auto_increment,</span><br><span class="line">username VARCHAR(32) UNIQUE NOT NULL,</span><br><span class="line">password VARCHAR(32) NOT NULL</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">driverClassName&#x3D;com.mysql.jdbc.Driver</span><br><span class="line">url&#x3D;jdbc:mysql:&#x2F;&#x2F;&#x2F;login</span><br><span class="line">username&#x3D;root</span><br><span class="line">password&#x3D;root</span><br><span class="line">initialSize&#x3D;5</span><br><span class="line">maxActive&#x3D;10</span><br><span class="line">maxWait&#x3D;3000</span><br></pre></td></tr></table></figure><h4 id="项目依赖"><a href="#项目依赖" class="headerlink" title="项目依赖"></a>项目依赖</h4><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200622115607312.png" alt="image-20200622115607312"></p><h4 id="创建用户实体类"><a href="#创建用户实体类" class="headerlink" title="创建用户实体类"></a>创建用户实体类</h4><p>创建包cn.guizimo.domain,创建类User</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.domain;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> tanglei</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/6/22 10:28 上午</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsername</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setUsername</span><span class="params">(String username)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getPassword</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPassword</span><span class="params">(String password)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"User&#123;"</span> +</span><br><span class="line">                <span class="string">"id="</span> + id +</span><br><span class="line">                <span class="string">", username='"</span> + username + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", password='"</span> + password + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="创建工具类"><a href="#创建工具类" class="headerlink" title="创建工具类"></a>创建工具类</h4><p>创建包cn.guizimo.util,编写工具类JDBCUtils</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.druid.pool.DruidDataSourceFactory;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sql.DataSource;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> tanglei</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/6/22 10:38 上午</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtils</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> DataSource ds ;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">//1.加载配置文件</span></span><br><span class="line">            Properties pro = <span class="keyword">new</span> Properties();</span><br><span class="line">            <span class="comment">//使用ClassLoader加载配置文件，获取字节输入流</span></span><br><span class="line">            InputStream is = JDBCUtils.class.getClassLoader().getResourceAsStream("druid.properties");</span><br><span class="line">            pro.load(is);</span><br><span class="line"></span><br><span class="line">            <span class="comment">//2.初始化连接池对象</span></span><br><span class="line">            ds = DruidDataSourceFactory.createDataSource(pro);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取连接池对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataSource <span class="title">getDataSource</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ds;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取连接Connection对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span>  ds.getConnection();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="创建数据操作类"><a href="#创建数据操作类" class="headerlink" title="创建数据操作类"></a>创建数据操作类</h4><p>创建包cn.guizimo.dao,创建类UserDao,提供login方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.guizimo.domain.User;</span><br><span class="line"><span class="keyword">import</span> cn.guizimo.util.JDBCUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.dao.DataAccessException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.BeanPropertyRowMapper;</span><br><span class="line"><span class="keyword">import</span> org.springframework.jdbc.core.JdbcTemplate;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> tanglei</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/6/22 10:34 上午</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserDao</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate template = <span class="keyword">new</span> JdbcTemplate(JDBCUtils.getDataSource());</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">login</span><span class="params">(User loginUser)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            String sql = <span class="string">"select * from user where username = ? and password = ?"</span>;</span><br><span class="line">            User user = template.queryForObject(sql,</span><br><span class="line">                    <span class="keyword">new</span> BeanPropertyRowMapper&lt;User&gt;(User<span class="class">.<span class="keyword">class</span>),</span></span><br><span class="line"><span class="class">                    <span class="title">loginUser</span>.<span class="title">getUsername</span>(), <span class="title">loginUser</span>.<span class="title">getPassword</span>())</span>;</span><br><span class="line">            <span class="keyword">return</span> user;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (DataAccessException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="创建servlet类"><a href="#创建servlet类" class="headerlink" title="创建servlet类"></a>创建servlet类</h4><p>cn.guizimo.web.servlet.LoginServlet类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.guizimo.dao.UserDao;</span><br><span class="line"><span class="keyword">import</span> cn.guizimo.domain.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> tanglei</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/6/22 11:15 上午</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/loginServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//1.设置编码</span></span><br><span class="line">        req.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">        <span class="comment">//2.获取请求参数</span></span><br><span class="line">        String username = req.getParameter(<span class="string">"username"</span>);</span><br><span class="line">        String password = req.getParameter(<span class="string">"password"</span>);</span><br><span class="line">        <span class="comment">//3.封装user对象</span></span><br><span class="line">        User loginUser = <span class="keyword">new</span> User();</span><br><span class="line">        loginUser.setUsername(username);</span><br><span class="line">        loginUser.setPassword(password);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//4.调用UserDao的login方法</span></span><br><span class="line">        UserDao dao = <span class="keyword">new</span> UserDao();</span><br><span class="line">        User user = dao.login(loginUser);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//5.判断user</span></span><br><span class="line">        <span class="keyword">if</span>(user == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="comment">//登录失败</span></span><br><span class="line">            req.getRequestDispatcher(<span class="string">"/failServlet"</span>).forward(req,resp);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//登录成功</span></span><br><span class="line">            <span class="comment">//存储数据</span></span><br><span class="line">            req.setAttribute(<span class="string">"user"</span>,user);</span><br><span class="line">            <span class="comment">//转发</span></span><br><span class="line">            req.getRequestDispatcher(<span class="string">"/successServlet"</span>).forward(req,resp);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doGet(req,resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>cn.guizimo.web.servlet.FailServlet类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> tanglei</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/6/22 11:26 上午</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/failServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FailServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//设置编码</span></span><br><span class="line">        resp.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">        <span class="comment">//输出</span></span><br><span class="line">        resp.getWriter().write(<span class="string">"登录失败，用户名或密码错误"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>cn.guizimo.web.servlet.SuccessServlet类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.guizimo.web.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> cn.guizimo.domain.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> tanglei</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/6/22 11:31 上午</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/successServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SuccessServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.doPost(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        <span class="comment">//获取request域中共享的user对象</span></span><br><span class="line">        User user = (User) req.getAttribute(<span class="string">"user"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(user != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="comment">//设置编码</span></span><br><span class="line">            resp.setContentType(<span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line">            <span class="comment">//输出</span></span><br><span class="line">            resp.getWriter().write(<span class="string">"登录成功！"</span>+user.getUsername()+<span class="string">",欢迎您"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4><p>在浏览器中打开<a href="http://localhost:8080/login_test/login.html" target="_blank" rel="noopener">http://localhost:8080/login_test/login.html</a></p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200622124825184.png" alt="image-20200622124825184"></p><p>登录成功</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200622125016804.png" alt="image-20200622125016804"></p><p>登录失败</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200622124935764.png" alt="image-20200622124935764"></p><p><strong>感谢</strong></p><blockquote><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java问题解决--java.lang.NoClassDefFoundError</title>
      <link href="/2020/06/22/Java%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3--java.lang.NoClassDefFoundError/"/>
      <url>/2020/06/22/Java%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3--java.lang.NoClassDefFoundError/</url>
      
        <content type="html"><![CDATA[<h2 id="Java问题解决–java-lang-NoClassDefFoundError"><a href="#Java问题解决–java-lang-NoClassDefFoundError" class="headerlink" title="Java问题解决–java.lang.NoClassDefFoundError"></a>Java问题解决–java.lang.NoClassDefFoundError</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p> java.lang.NoClassDefFoundError: org/springframework/dao/DataAccessException</p><h4 id="问题截图"><a href="#问题截图" class="headerlink" title="问题截图"></a>问题截图</h4><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200622124155286.png" alt="image-20200622124155286"></p><h4 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h4><p>这个是由于不能找到导入的依赖</p><p>注意在WEB-INF的lib目录下导入，名字不要写错</p><p>右击lib目录，Add as Library</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200622124416488.png" alt="image-20200622124416488"></p><p><strong>感谢</strong></p><blockquote><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HTTP--Request详解</title>
      <link href="/2020/06/22/HTTP--Request%E8%AF%A6%E8%A7%A3/"/>
      <url>/2020/06/22/HTTP--Request%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="HTTP–Request详解"><a href="#HTTP–Request详解" class="headerlink" title="HTTP–Request详解"></a>HTTP–Request详解</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="请求消息数据格式"><a href="#请求消息数据格式" class="headerlink" title="请求消息数据格式"></a>请求消息数据格式</h4><h5 id="请求行"><a href="#请求行" class="headerlink" title="请求行"></a>请求行</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">请求方式 请求url 请求协议&#x2F;版本</span><br><span class="line">GET &#x2F;login.htmlHTTP&#x2F;1.1</span><br></pre></td></tr></table></figure><h5 id="请求头"><a href="#请求头" class="headerlink" title="请求头"></a>请求头</h5><p>客户端浏览器告诉服务器一些信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">请求头名称: 请求头值</span><br></pre></td></tr></table></figure><ul><li><p>常见的请求头：</p><ol><li><p>User-Agent：浏览器告诉服务器，我访问你使用的浏览器版本信息</p><ul><li>可以在服务器端获取该头的信息，解决浏览器的兼容性问题</li></ul></li><li><p>Referer：<a href="http://localhost/login.html" target="_blank" rel="noopener">http://localhost/login.html</a></p><ul><li>告诉服务器，我(当前请求)从哪里来？</li><li>作用：<ol><li>防盗链：</li><li>统计工作：</li></ol></li></ul></li></ol></li></ul><h5 id="请求空行"><a href="#请求空行" class="headerlink" title="请求空行"></a>请求空行</h5><p>空行，就是用于分割POST请求的请求头，和请求体的。</p><h5 id="请求体-正文"><a href="#请求体-正文" class="headerlink" title="请求体(正文)"></a>请求体(正文)</h5><ul><li><p>封装POST请求消息的请求参数的</p></li><li><p>字符串格式：</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">POST &#x2F;login.htmlHTTP&#x2F;1.1</span><br><span class="line">Host: localhost</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 6.1; Win64; x64; rv:60.0) Gecko&#x2F;20100101 Firefox&#x2F;60.0</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Referer: http:&#x2F;&#x2F;localhost&#x2F;login.html</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line"></span><br><span class="line">username&#x3D;zhangsan</span><br></pre></td></tr></table></figure></li></ul><h4 id="获取请求消息数据"><a href="#获取请求消息数据" class="headerlink" title="获取请求消息数据"></a>获取请求消息数据</h4><ol><li><p>获取请求行数据</p><ul><li><p>GET /day14/demo1?name=zhangsan HTTP/1.1</p><ul><li><p>方法：</p><ol><li><p>获取请求方式 ：GET</p><ul><li>String getMethod()  </li></ul></li><li><p>(*)获取虚拟目录：/day14</p><ul><li>String getContextPath()</li></ul></li><li><p>获取Servlet路径: /demo1</p><ul><li>String getServletPath()</li></ul></li><li><p>获取get方式请求参数：name=zhangsan</p><ul><li>String getQueryString()</li></ul></li><li><p>(*)获取请求URI：/day14/demo1</p><ul><li><p>String getRequestURI():        /day14/demo1</p></li><li><p>StringBuffer getRequestURL()  :<a href="http://localhost/day14/demo1" target="_blank" rel="noopener">http://localhost/day14/demo1</a></p></li><li><p>URL:统一资源定位符 ： <a href="http://localhost/day14/demo1" target="_blank" rel="noopener">http://localhost/day14/demo1</a>    </p></li><li><p>URI：统一资源标识符 : /day14/demo1                    </p></li></ul></li><li><p>获取协议及版本：HTTP/1.1</p><ul><li>String getProtocol()</li></ul></li><li><p>获取客户机的IP地址：</p><ul><li>String getRemoteAddr()</li></ul></li></ol></li></ul></li></ul></li></ol><ol start="2"><li><p>获取请求头数据</p><ul><li>方法：<ul><li>(*)String getHeader(String name):通过请求头的名称获取请求头的值</li><li>Enumeration<String> getHeaderNames():获取所有的请求头名称</li></ul></li></ul></li><li><p>获取请求体数据:</p><ul><li><p>请求体：只有POST请求方式，才有请求体，在请求体中封装了POST请求的请求参数</p></li><li><p>步骤：</p><ol><li><p>获取流对象</p><ul><li>BufferedReader getReader()：获取字符输入流，只能操作字符数据</li><li>ServletInputStream getInputStream()：获取字节输入流，可以操作所有类型数据</li></ul></li><li><p>再从流对象中拿数据</p></li></ol></li></ul></li></ol><h4 id="获取请求参数通用方式"><a href="#获取请求参数通用方式" class="headerlink" title="获取请求参数通用方式"></a>获取请求参数通用方式</h4><p>不论get还是post请求方式都可以使用下列方法来获取请求参数</p><ol><li>String getParameter(String name):根据参数名称获取参数值    username=zs&amp;password=123</li><li>String[] getParameterValues(String name):根据参数名称获取参数值的数组  hobby=xx&amp;hobby=game</li><li>Enumeration<String> getParameterNames():获取所有请求的参数名称</li><li>Map&lt;String,String[]&gt; getParameterMap():获取所有参数的map集合</li></ol><h4 id="请求转发"><a href="#请求转发" class="headerlink" title="请求转发"></a>请求转发</h4><p>一种在服务器内部的资源跳转方式</p><ol><li><p>步骤：</p><ol><li>通过request对象获取请求转发器对象：RequestDispatcher getRequestDispatcher(String path)</li><li>使用RequestDispatcher对象来进行转发：forward(ServletRequest request, ServletResponse response) </li></ol></li><li><p>特点：</p><ol><li><p>浏览器地址栏路径不发生变化</p></li><li><p>只能转发到当前服务器内部资源中。</p></li><li><p>转发是一次请求</p></li></ol></li></ol><h4 id="共享数据"><a href="#共享数据" class="headerlink" title="共享数据"></a>共享数据</h4><ul><li>域对象：一个有作用范围的对象，可以在范围内共享数据</li><li>request域：代表一次请求的范围，一般用于请求转发的多个资源中共享数据</li><li>方法：<ol><li>void setAttribute(String name,Object obj):存储数据</li><li>Object getAttitude(String name):通过键获取值</li><li>void removeAttribute(String name):通过键移除键值对</li></ol></li></ul><h4 id="获取ServletContext"><a href="#获取ServletContext" class="headerlink" title="获取ServletContext"></a>获取ServletContext</h4><p>ServletContext getServletContext()</p><p><strong>感谢</strong></p><blockquote><p>黑马程序员</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HTTP--协议详解</title>
      <link href="/2020/06/22/HTTP--%E5%8D%8F%E8%AE%AE%E8%AF%A6%E8%A7%A3/"/>
      <url>/2020/06/22/HTTP--%E5%8D%8F%E8%AE%AE%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="HTTP–协议详解"><a href="#HTTP–协议详解" class="headerlink" title="HTTP–协议详解"></a>HTTP–协议详解</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="HTTP-简介"><a href="#HTTP-简介" class="headerlink" title="HTTP 简介"></a>HTTP 简介</h4><p>HTTP协议是Hyper Text Transfer Protocol（超文本传输协议）的缩写,是用于从万维网（WWW:World Wide Web ）服务器传输超文本到本地浏览器的传送协议。。</p><p>HTTP是一个基于TCP/IP通信协议来传递数据（HTML 文件, 图片文件, 查询结果等）。</p><h4 id="HTTP-工作原理"><a href="#HTTP-工作原理" class="headerlink" title="HTTP 工作原理"></a>HTTP 工作原理</h4><p>HTTP协议工作于客户端-服务端架构上。浏览器作为HTTP客户端通过URL向HTTP服务端即WEB服务器发送所有请求。</p><p>Web服务器有：Apache服务器，IIS服务器（Internet Information Services）等。</p><p>Web服务器根据接收到的请求后，向客户端发送响应信息。</p><p>HTTP默认端口号为80，但是你也可以改为8080或者其他端口。</p><p><strong>HTTP三点注意事项：</strong></p><ul><li>HTTP是无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。</li><li>HTTP是媒体独立的：这意味着，只要客户端和服务器知道如何处理的数据内容，任何类型的数据都可以通过HTTP发送。客户端以及服务器指定使用适合的MIME-type内容类型。</li><li>HTTP是无状态：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。</li></ul><h4 id="HTTP-协议的-8-种请求类型介绍"><a href="#HTTP-协议的-8-种请求类型介绍" class="headerlink" title="HTTP 协议的 8 种请求类型介绍"></a>HTTP 协议的 8 种请求类型介绍</h4><p>HTTP 协议中共定义了八种方法或者叫“动作”来表明对 Request-URI 指定的资源的不同操作方式，具体介绍如下：</p><ul><li><strong>OPTIONS</strong>：返回服务器针对特定资源所支持的HTTP请求方法。也可以利用向Web服务器发送’*’的请求来测试服务器的功能性。</li><li><strong>HEAD</strong>：向服务器索要与GET请求相一致的响应，只不过响应体将不会被返回。这一方法可以在不必传输整个响应内容的情况下，就可以获取包含在响应消息头中的元信息。</li><li><strong>GET</strong>：向特定的资源发出请求。</li><li><strong>POST</strong>：向指定资源提交数据进行处理请求（例如提交表单或者上传文件）。数据被包含在请求体中。POST请求可能会导致新的资源的创建和/或已有资源的修改。</li><li><strong>PUT</strong>：向指定资源位置上传其最新内容。</li><li><strong>DELETE</strong>：请求服务器删除 Request-URI 所标识的资源。</li><li><strong>TRACE</strong>：回显服务器收到的请求，主要用于测试或诊断。</li><li><strong>CONNECT</strong>：HTTP/1.1 协议中预留给能够将连接改为管道方式的代理服务器。</li></ul><p>虽然 HTTP 的请求方式有 8 种，但是我们在实际应用中常用的也就是 <strong>get</strong> 和 <strong>post</strong>，其他请求方式也都可以通过这两种方式间接的来实现。</p><p><strong>感谢</strong></p><blockquote><p>菜鸟教程</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Servlet--生命周期</title>
      <link href="/2020/06/22/Servlet--%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
      <url>/2020/06/22/Servlet--%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="Servlet–生命周期"><a href="#Servlet–生命周期" class="headerlink" title="Servlet–生命周期"></a>Servlet–生命周期</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h4><p>Servlet 生命周期可被定义为从创建直到毁灭的整个过程。以下是 Servlet 遵循的过程：</p><ul><li>Servlet 通过调用 <strong>init ()</strong> 方法进行初始化。</li><li>Servlet 调用 <strong>service()</strong> 方法来处理客户端的请求。</li><li>Servlet 通过调用 <strong>destroy()</strong> 方法终止（结束）。</li><li>最后，Servlet 是由 JVM 的垃圾回收器进行垃圾回收的。</li></ul><h4 id="init-方法"><a href="#init-方法" class="headerlink" title="init() 方法"></a>init() 方法</h4><p>init 方法被设计成只调用一次。它在第一次创建 Servlet 时被调用，在后续每次用户请求时不再调用。因此，它是用于一次性初始化，就像 Applet 的 init 方法一样。</p><p>Servlet 创建于用户第一次调用对应于该 Servlet 的 URL 时，但是您也可以指定 Servlet 在服务器第一次启动时被加载。</p><p>当用户调用一个 Servlet 时，就会创建一个 Servlet 实例，每一个用户请求都会产生一个新的线程，适当的时候移交给 doGet 或 doPost 方法。init() 方法简单地创建或加载一些数据，这些数据将被用于 Servlet 的整个生命周期。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">  <span class="comment">// 初始化代码...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="service-方法"><a href="#service-方法" class="headerlink" title="service() 方法"></a>service() 方法</h4><p>service() 方法是执行实际任务的主要方法。Servlet 容器（即 Web 服务器）调用 service() 方法来处理来自客户端（浏览器）的请求，并把格式化的响应写回给客户端。</p><p>每次服务器接收到一个 Servlet 请求时，服务器会产生一个新的线程并调用服务。service() 方法检查 HTTP  请求类型（GET、POST、PUT、DELETE 等），并在适当的时候调用 doGet、doPost、doPut，doDelete 等方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">service</span><span class="params">(ServletRequest request, </span></span></span><br><span class="line"><span class="function"><span class="params">                    ServletResponse response)</span> </span></span><br><span class="line"><span class="function">      <span class="keyword">throws</span> ServletException, IOException</span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>service() 方法由容器调用，service 方法在适当的时候调用 doGet、doPost、doPut、doDelete  等方法。所以，您不用对 service() 方法做任何动作，您只需要根据来自客户端的请求类型来重写 doGet() 或 doPost() 即可。</p><h4 id="doGet-方法"><a href="#doGet-方法" class="headerlink" title="doGet() 方法"></a>doGet() 方法</h4><p>GET 请求来自于一个 URL 的正常请求，或者来自于一个未指定 METHOD 的 HTML 表单，它由 doGet() 方法处理。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">                  HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">    <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">// Servlet 代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="doPost-方法"><a href="#doPost-方法" class="headerlink" title="doPost() 方法"></a>doPost() 方法</h4><p>POST 请求来自于一个特别指定了 METHOD 为 POST 的 HTML 表单，它由 doPost() 方法处理。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">                   HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">    <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">    <span class="comment">// Servlet 代码</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="destroy-方法"><a href="#destroy-方法" class="headerlink" title="destroy() 方法"></a>destroy() 方法</h4><p>destroy() 方法只会被调用一次，在 Servlet 生命周期结束时被调用。destroy() 方法可以让您的 Servlet 关闭数据库连接、停止后台线程、把 Cookie 列表或点击计数器写入到磁盘，并执行其他类似的清理活动。</p><p>在调用 destroy() 方法之后，servlet 对象被标记为垃圾回收。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 终止化代码...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>感谢</strong></p><blockquote><p>菜鸟教程</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Servlet 简介</title>
      <link href="/2020/06/21/Servlet%20%E7%AE%80%E4%BB%8B/"/>
      <url>/2020/06/21/Servlet%20%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="Servlet-简介"><a href="#Servlet-简介" class="headerlink" title="Servlet 简介"></a>Servlet 简介</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h4><p>Java Servlet 是运行在 Web 服务器或应用服务器上的程序，它是作为来自 Web 浏览器或其他 HTTP 客户端的请求和 HTTP 服务器上的数据库或应用程序之间的中间层。</p><h4 id="Servlet的位置"><a href="#Servlet的位置" class="headerlink" title="Servlet的位置"></a>Servlet的位置</h4><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200621174222296.png" alt="image-20200621174222296"></p><h4 id="Servlet的工作"><a href="#Servlet的工作" class="headerlink" title="Servlet的工作"></a>Servlet的工作</h4><ul><li>读取客户端（浏览器）发送的显式的数据。这包括网页上的 HTML 表单，或者也可以是来自 applet 或自定义的 HTTP 客户端程序的表单。</li><li>读取客户端（浏览器）发送的隐式的 HTTP 请求数据。这包括 cookies、媒体类型和浏览器能理解的压缩格式等等。</li><li>处理数据并生成结果。这个过程可能需要访问数据库，执行 RMI 或 CORBA 调用，调用 Web 服务，或者直接计算得出对应的响应。</li><li>发送显式的数据（即文档）到客户端（浏览器）。该文档的格式可以是多种多样的，包括文本文件（HTML 或 XML）、二进制文件（GIF 图像）、Excel 等。</li><li>发送隐式的 HTTP 响应到客户端（浏览器）。这包括告诉浏览器或其他客户端被返回的文档类型（例如 HTML），设置 cookies 和缓存参数，以及其他类似的任务。</li></ul><p><strong>感谢</strong></p><blockquote><p>菜鸟教程</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Servlet--实例</title>
      <link href="/2020/06/21/Servlet--%E5%AE%9E%E4%BE%8B/"/>
      <url>/2020/06/21/Servlet--%E5%AE%9E%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="Servlet–实例"><a href="#Servlet–实例" class="headerlink" title="Servlet–实例"></a>Servlet–实例</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="HelloWorld"><a href="#HelloWorld" class="headerlink" title="HelloWorld"></a>HelloWorld</h4><p>创建Java Web项目，在src目录下新建类文件Helloworld.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> tanglei</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2020/6/21 6:04 下午</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloWorld</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> <span class="keyword">throws</span> ServletException</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 执行必需的初始化</span></span><br><span class="line">        message = <span class="string">"Hello World"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request,</span></span></span><br><span class="line"><span class="function"><span class="params">                      HttpServletResponse response)</span></span></span><br><span class="line"><span class="function">            <span class="keyword">throws</span> ServletException, IOException</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 设置响应内容类型</span></span><br><span class="line">        response.setContentType(<span class="string">"text/html"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 实际的逻辑是在这里</span></span><br><span class="line">        PrintWriter out = response.getWriter();</span><br><span class="line">        out.println(<span class="string">"&lt;h1&gt;"</span> + message + <span class="string">"&lt;/h1&gt;"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">// 什么也不做</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="编写配置文件"><a href="#编写配置文件" class="headerlink" title="编写配置文件"></a>编写配置文件</h4><p>在web目录下的WEB-INF里面的web.xml里面配置</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200621183014894.png" alt="image-20200621183014894"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloWorld<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>HelloWorld<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloWorld<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/HelloWorld<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="启动项目"><a href="#启动项目" class="headerlink" title="启动项目"></a>启动项目</h4><p>点击启动项目，等待项目成功启动之后，会自动打开浏览器的localhost:8080的默认项目，由于我们这里是Idea启动的，所以启动的项目就是我们当前的项目，名称为tomcat_test_war_exploded</p><p>我们在浏览器中输入完整的url路径<code>http://localhost:8080/tomcat_test_war_exploded/HelloWorld</code></p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200621183532288.png" alt="image-20200621183532288"></p><p>打开检查，找到接口的回应</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200621183616794.png" alt="image-20200621183616794"></p><p><strong>感谢</strong></p><blockquote><p>菜鸟教程</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat--在IDEA创建Java Web项目，通过tomcat启动</title>
      <link href="/2020/06/21/Tomcat--%E5%9C%A8IDEA%E5%88%9B%E5%BB%BAJava%20Web%E9%A1%B9%E7%9B%AE%EF%BC%8C%E9%80%9A%E8%BF%87tomcat%E5%90%AF%E5%8A%A8/"/>
      <url>/2020/06/21/Tomcat--%E5%9C%A8IDEA%E5%88%9B%E5%BB%BAJava%20Web%E9%A1%B9%E7%9B%AE%EF%BC%8C%E9%80%9A%E8%BF%87tomcat%E5%90%AF%E5%8A%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="Tomcat–在IDEA创建Java-Web项目，通过tomcat启动"><a href="#Tomcat–在IDEA创建Java-Web项目，通过tomcat启动" class="headerlink" title="Tomcat–在IDEA创建Java Web项目，通过tomcat启动"></a>Tomcat–在IDEA创建Java Web项目，通过tomcat启动</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="配置Idea"><a href="#配置Idea" class="headerlink" title="配置Idea"></a>配置Idea</h4><p>找到run菜单，找到配置</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200621105207435.png" alt="image-20200621105207435"></p><p>选择模版，找到tomcat</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200621105257365.png" alt="image-20200621105257365"></p><p>选择自己的tomcat的目录</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200621105324337.png" alt="image-20200621105324337"></p><h4 id="创建Java-Web项目"><a href="#创建Java-Web项目" class="headerlink" title="创建Java Web项目"></a>创建Java Web项目</h4><p>选择新建项目，选择好版本</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200621105802714.png" alt="image-20200621105802714"></p><p>当我们创建好了之后。tomcat服务器相应的也搭建好了</p><h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200621110601778.png" alt="image-20200621110601778"></p><p>在浏览器中localhost:8080 </p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200621115406455.png" alt="image-20200621115406455"></p><p><strong>感谢</strong></p><blockquote><p>黑马程序员</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat--配置</title>
      <link href="/2020/06/21/Tomcat--%E9%85%8D%E7%BD%AE/"/>
      <url>/2020/06/21/Tomcat--%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="Tomcat–配置"><a href="#Tomcat–配置" class="headerlink" title="Tomcat–配置"></a>Tomcat–配置</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>web服务器软件</p><p>下载和启动这里就不多说了，之前有过博客的</p><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><h5 id="部署项目的方式"><a href="#部署项目的方式" class="headerlink" title="部署项目的方式"></a>部署项目的方式</h5><ol><li><p>直接将项目放到webapps目录下即可。</p><ul><li>直接部署：项目的访问路径–&gt;虚拟目录（把html页面放入其中）</li><li>简化部署：将项目打成一个war包，再将war包放置到webapps目录下。<ul><li>war包会自动解压缩</li></ul></li></ul></li><li><p>配置conf/server.xml文件<br> 在<Host>标签体中配置</p> <Context docBase="D:\hello" path="/hehe" /> * docBase:项目存放的路径 * path：虚拟目录</li><li><p>在conf\Catalina\localhost创建任意名称的xml文件。在文件中编写</p> <Context docBase="D:\hello" /> * 虚拟目录：xml文件的名称</li></ol><h4 id="静态项目和动态项目"><a href="#静态项目和动态项目" class="headerlink" title="静态项目和动态项目"></a>静态项目和动态项目</h4><ul><li><p>目录结构</p><ul><li><p>java动态项目的目录结构：</p><p>  项目的根目录</p><ul><li>WEB-INF目录：<ul><li>web.xml：web项目的核心配置文件</li><li>classes目录：放置字节码文件的目录</li><li>lib目录：放置依赖的jar包</li></ul></li></ul></li></ul></li></ul><p><strong>感谢</strong></p><blockquote><p>黑马程序员</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Mac安装Tomcat</title>
      <link href="/2020/06/21/Mac%E5%AE%89%E8%A3%85Tomcat/"/>
      <url>/2020/06/21/Mac%E5%AE%89%E8%A3%85Tomcat/</url>
      
        <content type="html"><![CDATA[<h2 id="Mac安装Tomcat"><a href="#Mac安装Tomcat" class="headerlink" title="Mac安装Tomcat"></a>Mac安装Tomcat</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><p>官网地址<a href="http://tomcat.apache.org/" target="_blank" rel="noopener">http://tomcat.apache.org/</a></p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200621091344974.png" alt="image-20200621091344974"></p><p>注意下载的版本，我这里是mac的</p><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><p>将文件解压，可以改名成为Tomcat，进入到bin目录下</p><h5 id="开启"><a href="#开启" class="headerlink" title="开启"></a>开启</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh .&#x2F;startup.sh</span><br></pre></td></tr></table></figure><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200621093221124.png" alt="image-20200621093221124"></p><h5 id="关闭"><a href="#关闭" class="headerlink" title="关闭"></a>关闭</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh .&#x2F;shutdown.sh</span><br></pre></td></tr></table></figure><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200621093237360.png" alt="image-20200621093237360"></p><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>在浏览器中打开localhost:8080</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200621093348117.png" alt="image-20200621093348117"></p><p><strong>感谢</strong></p><blockquote><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>XML--解析</title>
      <link href="/2020/06/21/XML--%E8%A7%A3%E6%9E%90/"/>
      <url>/2020/06/21/XML--%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="XML–解析"><a href="#XML–解析" class="headerlink" title="XML–解析"></a>XML–解析</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h4><p>操作xml文档，将文档中的数据读取到内存中</p><h4 id="操作xml文档"><a href="#操作xml文档" class="headerlink" title="操作xml文档"></a>操作xml文档</h4><ol><li>解析(读取)：将文档中的数据读取到内存中</li><li>写入：将内存中的数据保存到xml文档中。持久化的存储</li></ol><h4 id="解析xml的方式"><a href="#解析xml的方式" class="headerlink" title="解析xml的方式"></a>解析xml的方式</h4><ol><li>DOM：将标记语言文档一次性加载进内存，在内存中形成一颗dom树<ul><li>优点：操作方便，可以对文档进行CRUD的所有操作</li><li>缺点：占内存</li></ul></li><li>SAX：逐行读取，基于事件驱动的。<ul><li>优点：不占内存。</li><li>缺点：只能读取，不能增删改</li></ul></li></ol><h4 id="xml常见的解析器"><a href="#xml常见的解析器" class="headerlink" title="xml常见的解析器"></a>xml常见的解析器</h4><ol><li>JAXP：sun公司提供的解析器，支持dom和sax两种思想</li><li>DOM4J：一款非常优秀的解析器</li><li>Jsoup：jsoup 是一款Java 的HTML解析器，可直接解析某个URL地址、HTML文本内容。它提供了一套非常省力的API，可通过DOM，CSS以及类似于jQuery的操作方法来取出和操作数据。</li><li>PULL：Android操作系统内置的解析器，sax方式的。</li></ol><h4 id="Jsoup快速入门"><a href="#Jsoup快速入门" class="headerlink" title="Jsoup快速入门"></a>Jsoup快速入门</h4><ul><li>步骤：<ol><li>导入jar包</li><li>获取Document对象</li><li>获取对应的标签Element对象</li><li>获取数据</li></ol></li></ul><ul><li>代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//2.1获取student.xml的path</span></span><br><span class="line">    String path = JsoupDemo1.class.getClassLoader().getResource("student.xml").getPath();</span><br><span class="line">    <span class="comment">//2.2解析xml文档，加载文档进内存，获取dom树---&gt;Document</span></span><br><span class="line">    Document document = Jsoup.parse(<span class="keyword">new</span> File(path), <span class="string">"utf-8"</span>);</span><br><span class="line">    <span class="comment">//3.获取元素对象 Element</span></span><br><span class="line">    Elements elements = document.getElementsByTag(<span class="string">"name"</span>);</span><br><span class="line">    System.out.println(elements.size());</span><br><span class="line">    <span class="comment">//3.1获取第一个name的Element对象</span></span><br><span class="line">    Element element = elements.get(<span class="number">0</span>);</span><br><span class="line">    <span class="comment">//3.2获取数据</span></span><br><span class="line">    String name = element.text();</span><br><span class="line">    System.out.println(name);</span><br></pre></td></tr></table></figure><h4 id="对象的使用"><a href="#对象的使用" class="headerlink" title="对象的使用"></a>对象的使用</h4><pre><code> 1. Jsoup：工具类，可以解析html或xml文档，返回Document* parse：解析html或xml文档，返回Document    * parse(File in, String charsetName)：解析xml或html文件的。    * parse(String html)：解析xml或html字符串    * parse(URL url, int timeoutMillis)：通过网络路径获取指定的html或xml的文档对象</code></pre><ol start="2"><li>Document：文档对象。代表内存中的dom树<ul><li>获取Element对象<ul><li>getElementById(String id)：根据id属性值获取唯一的element对象</li><li>getElementsByTag(String tagName)：根据标签名称获取元素对象集合</li><li>getElementsByAttribute(String key)：根据属性名称获取元素对象集合</li><li>getElementsByAttributeValue(String key, String value)：根据对应的属性名和属性值获取元素对象集合</li></ul></li></ul></li><li>Elements：元素Element对象的集合。可以当做 ArrayList<Element>来使用</li><li>Element：元素对象<ol><li>获取子元素对象<ul><li>getElementById(String id)：根据id属性值获取唯一的element对象</li><li>getElementsByTag(String tagName)：根据标签名称获取元素对象集合</li><li>getElementsByAttribute(String key)：根据属性名称获取元素对象集合</li><li>getElementsByAttributeValue(String key, String value)：根据对应的属性名和属性值获取元素对象集合</li></ul></li><li>获取属性值<ul><li>String attr(String key)：根据属性名称获取属性值</li></ul></li><li>获取属性值<ul><li>String attr(String key)：根据属性名称获取属性值</li></ul></li><li>获取文本内容<ul><li>String text():获取文本内容</li><li>String html():获取标签体的所有内容(包括字标签的字符串内容)</li></ul></li></ol></li></ol><p>5、Node：节点对象</p><ul><li>是Document和Element的父类</li></ul><h4 id="快捷查询方式"><a href="#快捷查询方式" class="headerlink" title="快捷查询方式"></a>快捷查询方式</h4><ol><li><p>selector:选择器</p><ul><li>使用的方法：Elements    select(String cssQuery)<ul><li>语法：参考Selector类中定义的语法</li></ul></li></ul></li><li><p>XPath：XPath即为XML路径语言，它是一种用来确定XML（标准通用标记语言的子集）文档中某部分位置的语言</p><ul><li><p>使用Jsoup的Xpath需要额外导入jar包。</p></li><li><p>代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">//1.获取student.xml的path</span></span><br><span class="line">  String path = JsoupDemo6.class.getClassLoader().getResource("student.xml").getPath();</span><br><span class="line"><span class="comment">//2.获取Document对象</span></span><br><span class="line">  Document document = Jsoup.parse(<span class="keyword">new</span> File(path), <span class="string">"utf-8"</span>);</span><br><span class="line"> <span class="comment">//3.根据document对象，创建JXDocument对象</span></span><br><span class="line"> JXDocument jxDocument = <span class="keyword">new</span> JXDocument(document);</span><br><span class="line">    </span><br><span class="line"> <span class="comment">//4.结合xpath语法查询</span></span><br><span class="line"> <span class="comment">//4.1查询所有student标签</span></span><br><span class="line"> List&lt;JXNode&gt; jxNodes = jxDocument.selN(<span class="string">"//student"</span>);</span><br><span class="line"> <span class="keyword">for</span> (JXNode jxNode : jxNodes) &#123;</span><br><span class="line">     System.out.println(jxNode);</span><br><span class="line"> &#125;</span><br><span class="line">    </span><br><span class="line"> System.out.println(<span class="string">"--------------------"</span>);</span><br><span class="line">    </span><br><span class="line"> <span class="comment">//4.2查询所有student标签下的name标签</span></span><br><span class="line"> List&lt;JXNode&gt; jxNodes2 = jxDocument.selN(<span class="string">"//student/name"</span>);</span><br><span class="line"> <span class="keyword">for</span> (JXNode jxNode : jxNodes2) &#123;</span><br><span class="line">     System.out.println(jxNode);</span><br><span class="line"> &#125;</span><br><span class="line">    </span><br><span class="line"> System.out.println(<span class="string">"--------------------"</span>);</span><br><span class="line">    </span><br><span class="line"> <span class="comment">//4.3查询student标签下带有id属性的name标签</span></span><br><span class="line"> List&lt;JXNode&gt; jxNodes3 = jxDocument.selN(<span class="string">"//student/name[@id]"</span>);</span><br><span class="line"> <span class="keyword">for</span> (JXNode jxNode : jxNodes3) &#123;</span><br><span class="line">     System.out.println(jxNode);</span><br><span class="line"> &#125;</span><br><span class="line"> System.out.println(<span class="string">"--------------------"</span>);</span><br><span class="line"> <span class="comment">//4.4查询student标签下带有id属性的name标签 并且id属性值为itcast</span></span><br><span class="line">    </span><br><span class="line"> List&lt;JXNode&gt; jxNodes4 = jxDocument.selN(<span class="string">"//student/name[@id='itcast']"</span>);</span><br><span class="line"> <span class="keyword">for</span> (JXNode jxNode : jxNodes4) &#123;</span><br><span class="line">     System.out.println(jxNode);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure></li></ul></li></ol><p><strong>感谢</strong></p><blockquote><p>黑马程序员</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>XML--简介和基本用法</title>
      <link href="/2020/06/20/XML--%E7%AE%80%E4%BB%8B%E5%92%8C%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/"/>
      <url>/2020/06/20/XML--%E7%AE%80%E4%BB%8B%E5%92%8C%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="XML–简介和基本用法"><a href="#XML–简介和基本用法" class="headerlink" title="XML–简介和基本用法"></a>XML–简介和基本用法</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>Extensible Markup Language 可扩展标记语言</p><h5 id="可扩展"><a href="#可扩展" class="headerlink" title="可扩展"></a>可扩展</h5><p>标签都是自定义的。</p><h4 id="功能：存储数据"><a href="#功能：存储数据" class="headerlink" title="功能：存储数据"></a>功能：存储数据</h4><p>配置文件</p><p>在网络中传输</p><h4 id="xml与html的区别"><a href="#xml与html的区别" class="headerlink" title="xml与html的区别"></a>xml与html的区别</h4><p>xml标签都是自定义的，html标签是预定义。</p><p>xml的语法严格，html语法松散</p><p>xml是存储数据的，html是展示数据</p><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><h5 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h5><ol><li>xml文档的后缀名 .xml</li><li>xml第一行必须定义为文档声明</li><li>xml文档中有且仅有一个根标签</li><li>属性值必须使用引号(单双都可)引起来</li><li>标签必须正确关闭</li><li>xml标签名称区分大小写</li></ol><h4 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version='1.0' ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">users</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span> <span class="attr">id</span>=<span class="string">'1'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>zhangsan<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">age</span>&gt;</span>23<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">gender</span>&gt;</span>male<span class="tag">&lt;/<span class="name">gender</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span> <span class="attr">id</span>=<span class="string">'2'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>lisi<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">age</span>&gt;</span>24<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">gender</span>&gt;</span>female<span class="tag">&lt;/<span class="name">gender</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">users</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="组成部分："><a href="#组成部分：" class="headerlink" title="组成部分："></a>组成部分：</h4><h5 id="文档声明"><a href="#文档声明" class="headerlink" title="文档声明"></a>文档声明</h5><ol><li><p>格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml 属性列表 ?&gt;</span><br></pre></td></tr></table></figure></li><li><p>属性列表：</p><ul><li>version：版本号，必须的属性</li><li>encoding：编码方式。告知解析引擎当前文档使用的字符集，默认值：ISO-8859-1</li><li>standalone：是否独立</li><li>取值：<ul><li>yes：不依赖其他文件</li><li>no：依赖其他文件</li></ul></li></ul></li><li><p>指令(了解)：结合css的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml-stylesheet type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;a.css&quot; ?&gt;</span><br></pre></td></tr></table></figure></li><li><p>标签：标签名称自定义的</p><ul><li>规则：<ul><li>名称可以包含字母、数字以及其他的字符 </li><li>名称不能以数字或者标点符号开始 </li><li>名称不能以字母 xml（或者 XML、Xml 等等）开始 </li><li>名称不能包含空格 </li></ul></li></ul></li><li><p>属性</p><p>id属性值唯一</p></li><li><p>文本：</p><ul><li><p>CDATA区：在该区域中的数据会被原样展示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;![CDATA[ 数据 ]]&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ol><p><strong>感谢</strong></p><blockquote><p>黑马程序员</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>XML--约束</title>
      <link href="/2020/06/20/XML--%E7%BA%A6%E6%9D%9F/"/>
      <url>/2020/06/20/XML--%E7%BA%A6%E6%9D%9F/</url>
      
        <content type="html"><![CDATA[<h2 id="XML–简介和基本用法"><a href="#XML–简介和基本用法" class="headerlink" title="XML–简介和基本用法"></a>XML–简介和基本用法</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>Extensible Markup Language 可扩展标记语言</p><h5 id="可扩展"><a href="#可扩展" class="headerlink" title="可扩展"></a>可扩展</h5><p>标签都是自定义的。</p><h4 id="功能：存储数据"><a href="#功能：存储数据" class="headerlink" title="功能：存储数据"></a>功能：存储数据</h4><p>配置文件</p><p>在网络中传输</p><h4 id="xml与html的区别"><a href="#xml与html的区别" class="headerlink" title="xml与html的区别"></a>xml与html的区别</h4><p>xml标签都是自定义的，html标签是预定义。</p><p>xml的语法严格，html语法松散</p><p>xml是存储数据的，html是展示数据</p><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><h5 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h5><ol><li>xml文档的后缀名 .xml</li><li>xml第一行必须定义为文档声明</li><li>xml文档中有且仅有一个根标签</li><li>属性值必须使用引号(单双都可)引起来</li><li>标签必须正确关闭</li><li>xml标签名称区分大小写</li></ol><h4 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version='1.0' ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">users</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span> <span class="attr">id</span>=<span class="string">'1'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>zhangsan<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">age</span>&gt;</span>23<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">gender</span>&gt;</span>male<span class="tag">&lt;/<span class="name">gender</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span> <span class="attr">id</span>=<span class="string">'2'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>lisi<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">age</span>&gt;</span>24<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">gender</span>&gt;</span>female<span class="tag">&lt;/<span class="name">gender</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">users</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="组成部分："><a href="#组成部分：" class="headerlink" title="组成部分："></a>组成部分：</h4><h5 id="文档声明"><a href="#文档声明" class="headerlink" title="文档声明"></a>文档声明</h5><ol><li><p>格式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml 属性列表 ?&gt;</span><br></pre></td></tr></table></figure></li><li><p>属性列表：</p><ul><li>version：版本号，必须的属性</li><li>encoding：编码方式。告知解析引擎当前文档使用的字符集，默认值：ISO-8859-1</li><li>standalone：是否独立</li><li>取值：<ul><li>yes：不依赖其他文件</li><li>no：依赖其他文件</li></ul></li></ul></li><li><p>指令(了解)：结合css的</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml-stylesheet type&#x3D;&quot;text&#x2F;css&quot; href&#x3D;&quot;a.css&quot; ?&gt;</span><br></pre></td></tr></table></figure></li><li><p>标签：标签名称自定义的</p><ul><li>规则：<ul><li>名称可以包含字母、数字以及其他的字符 </li><li>名称不能以数字或者标点符号开始 </li><li>名称不能以字母 xml（或者 XML、Xml 等等）开始 </li><li>名称不能包含空格 </li></ul></li></ul></li><li><p>属性</p><p> id属性值唯一</p></li><li><p>文本：</p><pre><code>* CDATA区：在该区域中的数据会被原样展示  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;![CDATA[ 数据 ]]&gt;</span><br></pre></td></tr></table></figure></code></pre></li></ol><p><strong>感谢</strong></p><blockquote><p>黑马程序员</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>博客园添加live2d看板娘</title>
      <link href="/2020/06/18/%E5%8D%9A%E5%AE%A2%E5%9B%AD%E6%B7%BB%E5%8A%A0live2d%E7%9C%8B%E6%9D%BF%E5%A8%98/"/>
      <url>/2020/06/18/%E5%8D%9A%E5%AE%A2%E5%9B%AD%E6%B7%BB%E5%8A%A0live2d%E7%9C%8B%E6%9D%BF%E5%A8%98/</url>
      
        <content type="html"><![CDATA[<h2 id="博客园添加live2d看板娘"><a href="#博客园添加live2d看板娘" class="headerlink" title="博客园添加live2d看板娘"></a>博客园添加live2d看板娘</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>添加代码到<code>博客园侧边栏公告</code></p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200618231634171.png" alt="image-20200618231634171"></p><h5 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;eqcn.ajz.miesnfu.com&#x2F;wp-content&#x2F;plugins&#x2F;wp-3d-pony&#x2F;live2dw&#x2F;lib&#x2F;L2Dwidget.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    L2Dwidget.init(&#123;</span><br><span class="line">        &quot;model&quot;: &#123;</span><br><span class="line">            jsonPath: &quot;https:&#x2F;&#x2F;unpkg.com&#x2F;live2d-widget-model-shizuku@1.0.5&#x2F;assets&#x2F;shizuku.model.json&quot;,</span><br><span class="line">            &quot;scale&quot;: 1</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;display&quot;: &#123;</span><br><span class="line">            &quot;position&quot;: &quot;right&quot;,</span><br><span class="line">            &quot;width&quot;: 75,</span><br><span class="line">            &quot;height&quot;: 150,</span><br><span class="line">            &quot;hOffset&quot;: 0,</span><br><span class="line">            &quot;vOffset&quot;: -20</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;mobile&quot;: &#123;</span><br><span class="line">            &quot;show&quot;: true,</span><br><span class="line">            &quot;scale&quot;: 0.5</span><br><span class="line">        &#125;,</span><br><span class="line">        &quot;react&quot;: &#123;</span><br><span class="line">            &quot;opacityDefault&quot;: 0.7,</span><br><span class="line">            &quot;opacityOnHover&quot;: 0.2</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h4 id="选择人物"><a href="#选择人物" class="headerlink" title="选择人物"></a>选择人物</h4><p>在上面jsonPath切换就可以啦</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">黑猫：https:&#x2F;&#x2F;unpkg.com&#x2F;live2d-widget-model-hijiki@1.0.5&#x2F;assets&#x2F;hijiki.model.json</span><br><span class="line">萌娘：https:&#x2F;&#x2F;unpkg.com&#x2F;live2d-widget-model-shizuku@1.0.5&#x2F;assets&#x2F;shizuku.model.json</span><br><span class="line">白猫：https:&#x2F;&#x2F;unpkg.com&#x2F;live2d-widget-model-tororo@1.0.5&#x2F;assets&#x2F;tororo.model.json</span><br><span class="line">狗狗：https:&#x2F;&#x2F;unpkg.com&#x2F;live2d-widget-model-wanko@1.0.5&#x2F;assets&#x2F;wanko.model.json</span><br><span class="line">小可爱：https:&#x2F;&#x2F;unpkg.com&#x2F;live2d-widget-model-z16@1.0.5&#x2F;assets&#x2F;z16.model.json</span><br><span class="line">小可爱：https:&#x2F;&#x2F;unpkg.com&#x2F;live2d-widget-model-koharu@1.0.5&#x2F;assets&#x2F;koharu.model.json</span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200618231945901.png" alt="image-20200618231945901"></p><p>当然这个大小可以去调整的</p><p><strong>感谢</strong></p><blockquote><p>hexo+github+live2d+volantis</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>使用GitHub+Hexo+live2d搭建个人博客</title>
      <link href="/2020/06/18/%E4%BD%BF%E7%94%A8GitHub+Hexo+live2d%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/2020/06/18/%E4%BD%BF%E7%94%A8GitHub+Hexo+live2d%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h2 id="使用GitHub-Hexo-live2d搭建个人博客"><a href="#使用GitHub-Hexo-live2d搭建个人博客" class="headerlink" title="使用GitHub+Hexo+live2d搭建个人博客"></a>使用GitHub+Hexo+live2d搭建个人博客</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h4><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h4 id="创建博客目录"><a href="#创建博客目录" class="headerlink" title="创建博客目录"></a>创建博客目录</h4><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init username.github.io</span><br><span class="line"><span class="built_in">cd</span> username.github.io</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><h4 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean  #清理文件</span><br><span class="line">hexo g  #生成文件</span><br><span class="line">hexo s  #运行</span><br></pre></td></tr></table></figure><p>打开浏览器，输入地址<code>localhost:4000</code>即可看到博客页面</p><h4 id="安装主题"><a href="#安装主题" class="headerlink" title="安装主题"></a>安装主题</h4><p>主题官网可以查看</p><p><a href="https://hexo.io/themes/[](https://hexo.io/themes/)" target="_blank" rel="noopener">https://hexo.io/themes/[](https://hexo.io/themes/)</a></p><p>我使用的是volantis，文档地址</p><p><a href="https://volantis.js.org/v2/getting-started/[](https://volantis.js.org/v2/getting-started/)" target="_blank" rel="noopener">https://volantis.js.org/v2/getting-started/[](https://volantis.js.org/v2/getting-started/)</a></p><h5 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;xaoxuu&#x2F;hexo-theme-volantis themes&#x2F;volantis</span><br></pre></td></tr></table></figure><h5 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h5><p>项目根目录下_config.yml文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: volantis</span><br></pre></td></tr></table></figure><h5 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm i -S hexo-generator-search hexo-generator-json-content</span><br><span class="line">npm i -S hexo-renderer-stylus</span><br></pre></td></tr></table></figure><h4 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h4><p>一般在<code>/_config.yml</code>配置网页图标名称等</p><p>一般在<code>/theme/{theme}/_config.yml</code>配置主题等页面显示的问题</p><h4 id="部署到Github"><a href="#部署到Github" class="headerlink" title="部署到Github"></a>部署到Github</h4><p>在GitHub创建一个<code>&lt;username&gt;.github.io</code>的public仓库，如果你的用户名是xxx,则需要创建一个<code>xxx.github.io</code>的public仓库，这个步骤很简单就跳过了</p><h5 id="安装依赖-1"><a href="#安装依赖-1" class="headerlink" title="安装依赖"></a>安装依赖</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><h5 id="网站配置git"><a href="#网站配置git" class="headerlink" title="网站配置git"></a>网站配置git</h5><p>在网站的<code>_config.yml</code>中配置deploy</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: &lt;repository url&gt; #你的仓库地址</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><h5 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>需要Github的用户名和密码，填入即可</p><h5 id="现在的样子"><a href="#现在的样子" class="headerlink" title="现在的样子"></a>现在的样子</h5><p>当然这个需要你们根据主题里面的文档进行配置</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200618224637942.png" alt="image-20200618224637942"></p><h4 id="配置live2d"><a href="#配置live2d" class="headerlink" title="配置live2d"></a>配置live2d</h4><p>hexo可以直接当做插件使用live2d，不过很慢</p><h5 id="下载依赖"><a href="#下载依赖" class="headerlink" title="下载依赖"></a>下载依赖</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><h5 id="下载主题-1"><a href="#下载主题-1" class="headerlink" title="下载主题"></a>下载主题</h5><p>可以选择主题下载，选择不同的人物</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install live2d-widget-model-shizuku</span><br></pre></td></tr></table></figure><h5 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h5><p>在<code>/_config.yml</code>配置文件里面添加一段配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"># Live2D</span><br><span class="line">## https:&#x2F;&#x2F;github.com&#x2F;EYHN&#x2F;hexo-helper-live2d</span><br><span class="line">## https:&#x2F;&#x2F;l2dwidget.js.org&#x2F;docs&#x2F;class&#x2F;src&#x2F;index.js~L2Dwidget.html#instance-method-init</span><br><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  #enable: false</span><br><span class="line">  scriptFrom: local # 默认</span><br><span class="line">  pluginRootPath: live2dw&#x2F; # 插件在站点上的根目录(相对路径)</span><br><span class="line">  pluginJsPath: lib&#x2F; # 脚本文件相对与插件根目录路径</span><br><span class="line">  pluginModelPath: assets&#x2F; # 模型文件相对与插件根目录路径</span><br><span class="line">  # scriptFrom: jsdelivr # jsdelivr CDN</span><br><span class="line">  # scriptFrom: unpkg # unpkg CDN</span><br><span class="line">  # scriptFrom: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;live2d-widget@3.x&#x2F;lib&#x2F;L2Dwidget.min.js # 你的自定义 url</span><br><span class="line">  tagMode: false # 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span><br><span class="line">  debug: false # 调试, 是否在控制台输出日志</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-shizuku</span><br><span class="line">    # use: live2d-widget-model-wanko # npm-module package name</span><br><span class="line">    # use: wanko # 博客根目录&#x2F;live2d_models&#x2F; 下的目录名</span><br><span class="line">    # use: .&#x2F;wives&#x2F;wanko # 相对于博客根目录的路径</span><br><span class="line">    # use: https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;live2d-widget-model-wanko@1.0.5&#x2F;assets&#x2F;wanko.model.json # 你的自定义 url</span><br><span class="line">  display:</span><br><span class="line">    position: left</span><br><span class="line">    width: 150</span><br><span class="line">    height: 300</span><br><span class="line">  mobile:</span><br><span class="line">    show: true # 是否在移动设备上显示</span><br><span class="line">    scale: 0.5 # 移动设备上的缩放</span><br><span class="line">  react:</span><br><span class="line">    opacityDefault: 0.7</span><br><span class="line">    opacityOnHover: 0.8</span><br></pre></td></tr></table></figure><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200618224321379.png" alt="image-20200618224321379"></p><p>可以自己选择大小和位置</p><p>配置好了之后再次部署</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>下面那个人物等了一会再出现的</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200618224817520.png" alt="image-20200618224817520"></p><p><strong>感谢</strong></p><blockquote><p>hexo+github+live2d+volantis</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Go--Beego新建项目（解决不能访问的问题)</title>
      <link href="/2020/06/18/Go--Beego%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE%EF%BC%88%E8%A7%A3%E5%86%B3%E4%B8%8D%E8%83%BD%E8%AE%BF%E9%97%AE%E7%9A%84%E9%97%AE%E9%A2%98)/"/>
      <url>/2020/06/18/Go--Beego%E6%96%B0%E5%BB%BA%E9%A1%B9%E7%9B%AE%EF%BC%88%E8%A7%A3%E5%86%B3%E4%B8%8D%E8%83%BD%E8%AE%BF%E9%97%AE%E7%9A%84%E9%97%AE%E9%A2%98)/</url>
      
        <content type="html"><![CDATA[<h2 id="Go–Beego新建项目（解决不能访问的问题）"><a href="#Go–Beego新建项目（解决不能访问的问题）" class="headerlink" title="Go–Beego新建项目（解决不能访问的问题）"></a>Go–Beego新建项目（解决不能访问的问题）</h2><a id="more"></a><p><strong>博客说明</strong></p><blockquote><p>文章所涉及的资料来自互联网整理和个人总结，意在于个人学习和经验汇总，如有什么地方侵权，请联系本人删除，谢谢！</p></blockquote><h4 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h4><p>beego开发文档</p><p><a href="https://beego.me/docs/quickstart/new.md" target="_blank" rel="noopener">https://beego.me/docs/quickstart/new.md</a></p><h4 id="安装beego"><a href="#安装beego" class="headerlink" title="安装beego"></a>安装beego</h4><p>请首先安装beego和bee</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">go get github.com/astaxie/beego</span><br><span class="line">go get github.com/beego/bee</span><br></pre></td></tr></table></figure><h4 id="使用bee创建项目"><a href="#使用bee创建项目" class="headerlink" title="使用bee创建项目"></a>使用bee创建项目</h4><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200618100821341.png" alt="image-20200618100821341"></p><p>进入gopath下src里面</p><figure class="highlight zsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">MacBook-Air :: ~/go/src » bee new project</span><br></pre></td></tr></table></figure><p>在Goland中打开项目</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200618100955299.png" alt="image-20200618100955299"></p><p>运行项目</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bee run</span><br></pre></td></tr></table></figure><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200618101145126.png" alt="image-20200618101145126"></p><p>发现不能够访问</p><h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p>在conf/app.conf文件里面添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">httpaddr &#x3D; 127.0.0.1</span><br></pre></td></tr></table></figure><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200618101254197.png" alt="image-20200618101254197"></p><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>再次运行，发现可以了</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200618101358759.png" alt="image-20200618101358759"></p><p>在浏览器中打开</p><p><img src="https://guizimo.oss-cn-shanghai.aliyuncs.com/img/image-20200618101438981.png" alt="image-20200618101438981"></p><p><strong>感谢</strong></p><blockquote><p>beego</p><p>万能的网络</p><p>以及勤劳的自己</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
